.dashboard {
    background: linear-gradient(to bottom, hsl(var(--background)), #000);
    color: hsl(var(--foreground));
    font-family: var(--font-poppins), sans-serif;
    height: 100vh;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2.5rem;
    background-color: hsl(var(--card));
    border-bottom: 1px solid hsl(var(--border));
}

header h1 {
    font-size: 2.2rem;
    font-weight: 600;
    color: hsl(var(--primary));
    letter-spacing: 1px;
}

.last-updated {
    font-size: 1rem;
    color: hsl(var(--muted-foreground));
}

.cards-container {
    flex-grow: 1;
    padding: 1.5rem;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    max-width: 1920px;
    margin: 0 auto;
    justify-content: center;
    gap: 1.5rem;
    overflow-y: auto;
}

/* --- Card Redesign --- */
.card {
    background-color: hsl(var(--card));
    border-radius: 0.75rem;
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: left;
    border: 1px solid hsl(var(--border));
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out, border-color 0.2s ease-in-out;
    position: relative;
    overflow: hidden;
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px hsla(var(--primary) / 0.1);
    border-color: hsl(var(--primary));
}

.card::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 6px;
    background-color: hsl(var(--secondary));
    transition: background-color 0.2s ease-in-out;
}

.card-title {
    font-size: 1.75rem;
    font-weight: 600;
    line-height: 1.2;
    color: hsl(var(--foreground));
    margin-bottom: 0.5rem;
}

.card-value {
    font-size: 4.5rem;
    font-weight: 700;
    line-height: 1;
    color: hsl(var(--primary));
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: flex-start;
}

.card-value.not-assigned {
    color: hsl(var(--destructive));
    font-size: 2rem;
}

/* Color bar styles */
.card-fmc::before { background-color: #03A9F4; }
.card-rad::before { background-color: #8BC34A; }
.card-enf::before { background-color: #F44336; }
.card-adm::before { background-color: #FFC107; }
.card-default::before { background-color: #78909c; }

.card-footer-info {
    margin-top: 1rem;
    font-size: 1rem;
    font-weight: 500;
    color: hsl(var(--muted-foreground));
    text-align: right;
}

/* --- Fallback and Ticker Styles (remain the same) --- */
.no-classes-card {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100%;
    color: #777;
    text-align: center;
    grid-column: 1 / -1;
    background-color: rgba(0,0,0,0.2);
    border-radius: 0.75rem;
}

.message-icon {
    margin-bottom: 1.5rem;
    color: #555;
}

.message-text {
    font-size: 2em;
    font-weight: 600;
}

.message-subtext {
    font-size: 1.2em;
    margin-top: 0.5rem;
    color: #666;
}

.announcements-ticker-container {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(5px);
  color: white;
  overflow: hidden;
  padding: 12px 0;
  border-top: 1px solid hsl(var(--border));
  z-index: 20;
}

.announcements-ticker {
  display: flex;
  animation: ticker-animation 45s linear infinite;
  white-space: nowrap;
}

.announcement-item {
  margin-right: 70px; /* Mais espa√ßo entre os itens */
  font-size: 1.1rem;
  display: inline-flex;
  align-items: center;
}

.announcement-item .priority-urgente {
  color: #ff5252;
  font-weight: bold;
  margin-right: 10px;
  text-transform: uppercase;
}

.announcement-item .priority-normal {
  color: #ffc107;
  font-weight: bold;
  margin-right: 10px;
  text-transform: uppercase;
}

.announcement-item .title {
  font-weight: bold;
  margin-right: 15px;
}

.announcement-item .content {
    color: #e0e0e0;
}

@keyframes ticker-animation {
  0% { transform: translateX(100%); }
  100% { transform: translateX(-100%); }
}

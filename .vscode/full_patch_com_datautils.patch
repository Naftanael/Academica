diff -ruN /mnt/data/firebase_project/src/ai/dev.ts /mnt/data/refatorados/src/ai/dev.ts
--- /mnt/data/firebase_project/src/ai/dev.ts	2025-06-18 16:04:38.436617102 +0000
+++ /mnt/data/refatorados/src/ai/dev.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-// Flows will be imported for their side effects in this file.
diff -ruN /mnt/data/firebase_project/src/ai/genkit.ts /mnt/data/refatorados/src/ai/genkit.ts
--- /mnt/data/firebase_project/src/ai/genkit.ts	2025-06-18 16:04:38.437259114 +0000
+++ /mnt/data/refatorados/src/ai/genkit.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,7 +0,0 @@
-import {genkit} from 'genkit';
-import {googleAI} from '@genkit-ai/googleai';
-
-export const ai = genkit({
-  plugins: [googleAI()],
-  model: 'googleai/gemini-2.0-flash',
-});
diff -ruN /mnt/data/firebase_project/src/app/(tv)/layout.tsx /mnt/data/refatorados/src/app/(tv)/layout.tsx
--- /mnt/data/firebase_project/src/app/(tv)/layout.tsx	2025-06-18 16:04:38.438273071 +0000
+++ /mnt/data/refatorados/src/app/(tv)/layout.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,20 +0,0 @@
-
-import type { Metadata } from 'next';
-// import '../globals.css'; // Removed: globals.css is imported in the root layout
-
-export const metadata: Metadata = {
-  title: 'Painel TV - Academica', // General title for the TV section
-  description: 'Visualização otimizada para telas de TV.',
-};
-
-export default function TvGroupLayout({
-  children,
-}: Readonly<{
-  children: React.ReactNode;
-}>) {
-  return (
-    <>
-      {children}
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/(tv)/tv-display/layout.tsx /mnt/data/refatorados/src/app/(tv)/tv-display/layout.tsx
--- /mnt/data/firebase_project/src/app/(tv)/tv-display/layout.tsx	2025-06-18 16:04:38.439017663 +0000
+++ /mnt/data/refatorados/src/app/(tv)/tv-display/layout.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,24 +0,0 @@
-
-import type { Metadata } from 'next';
-// import '../../globals.css'; // Removed: globals.css is imported in the root layout
-
-export const metadata: Metadata = {
-  title: 'Guia de Salas - Academica',
-  description: 'Visualização de turmas e suas salas em tempo real.',
-};
-
-export default function TvDisplayLayout({
-  children,
-}: Readonly<{
-  children: React.ReactNode;
-}>) {
-  return (
-    <div> 
-      <div className="font-body antialiased bg-background text-foreground min-h-screen flex flex-col selection:bg-primary/30 selection:text-primary-foreground">
-        {children}
-      </div>
-    </div>
-  );
-}
-
-    
diff -ruN /mnt/data/firebase_project/src/app/(tv)/tv-display/page.tsx /mnt/data/refatorados/src/app/(tv)/tv-display/page.tsx
--- /mnt/data/firebase_project/src/app/(tv)/tv-display/page.tsx	2025-06-18 16:04:38.444734514 +0000
+++ /mnt/data/refatorados/src/app/(tv)/tv-display/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,67 +0,0 @@
-
-import { getClassGroups } from '@/lib/actions/classgroups';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import type { ClassGroup, Classroom, ClassGroupShift } from '@/types';
-import TvDisplayClient, { type TvDisplayInfo } from '@/components/tv-display/TvDisplayClient';
-
-function getCurrentShift(hour: number): ClassGroupShift {
-  if (hour >= 6 && hour < 12) {
-    return 'Manhã';
-  } else if (hour >= 12 && hour < 18) {
-    return 'Tarde';
-  } else {
-    return 'Noite';
-  }
-}
-
-export default async function TvDisplayPage() {
-  const allClassGroups = await getClassGroups();
-  const allClassrooms = await getClassrooms();
-
-  const now = new Date();
-  const currentHour = now.getHours();
-  const currentShift = getCurrentShift(currentHour);
-
-  const activeClassGroups = allClassGroups.filter(cg => {
-    // Ensure cg is a valid object with essential properties before proceeding
-    if (!cg || typeof cg.status !== 'string' || typeof cg.shift !== 'string') {
-      return false; // Skip malformed or incomplete class group objects
-    }
-
-    if (cg.status !== 'Em Andamento' || cg.shift !== currentShift) {
-      return false;
-    }
-
-    // If assignedClassroomId exists, check if the room is under maintenance
-    if (cg.assignedClassroomId) {
-      const assignedRoom = allClassrooms.find(room => room?.id === cg.assignedClassroomId);
-      // Safely access isUnderMaintenance, default to false if undefined (though schema implies it should exist)
-      if (assignedRoom && (assignedRoom.isUnderMaintenance === true)) {
-        return false; // Do not include if room is under maintenance
-      }
-    }
-    return true;
-  });
-
-  const displayData: TvDisplayInfo[] = activeClassGroups
-    .map(group => {
-      // Ensure group is a valid object with essential properties for display
-      if (!group || typeof group.id !== 'string' || typeof group.name !== 'string' || typeof group.shift !== 'string') {
-        return null; // Mark as invalid to be filtered out
-      }
-      const classroom = allClassrooms.find(room => room?.id === group.assignedClassroomId);
-      return {
-        id: group.id,
-        groupName: group.name,
-        shift: group.shift as ClassGroupShift, // Type assertion after validation
-        classroomName: classroom?.name ?? null, // Safely access classroom.name, provide null if not found or name is missing
-      };
-    })
-    .filter(item => item !== null) as TvDisplayInfo[]; // Filter out any null entries from malformed groups
-
-  return (
-    <TvDisplayClient
-      initialDisplayData={displayData}
-    />
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/api/data-status/route.ts /mnt/data/refatorados/src/app/api/data-status/route.ts
--- /mnt/data/firebase_project/src/app/api/data-status/route.ts	2025-06-18 16:04:38.445989875 +0000
+++ /mnt/data/refatorados/src/app/api/data-status/route.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,36 +0,0 @@
-
-import { NextResponse } from 'next/server';
-import fs from 'fs/promises';
-import path from 'path';
-
-const dataDir = path.join(process.cwd(), 'src', 'data');
-const classGroupsFilePath = path.join(dataDir, 'classgroups.json');
-const classroomsFilePath = path.join(dataDir, 'classrooms.json');
-
-async function getFileMtime(filePath: string): Promise<number | null> {
-  try {
-    const stats = await fs.stat(filePath);
-    return stats.mtimeMs;
-  } catch (error) {
-    // If file doesn't exist or other error, log it and return null.
-    // The client can decide how to interpret a null mtime (e.g., data potentially unavailable).
-    // console.error(`Error getting mtime for ${filePath}:`, (error as Error).message);
-    return null;
-  }
-}
-
-export async function GET() {
-  try {
-    const classGroupsMtime = await getFileMtime(classGroupsFilePath);
-    const classroomsMtime = await getFileMtime(classroomsFilePath);
-
-    return NextResponse.json({
-      classGroupsMtime,
-      classroomsMtime,
-      serverTime: Date.now() // Provides a server reference time for the client
-    });
-  } catch (error) {
-    console.error('Error in /api/data-status:', error);
-    return NextResponse.json({ error: 'Failed to get data status' }, { status: 500 });
-  }
-}
diff -ruN /mnt/data/firebase_project/src/app/classgroups/[id]/edit/page.tsx /mnt/data/refatorados/src/app/classgroups/[id]/edit/page.tsx
--- /mnt/data/firebase_project/src/app/classgroups/[id]/edit/page.tsx	2025-06-18 16:04:38.447672913 +0000
+++ /mnt/data/refatorados/src/app/classgroups/[id]/edit/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,59 +0,0 @@
-
-import { getClassGroupById } from '@/lib/actions/classgroups';
-import PageHeader from '@/components/shared/PageHeader';
-import { UsersRound, ArrowLeft } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import Link from 'next/link';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import EditClassGroupForm from '@/components/classgroups/EditClassGroupForm';
-
-export default async function EditClassGroupPage({
-  params,
-}: {
-  params: { id: string };
-}) {
-  const classGroup = await getClassGroupById(params.id);
-
-  if (!classGroup) {
-    return (
-      <>
-        <PageHeader title="Turma não encontrada" icon={UsersRound} />
-        <div className="max-w-2xl mx-auto text-center py-8">
-          <p className="text-lg text-muted-foreground mb-6">A turma que você está tentando editar não foi encontrada ou não existe.</p>
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/classgroups">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista de Turmas
-            </Link>
-          </Button>
-        </div>
-      </>
-    );
-  }
-
-  return (
-    <>
-      <PageHeader
-        title={`Editar Turma: ${classGroup.name}`}
-        description="Modifique os dados da turma abaixo."
-        icon={UsersRound}
-        actions={
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/classgroups">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista
-            </Link>
-          </Button>
-        }
-      />
-      <Card className="max-w-2xl mx-auto shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Dados da Turma</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <EditClassGroupForm classGroup={classGroup} />
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/classgroups/new/page.tsx /mnt/data/refatorados/src/app/classgroups/new/page.tsx
--- /mnt/data/firebase_project/src/app/classgroups/new/page.tsx	2025-06-18 16:04:38.448596801 +0000
+++ /mnt/data/refatorados/src/app/classgroups/new/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,36 +0,0 @@
-
-import Link from 'next/link';
-import { ArrowLeft, UsersRound } from 'lucide-react';
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import NewClassGroupForm from '@/components/classgroups/NewClassGroupForm';
-
-export default function NewClassGroupPage() {
-
-  return (
-    <>
-      <PageHeader
-        title="Nova Turma"
-        description="Preencha os dados para cadastrar uma nova turma."
-        icon={UsersRound}
-        actions={
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/classgroups">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista
-            </Link>
-          </Button>
-        }
-      />
-      <Card className="max-w-2xl mx-auto shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Dados da Turma</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <NewClassGroupForm />
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/classgroups/page.tsx /mnt/data/refatorados/src/app/classgroups/page.tsx
--- /mnt/data/firebase_project/src/app/classgroups/page.tsx	2025-06-18 16:04:38.449191764 +0000
+++ /mnt/data/refatorados/src/app/classgroups/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,33 +0,0 @@
-
-import Link from 'next/link';
-import { PlusCircle, UsersRound } from 'lucide-react';
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import { getClassGroups } from '@/lib/actions/classgroups';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import type { ClassGroup, Classroom } from '@/types';
-import ClassGroupsTable from '@/components/classgroups/ClassGroupsTable';
-
-export default async function ClassGroupsPage() {
-  const classGroups = await getClassGroups();
-  const classrooms = await getClassrooms();
-
-  return (
-    <>
-      <PageHeader
-        title="Turmas"
-        description="Gerencie as turmas da sua instituição."
-        icon={UsersRound}
-        actions={
-          <Button asChild className="bg-primary hover:bg-primary/90 text-primary-foreground">
-            <Link href="/classgroups/new">
-              <PlusCircle className="mr-2 h-4 w-4" />
-              Nova Turma
-            </Link>
-          </Button>
-        }
-      />
-      <ClassGroupsTable classGroups={classGroups} classrooms={classrooms} />
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/classrooms/[id]/edit/page.tsx /mnt/data/refatorados/src/app/classrooms/[id]/edit/page.tsx
--- /mnt/data/firebase_project/src/app/classrooms/[id]/edit/page.tsx	2025-06-18 16:04:38.450182502 +0000
+++ /mnt/data/refatorados/src/app/classrooms/[id]/edit/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,62 +0,0 @@
-// src/app/classgroups/[id]/edit/page.tsx
-
-import { getClassroomById } from '@/lib/actions/classrooms';
-import PageHeader from '@/components/shared/PageHeader';
-import { School, ArrowLeft } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import Link from 'next/link';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import EditClassroomForm from '@/components/classrooms/ClassroomEditFormNEW';
-
-export default async function EditClassroomPage({
-  params,
-}: {
-  params: { id: string };
-}) {
-  const classroom = await getClassroomById(params.id);
-
-  if (!classroom) {
-    return (
-      <>
-        <PageHeader title="Sala não encontrada" icon={School} />
-        <div className="max-w-2xl mx-auto text-center py-8">
-          <p className="text-lg text-muted-foreground mb-6">
-            A sala de aula que você está tentando editar não foi encontrada ou não existe.
-          </p>
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/classrooms">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista de Salas
-            </Link>
-          </Button>
-        </div>
-      </>
-    );
-  }
-
-  return (
-    <>
-      <PageHeader
-        title={`Editar Sala: ${classroom.name}`}
-        description="Modifique os dados da sala de aula abaixo."
-        icon={School}
-        actions={
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/classrooms">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista
-            </Link>
-          </Button>
-        }
-      />
-      <Card className="max-w-2xl mx-auto shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Dados da Sala</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <EditClassroomForm classroom={classroom} />
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/classrooms/new/page.tsx /mnt/data/refatorados/src/app/classrooms/new/page.tsx
--- /mnt/data/firebase_project/src/app/classrooms/new/page.tsx	2025-06-18 16:04:38.451487894 +0000
+++ /mnt/data/refatorados/src/app/classrooms/new/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,207 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { useRouter } from 'next/navigation';
-import Link from 'next/link';
-import { ArrowLeft, PlusCircle, School, Wrench } from 'lucide-react';
-
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import { Textarea } from '@/components/ui/textarea';
-import { Checkbox } from '@/components/ui/checkbox';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import { useToast } from '@/hooks/use-toast';
-import { createClassroom } from '@/lib/actions/classrooms';
-import { classroomCreateSchema, type ClassroomCreateValues } from '@/lib/schemas/classrooms';
-
-
-export default function NewClassroomPage() {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const form = useForm<ClassroomCreateValues>({
-    resolver: zodResolver(classroomCreateSchema),
-    defaultValues: {
-      name: '',
-      capacity: undefined, 
-      isUnderMaintenance: false,
-      maintenanceReason: '',
-      // resources and isLab are optional and not form fields here, so they'll be undefined
-    },
-  });
-
-  const isUnderMaintenance = form.watch('isUnderMaintenance');
-
-  async function onSubmit(values: ClassroomCreateValues) {
-    setIsPending(true);
-    const result = await createClassroom(values);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-        variant: 'default',
-      });
-      router.push('/classrooms');
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-             form.setError(field as keyof ClassroomCreateValues, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-         toast({
-          title: 'Erro de Validação',
-          description: "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-         toast({
-          title: 'Erro ao criar sala',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <>
-      <PageHeader
-        title="Nova Sala de Aula"
-        description="Preencha os dados para cadastrar uma nova sala."
-        icon={School}
-        actions={
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/classrooms">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista
-            </Link>
-          </Button>
-        }
-      />
-      <Card className="max-w-2xl mx-auto shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Dados da Sala</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <Form {...form}>
-            <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-              <FormField
-                control={form.control}
-                name="name"
-                render={({ field }) => (
-                  <FormItem>
-                    <FormLabel>Nome da Sala</FormLabel>
-                    <FormControl>
-                      <Input placeholder="Ex: Laboratório de Informática 1" {...field} />
-                    </FormControl>
-                    <FormDescription>
-                      O nome que identificará esta sala.
-                    </FormDescription>
-                    <FormMessage />
-                  </FormItem>
-                )}
-              />
-              <FormField
-                control={form.control}
-                name="capacity"
-                render={({ field }) => (
-                  <FormItem>
-                    <FormLabel>Capacidade</FormLabel>
-                    <FormControl>
-                      <Input 
-                        type="number" 
-                        placeholder="Ex: 30" 
-                        {...field} 
-                        onChange={event => field.onChange(event.target.value === '' ? undefined : +event.target.value)} 
-                        value={field.value === undefined ? '' : field.value}
-                      />
-                    </FormControl>
-                    <FormDescription>
-                      Número máximo de alunos que a sala comporta.
-                    </FormDescription>
-                    <FormMessage />
-                  </FormItem>
-                )}
-              />
-              <FormField
-                control={form.control}
-                name="isUnderMaintenance"
-                render={({ field }) => (
-                  <FormItem className="flex flex-row items-center space-x-3 space-y-0 rounded-md border p-4 shadow-sm bg-amber-50 dark:bg-amber-900/20">
-                     <Wrench className="h-6 w-6 text-amber-600 dark:text-amber-400" />
-                    <div className="space-y-0.5 leading-none">
-                      <FormLabel className="text-base">
-                        Em Manutenção?
-                      </FormLabel>
-                      <FormDescription>
-                        Marque esta opção se a sala estiver temporariamente indisponível para uso.
-                      </FormDescription>
-                    </div>
-                    <FormControl className="ml-auto!important mr-2">
-                       <Checkbox
-                        checked={field.value}
-                        onCheckedChange={field.onChange}
-                        aria-label="Marcar como em manutenção"
-                      />
-                    </FormControl>
-                  </FormItem>
-                )}
-              />
-              {isUnderMaintenance && (
-                <FormField
-                  control={form.control}
-                  name="maintenanceReason"
-                  render={({ field }) => (
-                    <FormItem>
-                      <FormLabel>Motivo da Manutenção (Opcional)</FormLabel>
-                      <FormControl>
-                        <Textarea
-                          placeholder="Ex: Ar condicionado quebrado, pintura, etc."
-                          {...field}
-                        />
-                      </FormControl>
-                      <FormDescription>
-                        Descreva brevemente o motivo pelo qual a sala está em manutenção.
-                      </FormDescription>
-                      <FormMessage />
-                    </FormItem>
-                  )}
-                />
-              )}
-              <div className="flex justify-end">
-                <Button type="submit" disabled={isPending} className="bg-primary hover:bg-primary/90 text-primary-foreground">
-                  {isPending ? "Salvando..." : (
-                    <>
-                      <PlusCircle className="mr-2 h-4 w-4" />
-                      Cadastrar Sala
-                    </>
-                  )}
-                </Button>
-              </div>
-            </form>
-          </Form>
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/classrooms/page.tsx /mnt/data/refatorados/src/app/classrooms/page.tsx
--- /mnt/data/firebase_project/src/app/classrooms/page.tsx	2025-06-18 16:04:38.452873783 +0000
+++ /mnt/data/refatorados/src/app/classrooms/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,33 +0,0 @@
-
-import Link from 'next/link';
-import { PlusCircle, School } from 'lucide-react';
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import { getClassGroups } from '@/lib/actions/classgroups';
-import ClassroomsDisplay from '@/components/classrooms/ClassroomsDisplay';
-import type { Classroom, ClassGroup } from '@/types';
-
-export default async function ClassroomsPage() {
-  const classrooms = await getClassrooms();
-  const classGroups = await getClassGroups();
-
-  return (
-    <>
-      <PageHeader
-        title="Salas de Aula"
-        description="Gerencie as salas de aula e veja sua ocupação atual."
-        icon={School}
-        actions={
-          <Button asChild className="bg-primary hover:bg-primary/90 text-primary-foreground">
-            <Link href="/classrooms/new">
-              <PlusCircle className="mr-2 h-4 w-4" />
-              Nova Sala
-            </Link>
-          </Button>
-        }
-      />
-      <ClassroomsDisplay classrooms={classrooms} classGroups={classGroups} />
-    </>
-  );
-}
Binary files /mnt/data/firebase_project/src/app/favicon.ico and /mnt/data/refatorados/src/app/favicon.ico differ
diff -ruN /mnt/data/firebase_project/src/app/globals.css /mnt/data/refatorados/src/app/globals.css
--- /mnt/data/firebase_project/src/app/globals.css	2025-06-18 16:04:38.454110683 +0000
+++ /mnt/data/refatorados/src/app/globals.css	1970-01-01 00:00:00.000000000 +0000
@@ -1,118 +0,0 @@
-
-@tailwind base;
-@tailwind components;
-@tailwind utilities;
-
-body {
-  font-family: var(--font-inter), sans-serif;
-}
-
-@layer base {
-  :root {
-    /* Academica Palette - Light Mode (as per PRD) */
-    --background: 210 27% 95%; /* Light gray #f0f4f8 */
-    --foreground: 0 0% 10%; /* Dark Gray/Black for text */
-
-    --card: 0 0% 100%; /* White */
-    --card-foreground: 0 0% 10%;
-
-    --popover: 0 0% 100%; /* White */
-    --popover-foreground: 0 0% 10%;
-
-    --primary: 207 68% 53%; /* Vibrant blue #3490dc */
-    --primary-foreground: 0 0% 100%; /* White for text on primary */
-
-    --secondary: 210 20% 94%; /* Very Light Gray */
-    --secondary-foreground: 0 0% 20%; /* Dark Gray for text on secondary */
-
-    --muted: 210 20% 96%; /* Very Light Gray, slightly lighter */
-    --muted-foreground: 210 10% 45%; /* Medium Gray */
-
-    --accent: 23 100% 60%; /* Warm orange #ff8533 */
-    --accent-foreground: 0 0% 10%; /* Dark text on accent */
-
-    --destructive: 0 84.2% 60.2%; /* Standard Red */
-    --destructive-foreground: 0 0% 98%; /* White */
-
-    --border: 210 15% 88%; /* Light Gray Border */
-    --input: 210 20% 96%;  /* Very Light Gray for input backgrounds */
-    --ring: 207 68% 53%;  /* Primary Blue for focus rings */
-
-    --radius: 0.5rem; /* Modern rounded corners */
-
-    /* Chart Colors - Derived from primary and accent */
-    --chart-1: 207 68% 53%; /* Primary Blue */
-    --chart-2: 23 100% 60%;  /* Accent Orange */
-    --chart-3: 207 68% 43%; /* Darker Primary Blue */
-    --chart-4: 23 100% 50%;  /* Darker Accent Orange */
-    --chart-5: 207 68% 63%; /* Lighter Primary Blue */
-    
-    /* Sidebar Colors - Light Mode */
-    --sidebar-background: 0 0% 100%; /* White, consistent with card */
-    --sidebar-foreground: 0 0% 15%;   /* Dark text for sidebar */
-    --sidebar-primary: 207 68% 53%;      /* Primary blue for active/hover */
-    --sidebar-primary-foreground: 0 0% 100%; 
-    --sidebar-accent: 207 60% 95%;         /* Very light blue for hover background */
-    --sidebar-accent-foreground: 207 68% 30%; /* Darker blue text on hover */
-    --sidebar-border: 210 15% 88%;      /* Light gray border, consistent with app border */
-    --sidebar-ring: 207 68% 53%;      /* Primary blue for focus */
-  }
-
-  .dark {
-    /* Academica Palette - Dark Mode (derived) */
-    --background: 210 10% 12%; /* Dark cool gray */
-    --foreground: 0 0% 95%;   /* Light Gray/White text */
-
-    --card: 210 10% 15%; /* Slightly lighter than background for cards */
-    --card-foreground: 0 0% 95%;
-
-    --popover: 210 10% 15%; 
-    --popover-foreground: 0 0% 95%;
-
-    --primary: 207 65% 65%; /* Slightly brighter/lighter blue for dark mode */
-    --primary-foreground: 0 0% 98%;
-
-    --secondary: 0 0% 20%; 
-    --secondary-foreground: 0 0% 90%;
-
-    --muted: 0 0% 18%; 
-    --muted-foreground: 0 0% 65%; 
-
-    --accent: 23 100% 65%; /* Brighter/lighter accent orange for dark mode */
-    --accent-foreground: 0 0% 10%; /* Dark text for contrast */
-
-    --destructive: 0 70% 55%;
-    --destructive-foreground: 0 0% 98%;
-
-    --border: 0 0% 25%; 
-    --input: 0 0% 20%;  
-    --ring: 207 65% 65%;  
-    
-    /* Chart Colors - Dark Mode */
-    --chart-1: 207 65% 65%;
-    --chart-2: 23 100% 65%;
-    --chart-3: 207 65% 55%;
-    --chart-4: 23 100% 55%;
-    --chart-5: 207 65% 75%;
-
-    /* Sidebar Colors - Dark Mode */
-    --sidebar-background: 210 10% 12%; /* Matches app dark background */
-    --sidebar-foreground: 0 0% 95%;   
-    --sidebar-primary: 207 65% 65%;      /* Primary blue (dark mode version) */
-    --sidebar-primary-foreground: 0 0% 98%; 
-    --sidebar-accent: 207 40% 20%;        /* Darker blue-ish gray for hover background */
-    --sidebar-accent-foreground: 0 0% 95%; 
-    --sidebar-border: 0 0% 25%;     /* Matches app dark border */
-    --sidebar-ring: 207 65% 65%;      /* Primary blue (dark mode version) */
-  }
-}
-
-@layer base {
-  * {
-    @apply border-border;
-  }
-  body {
-    @apply bg-background text-foreground;
-    font-feature-settings: "rlig" 1, "calt" 1;
-  }
-}
diff -ruN /mnt/data/firebase_project/src/app/layout.tsx /mnt/data/refatorados/src/app/layout.tsx
--- /mnt/data/firebase_project/src/app/layout.tsx	2025-06-18 16:04:38.454532369 +0000
+++ /mnt/data/refatorados/src/app/layout.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,61 +0,0 @@
-
-'use client';
-
-import { Inter } from 'next/font/google';
-import './globals.css';
-import { Toaster } from '@/components/ui/toaster';
-import AppShell from '@/components/layout/AppShell';
-import { usePathname } from 'next/navigation';
-import { useState, useEffect, type ReactNode } from 'react'; // Added useState, useEffect
-
-const inter = Inter({ subsets: ['latin'], variable: '--font-inter' });
-
-// Metadados devem ser exportados de Server Components (ex: page.tsx ou layouts específicos).
-
-export default function RootLayout({
-  children,
-}: Readonly<{
-  children: ReactNode;
-}>) {
-  const pathname = usePathname();
-  const [hasMounted, setHasMounted] = useState(false);
-
-  useEffect(() => {
-    setHasMounted(true);
-  }, []);
-
-  // Render a minimal, consistent structure until the client has mounted
-  // This avoids hydration errors caused by pathname-dependent logic.
-  if (!hasMounted) {
-    return (
-      <html lang="pt-BR" suppressHydrationWarning>
-        <head>
-          {/* Keep critical head elements like meta charset, viewport if needed, or next/font links */}
-        </head>
-        <body className={`${inter.variable} font-body antialiased`}>
-          {/* Optional: You can render a global loading spinner here */}
-        </body>
-      </html>
-    );
-  }
-
-  const isTvRoute = pathname.startsWith('/tv-display');
-
-  return (
-    <html lang="pt-BR" suppressHydrationWarning>
-      <head>
-        {/* Manual Google Font links removed as next/font handles Inter */}
-      </head>
-      <body className={`${inter.variable} font-body antialiased`}>
-        {isTvRoute ? (
-          <>
-            {children} {/* TV routes get children directly, no AppShell */}
-          </>
-        ) : (
-          <AppShell>{children}</AppShell> /* Other routes get AppShell */
-        )}
-        <Toaster /> {/* Single Toaster for the whole app */}
-      </body>
-    </html>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/page.tsx /mnt/data/refatorados/src/app/page.tsx
--- /mnt/data/firebase_project/src/app/page.tsx	2025-06-18 16:04:38.455769355 +0000
+++ /mnt/data/refatorados/src/app/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,202 +0,0 @@
-
-import { readData } from '@/lib/data-utils';
-import type { ClassGroup, DashboardStats, Classroom, DayOfWeek } from '@/types'; 
-import PageHeader from '@/components/shared/PageHeader';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import { Badge } from '@/components/ui/badge';
-import { CalendarClock, Presentation, UsersRound, TrendingUp, LayoutDashboard, Activity } from 'lucide-react';
-import Link from 'next/link';
-import { format, parseISO, differenceInDays, isValid, isAfter } from 'date-fns'; // Added isAfter
-import { ptBR } from 'date-fns/locale';
-import { DAYS_OF_WEEK } from '@/lib/constants';
-import ClassroomOccupancyChart from '@/components/dashboard/ClassroomOccupancyChart';
-
-interface DailyOccupancy {
-  day: string; // Abreviação, ex: "Seg"
-  day_full: string; // Nome completo, ex: "Segunda-feira"
-  turmas: number;
-}
-
-async function getDashboardData() {
-  const classrooms = await readData<Classroom>('classrooms.json');
-  const classGroups = await readData<ClassGroup>('classgroups.json');
-
-  const currentDate = new Date();
-  currentDate.setHours(0, 0, 0, 0); // Normalize current date for accurate day comparisons
-
-  const activeClassGroupsData = classGroups.filter(cg => cg.status === 'Em Andamento');
-  const plannedClassGroups = classGroups.filter(cg => cg.status === 'Planejada');
-
-  const stats: DashboardStats = {
-    totalClassGroups: classGroups.length,
-    activeClassGroups: activeClassGroupsData.length,
-    plannedClassGroups: plannedClassGroups.length,
-    totalClassrooms: classrooms.length,
-  };
-
-  const detailedActiveClassGroups = activeClassGroupsData.map(cg => {
-    let parsedStartDate: Date | null = null;
-    let parsedEndDate: Date | null = null;
-    let daysRemaining: number | undefined = undefined;
-    let formattedStartDate = 'Data Início Inválida';
-    let formattedEndDate = 'Data Fim Inválida';
-    let nearEnd = false; // Default to false
-
-    // Validate and parse start date
-    if (typeof cg.startDate === 'string') {
-        const tempStartDate = parseISO(cg.startDate);
-        if (isValid(tempStartDate)) {
-            parsedStartDate = tempStartDate;
-            formattedStartDate = format(parsedStartDate, 'dd/MM/yyyy');
-        }
-    }
-
-    // Validate and parse end date
-    if (typeof cg.endDate === 'string') {
-        const tempEndDate = parseISO(cg.endDate);
-        if (isValid(tempEndDate)) {
-            parsedEndDate = tempEndDate;
-            formattedEndDate = format(parsedEndDate, 'dd/MM/yyyy');
-        }
-    }
-
-    // Calculate daysRemaining and nearEnd only if both dates are valid
-    if (parsedStartDate && parsedEndDate) {
-        // Ensure startDate is not after endDate before calculating difference
-        if (!isAfter(parsedStartDate, parsedEndDate)) {
-            daysRemaining = differenceInDays(parsedEndDate, currentDate);
-            // A turma está "perto do fim" se termina nos próximos 7 dias (inclusive hoje)
-            // E não já terminou (daysRemaining >= 0)
-            nearEnd = daysRemaining !== undefined && daysRemaining <= 7 && daysRemaining >= 0;
-        } else {
-            // Handle case where start date is after end date if necessary
-            // For now, it will remain 'Data Início Inválida' or 'Data Fim Inválida' if one is invalid
-            // or formatted dates if both are valid but in wrong order.
-            // daysRemaining will be undefined, nearEnd will be false.
-        }
-    }
-
-    return {
-      ...cg,
-      formattedStartDate,
-      formattedEndDate,
-      nearEnd,
-    };
-  });
-
-  // Calculate daily classroom occupancy
-  const classroomMap = new Map(classrooms.map(room => [room.id, room]));
-  const dailyOccupancyCounts: { [key in DayOfWeek]: number } = {
-    'Segunda': 0,
-    'Terça': 0,
-    'Quarta': 0,
-    'Quinta': 0,
-    'Sexta': 0,
-    'Sábado': 0,
-    'Domingo': 0,
-  };
-
-  activeClassGroupsData.forEach(cg => {
-    if (cg.assignedClassroomId) {
-      const classroom = classroomMap.get(cg.assignedClassroomId);
-      // Count only if classroom exists and is not under maintenance
-      if (classroom && !classroom.isUnderMaintenance) {
-        // Ensure classDays is an array before trying to iterate over it
-        if (Array.isArray(cg.classDays)) {
-          cg.classDays.forEach(day => {
-            if (dailyOccupancyCounts[day] !== undefined) {
-              dailyOccupancyCounts[day]++;
-            }
-          });
-        }
-      }
-    }
-  });
-
-  const classroomOccupancyChartData: DailyOccupancy[] = DAYS_OF_WEEK.map(day => ({
-    day: day.substring(0, 3), // Abbreviated for XAxis label
-    day_full: day, // Full name for Tooltip
-    turmas: dailyOccupancyCounts[day],
-  }));
-
-  return { stats, activeClassGroups: detailedActiveClassGroups, currentDate, classroomOccupancyChartData };
-}
-
-
-export default async function DashboardPage() {
-  const { stats, activeClassGroups, currentDate, classroomOccupancyChartData } = await getDashboardData();
-
-  const statItems = [
-    { title: 'Total de Turmas', value: stats.totalClassGroups, icon: UsersRound, color: 'text-primary' },
-    { title: 'Turmas em Andamento', value: stats.activeClassGroups, icon: TrendingUp, color: 'text-green-500' }, 
-    { title: 'Turmas Planejadas', value: stats.plannedClassGroups, icon: CalendarClock, color: 'text-orange-500' }, 
-    { title: 'Total de Salas', value: stats.totalClassrooms, icon: Presentation, color: 'text-blue-500' },
-  ];
-
-  return (
-    <>
-      <PageHeader 
-        title="Dashboard" 
-        description={`Bem-vindo(a) ao Painel Academica. Hoje é ${format(currentDate, "EEEE, dd 'de' MMMM 'de' yyyy", { locale: ptBR })}.`}
-        icon={LayoutDashboard} 
-      />
-
-      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-8">
-        {statItems.map((item) => (
-          <Card key={item.title} className="shadow-lg hover:shadow-xl transition-shadow duration-300 rounded-lg">
-            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
-              <CardTitle className="text-sm font-medium text-muted-foreground font-headline">{item.title}</CardTitle>
-              <item.icon className={`h-5 w-5 ${item.color}`} />
-            </CardHeader>
-            <CardContent>
-              <div className="text-3xl font-bold text-foreground">{item.value}</div>
-            </CardContent>
-          </Card>
-        ))}
-      </div>
-
-      <section className="mb-8">
-        <ClassroomOccupancyChart data={classroomOccupancyChartData} />
-      </section>
-
-      <section>
-        <Card className="shadow-lg rounded-lg">
-          <CardHeader>
-            <CardTitle className="text-xl font-semibold font-headline">Turmas em Andamento ({activeClassGroups.length})</CardTitle>
-          </CardHeader>
-          <CardContent>
-            {activeClassGroups.length === 0 ? (
-              <div className="p-6 text-center text-muted-foreground">
-                Nenhuma turma em andamento no momento.
-              </div>
-            ) : (
-              <div className="grid gap-6 md:grid-cols-2 xl:grid-cols-3">
-                {activeClassGroups.map((cg) => (
-                  <Card key={cg.id} className={`shadow-md hover:shadow-lg transition-shadow duration-300 rounded-md ${cg.nearEnd ? 'border-2 border-destructive' : 'border-border'}`}>
-                    <CardHeader>
-                      <div className="flex justify-between items-start">
-                        <CardTitle className="text-lg font-semibold font-headline">{cg.name}</CardTitle>
-                        {cg.nearEnd && <Badge variant="destructive">Perto do Fim</Badge>}
-                      </div>
-                      <p className="text-sm text-muted-foreground">
-                        {cg.shift} - {cg.year}
-                      </p>
-                    </CardHeader>
-                    <CardContent className="space-y-2">
-                      <p className="text-sm">
-                        <span className="font-medium">Período:</span> {cg.formattedStartDate} - {cg.formattedEndDate}
-                      </p>
-                      <Link href={`/classgroups/${cg.id}/edit`} className="text-sm text-primary hover:underline block mt-2 font-medium">
-                        Ver Detalhes / Editar
-                      </Link>
-                    </CardContent>
-                  </Card>
-                ))}
-              </div>
-            )}
-          </CardContent>
-        </Card>
-      </section>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/reservations/new-event/page.tsx /mnt/data/refatorados/src/app/reservations/new-event/page.tsx
--- /mnt/data/firebase_project/src/app/reservations/new-event/page.tsx	2025-06-18 16:04:38.457993849 +0000
+++ /mnt/data/refatorados/src/app/reservations/new-event/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,39 +0,0 @@
-
-import Link from 'next/link';
-import { ArrowLeft, CalendarPlus } from 'lucide-react';
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import NewEventReservationForm from '@/components/reservations/NewEventReservationForm';
-import type { Classroom } from '@/types';
-
-export default async function NewEventReservationPage() {
-  const classrooms: Classroom[] = await getClassrooms();
-
-  return (
-    <>
-      <PageHeader
-        title="Nova Reserva de Evento"
-        description="Preencha os dados para agendar uma reserva pontual para uma sala."
-        icon={CalendarPlus}
-        actions={
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/reservations">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista de Reservas
-            </Link>
-          </Button>
-        }
-      />
-      <Card className="max-w-2xl mx-auto shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Detalhes da Reserva de Evento</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <NewEventReservationForm classrooms={classrooms} />
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/reservations/new-recurring/page.tsx /mnt/data/refatorados/src/app/reservations/new-recurring/page.tsx
--- /mnt/data/firebase_project/src/app/reservations/new-recurring/page.tsx	2025-06-18 16:04:38.458985946 +0000
+++ /mnt/data/refatorados/src/app/reservations/new-recurring/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,48 +0,0 @@
-
-import Link from 'next/link';
-import { ArrowLeft, CalendarPlus } from 'lucide-react';
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import { getClassGroups } from '@/lib/actions/classgroups';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import { getRecurringReservations } from '@/lib/actions/recurring_reservations'; 
-import NewRecurringReservationFormClientLoader from '@/components/reservations/NewRecurringReservationFormClientLoader';
-import type { ClassGroup, Classroom, ClassroomRecurringReservation } from '@/types'; 
-
-
-export default async function NewRecurringReservationPage() {
-  const classGroups = await getClassGroups();
-  const classrooms = await getClassrooms();
-  const allRecurringReservations = await getRecurringReservations(); 
-
-  return (
-    <>
-      <PageHeader
-        title="Nova Reserva Recorrente"
-        description="Preencha os dados para agendar uma reserva recorrente para uma turma."
-        icon={CalendarPlus}
-        actions={
-          <Button variant="outline" asChild className="hover:bg-accent hover:text-accent-foreground">
-            <Link href="/reservations">
-              <ArrowLeft className="mr-2 h-4 w-4" />
-              Voltar para Lista de Reservas
-            </Link>
-          </Button>
-        }
-      />
-      <Card className="max-w-2xl mx-auto shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Detalhes da Reserva Recorrente</CardTitle>
-        </CardHeader>
-        <CardContent>
-          <NewRecurringReservationFormClientLoader 
-            classGroups={classGroups} 
-            classrooms={classrooms} 
-            allRecurringReservations={allRecurringReservations} 
-          />
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/reservations/page.tsx /mnt/data/refatorados/src/app/reservations/page.tsx
--- /mnt/data/firebase_project/src/app/reservations/page.tsx	2025-06-18 16:04:38.459699592 +0000
+++ /mnt/data/refatorados/src/app/reservations/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,222 +0,0 @@
-
-import Link from 'next/link';
-import { PlusCircle, ListChecks, CalendarPlus, Edit, Trash2, CalendarClock } from 'lucide-react';
-import PageHeader from '@/components/shared/PageHeader';
-import { Button } from '@/components/ui/button';
-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
-import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
-import { Badge } from '@/components/ui/badge';
-import { getRecurringReservations } from '@/lib/actions/recurring_reservations';
-import { getEventReservations } from '@/lib/actions/event_reservations';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import { getClassGroups } from '@/lib/actions/classgroups';
-import type { ClassroomRecurringReservation, EventReservation, Classroom, ClassGroup, DayOfWeek } from '@/types';
-import { format, parseISO, isValid } from 'date-fns'; // Added isValid
-import { ptBR } from 'date-fns/locale';
-import { DeleteRecurringReservationButton } from '@/components/reservations/DeleteRecurringReservationButton';
-import { DeleteEventReservationButton } from '@/components/reservations/DeleteEventReservationButton';
-
-interface EnrichedRecurringReservation extends ClassroomRecurringReservation {
-  classroomName: string;
-  classGroupName: string;
-  classGroupDays: DayOfWeek[];
-  formattedStartDate: string;
-  formattedEndDate: string;
-}
-
-interface EnrichedEventReservation extends EventReservation {
-  classroomName: string;
-  formattedDate: string;
-  formattedStartTime: string;
-  formattedEndTime: string;
-}
-
-export default async function ReservationsPage() {
-  const recurringReservationsData = await getRecurringReservations();
-  const eventReservationsData = await getEventReservations();
-  const classrooms = await getClassrooms();
-  const classGroups = await getClassGroups();
-
-  const classroomMap = new Map(classrooms.map(c => [c.id, c.name]));
-  const classGroupMap = new Map(classGroups.map(cg => [cg.id, { name: cg.name, classDays: cg.classDays }]));
-
-  const enrichedRecurringReservations: EnrichedRecurringReservation[] = recurringReservationsData.map(res => {
-    const classGroupDetails = classGroupMap.get(res.classGroupId);
-    const parsedStartDate = parseISO(res.startDate);
-    const parsedEndDate = parseISO(res.endDate);
-    return {
-      ...res,
-      classroomName: classroomMap.get(res.classroomId) || 'Sala desconhecida',
-      classGroupName: classGroupDetails?.name || 'Turma desconhecida',
-      classGroupDays: classGroupDetails?.classDays || [],
-      formattedStartDate: isValid(parsedStartDate) ? format(parsedStartDate, "dd/MM/yy", { locale: ptBR }) : 'Data Inválida',
-      formattedEndDate: isValid(parsedEndDate) ? format(parsedEndDate, "dd/MM/yy", { locale: ptBR }) : 'Data Inválida',
-    };
-  });
-
-  const enrichedEventReservations: EnrichedEventReservation[] = eventReservationsData.map(event => {
-    const parsedDate = parseISO(event.date);
-    return {
-      ...event,
-      classroomName: classroomMap.get(event.classroomId) || 'Sala desconhecida',
-      formattedDate: isValid(parsedDate) ? format(parsedDate, "dd/MM/yyyy", { locale: ptBR }) : 'Data Inválida',
-      formattedStartTime: event.startTime, // Already HH:mm
-      formattedEndTime: event.endTime, // Already HH:mm
-    };
-  });
-
-  return (
-    <>
-      <PageHeader
-        title="Gerenciar Reservas de Sala"
-        description="Crie e visualize reservas recorrentes para turmas e reservas pontuais para eventos."
-        icon={ListChecks}
-        actions={
-          <div className="flex flex-col sm:flex-row gap-2">
-            <Button asChild className="bg-primary hover:bg-primary/90 text-primary-foreground">
-              <Link href="/reservations/new-recurring">
-                <CalendarClock className="mr-2 h-4 w-4" />
-                Nova Reserva Recorrente
-              </Link>
-            </Button>
-            <Button asChild className="bg-accent hover:bg-accent/90 text-accent-foreground">
-              <Link href="/reservations/new-event">
-                <CalendarPlus className="mr-2 h-4 w-4" />
-                Nova Reserva de Evento
-              </Link>
-            </Button>
-          </div>
-        }
-      />
-      <div className="space-y-8">
-        <Card className="shadow-lg rounded-lg">
-          <CardHeader>
-            <div className="flex justify-between items-center">
-              <CardTitle className="font-headline text-xl">Reservas Recorrentes ({enrichedRecurringReservations.length})</CardTitle>
-              <Button variant="ghost" size="sm" asChild>
-                <Link href="/reservations/new-recurring">
-                  <PlusCircle className="mr-2 h-4 w-4" /> Adicionar
-                </Link>
-              </Button>
-            </div>
-            <CardDescription>Reservas de salas que se repetem para turmas específicas.</CardDescription>
-          </CardHeader>
-          <CardContent>
-            {enrichedRecurringReservations.length === 0 ? (
-              <div className="text-center text-muted-foreground py-12">
-                <CalendarClock className="mx-auto h-16 w-16 mb-6 text-primary" />
-                <h3 className="text-xl font-semibold mb-2 text-foreground">Nenhuma reserva recorrente encontrada.</h3>
-                <Button variant="link" asChild className="mt-2">
-                  <Link href="/reservations/new-recurring">
-                    Criar Primeira Reserva Recorrente
-                  </Link>
-                </Button>
-              </div>
-            ) : (
-              <div className="overflow-x-auto">
-                <Table>
-                  <TableHeader>
-                    <TableRow>
-                      <TableHead className="font-semibold">Propósito</TableHead>
-                      <TableHead className="font-semibold">Turma</TableHead>
-                      <TableHead className="font-semibold">Sala</TableHead>
-                      <TableHead className="font-semibold">Dias da Turma</TableHead>
-                      <TableHead className="font-semibold">Turno</TableHead>
-                      <TableHead className="font-semibold">Período</TableHead>
-                      <TableHead className="text-right font-semibold">Ações</TableHead>
-                    </TableRow>
-                  </TableHeader>
-                  <TableBody>
-                    {enrichedRecurringReservations.map((res: EnrichedRecurringReservation) => (
-                      <TableRow key={res.id} className="hover:bg-muted/50">
-                        <TableCell className="font-medium text-foreground">{res.purpose}</TableCell>
-                        <TableCell>{res.classGroupName}</TableCell>
-                        <TableCell>{res.classroomName}</TableCell>
-                        <TableCell>
-                          {res.classGroupDays && res.classGroupDays.length > 0 ? (
-                            <div className="flex flex-wrap gap-1">
-                              {res.classGroupDays.map(day => (
-                                <Badge key={day} variant="secondary" className="text-xs font-medium">
-                                  {day.substring(0,3)}
-                                </Badge>
-                              ))}
-                            </div>
-                          ) : (
-                            <span className="text-muted-foreground text-xs">N/D</span>
-                          )}
-                        </TableCell>
-                        <TableCell>{res.shift}</TableCell>
-                        <TableCell>{res.formattedStartDate} - {res.formattedEndDate}</TableCell>
-                        <TableCell className="text-right space-x-1">
-                          <DeleteRecurringReservationButton reservationId={res.id} />
-                        </TableCell>
-                      </TableRow>
-                    ))}
-                  </TableBody>
-                </Table>
-              </div>
-            )}
-          </CardContent>
-        </Card>
-
-        <Card className="shadow-lg rounded-lg">
-          <CardHeader>
-             <div className="flex justify-between items-center">
-              <CardTitle className="font-headline text-xl">Reservas de Eventos (Pontuais) ({enrichedEventReservations.length})</CardTitle>
-               <Button variant="ghost" size="sm" asChild>
-                <Link href="/reservations/new-event">
-                  <PlusCircle className="mr-2 h-4 w-4" /> Adicionar
-                </Link>
-              </Button>
-            </div>
-            <CardDescription>Reservas únicas para eventos, reuniões ou atividades específicas.</CardDescription>
-          </CardHeader>
-          <CardContent>
-            {enrichedEventReservations.length === 0 ? (
-              <div className="text-center text-muted-foreground py-12">
-                <CalendarPlus className="mx-auto h-16 w-16 mb-6 text-primary" />
-                <h3 className="text-xl font-semibold mb-2 text-foreground">Nenhuma reserva de evento encontrada.</h3>
-                 <Button variant="link" asChild className="mt-2">
-                  <Link href="/reservations/new-event">
-                    Criar Primeira Reserva de Evento
-                  </Link>
-                </Button>
-              </div>
-            ) : (
-              <div className="overflow-x-auto">
-                <Table>
-                  <TableHeader>
-                    <TableRow>
-                      <TableHead className="font-semibold">Título do Evento</TableHead>
-                      <TableHead className="font-semibold">Sala</TableHead>
-                      <TableHead className="font-semibold">Data</TableHead>
-                      <TableHead className="font-semibold">Horário</TableHead>
-                      <TableHead className="font-semibold">Reservado Por</TableHead>
-                      <TableHead className="font-semibold">Detalhes</TableHead>
-                      <TableHead className="text-right font-semibold">Ações</TableHead>
-                    </TableRow>
-                  </TableHeader>
-                  <TableBody>
-                    {enrichedEventReservations.map((event: EnrichedEventReservation) => (
-                      <TableRow key={event.id} className="hover:bg-muted/50">
-                        <TableCell className="font-medium text-foreground">{event.title}</TableCell>
-                        <TableCell>{event.classroomName}</TableCell>
-                        <TableCell>{event.formattedDate}</TableCell>
-                        <TableCell>{event.formattedStartTime} - {event.formattedEndTime}</TableCell>
-                        <TableCell>{event.reservedBy}</TableCell>
-                        <TableCell className="text-xs text-muted-foreground max-w-xs truncate" title={event.details}>{event.details || '-'}</TableCell>
-                        <TableCell className="text-right space-x-1">
-                           <DeleteEventReservationButton reservationId={event.id} />
-                        </TableCell>
-                      </TableRow>
-                    ))}
-                  </TableBody>
-                </Table>
-              </div>
-            )}
-          </CardContent>
-        </Card>
-      </div>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/app/room-availability/page.tsx /mnt/data/refatorados/src/app/room-availability/page.tsx
--- /mnt/data/firebase_project/src/app/room-availability/page.tsx	2025-06-18 16:04:38.460353124 +0000
+++ /mnt/data/refatorados/src/app/room-availability/page.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,48 +0,0 @@
-
-import PageHeader from '@/components/shared/PageHeader';
-import { CalendarDays, School } from 'lucide-react';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import { getClassrooms } from '@/lib/actions/classrooms';
-import { getClassGroups } from '@/lib/actions/classgroups';
-import RoomAvailabilityClientLoader from '@/components/room-availability/RoomAvailabilityClientLoader';
-import type { Classroom, ClassGroup } from '@/types';
-
-export default async function RoomAvailabilityPage() {
-  const classrooms = await getClassrooms();
-  const classGroups = await getClassGroups();
-
-  return (
-    <>
-      <PageHeader
-        title="Disponibilidade de Salas"
-        description="Selecione um intervalo de datas para visualizar a ocupação das salas de aula."
-        icon={CalendarDays}
-      />
-      <Card className="shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Filtro e Quadro de Ocupação Semanal</CardTitle>
-        </CardHeader>
-        <CardContent>
-          {classrooms.length === 0 && classGroups.length === 0 ? (
-            <div className="text-center text-muted-foreground py-8">
-              <School className="mx-auto h-12 w-12 mb-4 text-primary" />
-              <p className="text-lg">Nenhuma sala de aula ou turma cadastrada.</p>
-              <p className="text-sm mt-2">Cadastre salas e turmas para visualizar a disponibilidade.</p>
-            </div>
-          ) : classrooms.length === 0 ? (
-             <div className="text-center text-muted-foreground py-8">
-              <School className="mx-auto h-12 w-12 mb-4 text-primary" />
-              <p className="text-lg">Nenhuma sala de aula cadastrada.</p>
-              <p className="text-sm mt-2">Cadastre salas para visualizar a disponibilidade.</p>
-            </div>
-          ) : (
-            <RoomAvailabilityClientLoader initialClassrooms={classrooms} initialClassGroups={classGroups} />
-          )}
-           <p className="text-xs text-muted-foreground mt-6">
-            Nota: Este quadro reflete a ocupação padrão com base nos dias de aula e turnos das turmas ativas no período selecionado. Reservas pontuais não estão incluídas.
-          </p>
-        </CardContent>
-      </Card>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classgroups/ChangeClassroomDialog.tsx /mnt/data/refatorados/src/components/classgroups/ChangeClassroomDialog.tsx
--- /mnt/data/firebase_project/src/components/classgroups/ChangeClassroomDialog.tsx	2025-06-18 16:04:38.461982425 +0000
+++ /mnt/data/refatorados/src/components/classgroups/ChangeClassroomDialog.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,174 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { Home, Save, Wrench } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogFooter,
-  DialogHeader,
-  DialogTitle,
-  DialogTrigger,
-  DialogClose,
-} from '@/components/ui/dialog';
-import {
-  Select,
-  SelectContent,
-  SelectItem,
-  SelectTrigger,
-  SelectValue,
-} from '@/components/ui/select';
-import { Label } from '@/components/ui/label';
-import { useToast } from '@/hooks/use-toast';
-import { assignClassroomToClassGroup } from '@/lib/actions/classgroups';
-import type { ClassGroup, Classroom } from '@/types';
-import {
-  Tooltip,
-  TooltipContent,
-  TooltipProvider,
-  TooltipTrigger,
-} from "@/components/ui/tooltip";
-
-interface ChangeClassroomDialogProps {
-  classGroup: ClassGroup;
-  availableClassrooms: Classroom[];
-  triggerButton?: React.ReactNode;
-}
-
-export function ChangeClassroomDialog({ classGroup, availableClassrooms, triggerButton }: ChangeClassroomDialogProps) {
-  const { toast } = useToast();
-  const [selectedClassroomId, setSelectedClassroomId] = React.useState<string | null>(classGroup.assignedClassroomId || null);
-  const [isPending, setIsPending] = React.useState(false);
-  const [isOpen, setIsOpen] = React.useState(false);
-
-  const currentClassroomDetails = classGroup.assignedClassroomId
-    ? availableClassrooms.find(c => c.id === classGroup.assignedClassroomId) // Find from all classrooms
-    : null;
-
-  const currentClassroomName = currentClassroomDetails?.name || (classGroup.assignedClassroomId ? 'Desconhecida' : 'Não atribuída');
-  const isCurrentClassroomInMaintenance = currentClassroomDetails?.isUnderMaintenance;
-
-
-  const handleSubmit = async () => {
-    setIsPending(true);
-    const result = await assignClassroomToClassGroup(classGroup.id, selectedClassroomId);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: `Sala ${selectedClassroomId ? (availableClassrooms.find(c=>c.id === selectedClassroomId)?.name || 'selecionada') : 'removida'} atribuída à turma ${classGroup.name}.`,
-      });
-      setIsOpen(false);
-    } else {
-      toast({
-        title: 'Erro',
-        description: result.message || 'Não foi possível atualizar a sala da turma.',
-        variant: 'destructive',
-      });
-    }
-  };
-
-  React.useEffect(() => {
-    if (isOpen) {
-      setSelectedClassroomId(classGroup.assignedClassroomId || null);
-    }
-  }, [isOpen, classGroup.assignedClassroomId]);
-
-
-  return (
-    <Dialog open={isOpen} onOpenChange={setIsOpen}>
-      <DialogTrigger asChild>
-        {triggerButton || (
-          <Button variant="outline" size="sm">
-            <Home className="mr-2 h-4 w-4" />
-            Trocar Sala
-          </Button>
-        )}
-      </DialogTrigger>
-      <DialogContent className="sm:max-w-[425px]">
-      <TooltipProvider>
-        <DialogHeader>
-          <DialogTitle>Alterar Sala da Turma: {classGroup.name}</DialogTitle>
-          <DialogDescription>
-            Sala atual: <span className="font-semibold">{currentClassroomName}</span>
-            {isCurrentClassroomInMaintenance && <span className="ml-1 text-amber-600">(Em Manutenção)</span>}.
-            Selecione uma nova sala ou remova a atribuição.
-          </DialogDescription>
-        </DialogHeader>
-        <div className="grid gap-4 py-4">
-          <div className="grid grid-cols-4 items-center gap-4">
-            <Label htmlFor="classroom" className="text-right">
-              Nova Sala
-            </Label>
-            <Select
-              value={selectedClassroomId || 'none'}
-              onValueChange={(value) => setSelectedClassroomId(value === 'none' ? null : value)}
-            >
-              <SelectTrigger className="col-span-3">
-                <SelectValue placeholder="Selecione uma sala" />
-              </SelectTrigger>
-              <SelectContent>
-                <SelectItem value="none">Nenhuma (Remover atribuição)</SelectItem>
-                {availableClassrooms.map((classroom) => (
-                  <SelectItem 
-                    key={classroom.id} 
-                    value={classroom.id} 
-                    disabled={classroom.isUnderMaintenance && classroom.id !== classGroup.assignedClassroomId} // Disable if in maintenance, unless it's the currently assigned one
-                  >
-                    <div className="flex items-center justify-between w-full">
-                      <span>{classroom.name} (Cap: {classroom.capacity ?? 'N/A'})</span>
-                      {classroom.isUnderMaintenance && (
-                        <Tooltip delayDuration={100}>
-                          <TooltipTrigger onClick={(e) => e.stopPropagation()}>
-                             <Wrench className="h-4 w-4 text-amber-500 ml-2" />
-                          </TooltipTrigger>
-                          <TooltipContent side="right" className="max-w-xs bg-popover text-popover-foreground p-2 border shadow-md rounded-md">
-                            <p className="font-semibold mb-1">Em Manutenção</p>
-                            {classroom.maintenanceReason && <p className="text-xs">{classroom.maintenanceReason}</p>}
-                          </TooltipContent>
-                        </Tooltip>
-                      )}
-                    </div>
-                  </SelectItem>
-                ))}
-                {availableClassrooms.length === 0 && (
-                    <SelectItem value="no-classrooms" disabled>Nenhuma sala disponível</SelectItem>
-                )}
-              </SelectContent>
-            </Select>
-          </div>
-           {selectedClassroomId && availableClassrooms.find(c => c.id === selectedClassroomId)?.isUnderMaintenance && (
-            <p className="col-span-4 text-xs text-amber-600 dark:text-amber-400 text-center mt-1">
-              Atenção: A sala selecionada está em manutenção.
-            </p>
-          )}
-        </div>
-        <DialogFooter>
-          <DialogClose asChild>
-            <Button variant="outline" disabled={isPending}>Cancelar</Button>
-          </DialogClose>
-          <Button
-            type="button"
-            onClick={handleSubmit}
-            disabled={isPending || (
-              selectedClassroomId !== null &&
-              selectedClassroomId !== classGroup.assignedClassroomId && // Allow saving if it's the current room (even if in maintenance)
-              (availableClassrooms.find(c => c.id === selectedClassroomId)?.isUnderMaintenance ?? false)
-            )}
-          >
-            {isPending ? 'Salvando...' : (
-              <>
-                <Save className="mr-2 h-4 w-4" /> Salvar Alteração
-              </>
-            )}
-          </Button>
-        </DialogFooter>
-        </TooltipProvider>
-      </DialogContent>
-    </Dialog>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classgroups/ClassGroupsTable.tsx /mnt/data/refatorados/src/components/classgroups/ClassGroupsTable.tsx
--- /mnt/data/firebase_project/src/components/classgroups/ClassGroupsTable.tsx	2025-06-18 16:04:38.462668518 +0000
+++ /mnt/data/refatorados/src/components/classgroups/ClassGroupsTable.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,158 +0,0 @@
-
-'use client';
-
-import Link from 'next/link';
-import { UsersRound, Home, Wrench } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
-import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
-import { Badge } from '@/components/ui/badge';
-import type { ClassGroup, Classroom } from '@/types';
-import { DeleteClassGroupButton } from '@/components/classgroups/DeleteClassGroupButton';
-import { EditClassGroupButton } from '@/components/classgroups/EditClassGroupButton';
-import { ChangeClassroomDialog } from '@/components/classgroups/ChangeClassroomDialog';
-import { cn } from '@/lib/utils';
-import {
-  Tooltip,
-  TooltipContent,
-  TooltipProvider,
-  TooltipTrigger,
-} from "@/components/ui/tooltip";
-import * as React from 'react';
-
-interface ClassGroupsTableProps {
-  classGroups: ClassGroup[];
-  classrooms: Classroom[];
-}
-
-export default function ClassGroupsTable({ classGroups, classrooms }: ClassGroupsTableProps) {
-  const classroomDetailsMap = React.useMemo(() =>
-    new Map(classrooms.map(room => [room.id, { name: room.name, isUnderMaintenance: room.isUnderMaintenance || false, maintenanceReason: room.maintenanceReason }]))
-  , [classrooms]);
-
-  return (
-    <TooltipProvider>
-      <Card className="shadow-lg rounded-lg">
-        <CardHeader>
-          <CardTitle className="font-headline text-xl">Lista de Turmas ({classGroups.length})</CardTitle>
-        </CardHeader>
-        <CardContent>
-          {classGroups.length === 0 ? (
-            <div className="text-center text-muted-foreground py-8">
-              <UsersRound className="mx-auto h-12 w-12 mb-4 text-primary" />
-              <p className="text-lg">Nenhuma turma cadastrada ainda.</p>
-              <Button asChild variant="link" className="mt-2 text-primary">
-                <Link href="/classgroups/new">
-                  Cadastrar primeira turma
-                </Link>
-              </Button>
-            </div>
-          ) : (
-            <div className="overflow-x-auto">
-              <Table>
-                <TableHeader>
-                  <TableRow>
-                    <TableHead className="font-semibold">Nome</TableHead>
-                    <TableHead className="font-semibold">Turno</TableHead>
-                    <TableHead className="font-semibold">Dias de Aula</TableHead>
-                    <TableHead className="font-semibold">Status</TableHead>
-                    <TableHead className="font-semibold">Ano</TableHead>
-                    <TableHead className="font-semibold">Sala Atribuída</TableHead>
-                    <TableHead className="text-right font-semibold">Ações</TableHead>
-                  </TableRow>
-                </TableHeader>
-                <TableBody>
-                  {classGroups.map((cg: ClassGroup) => {
-                    let assignedClassroomDisplay = 'Não atribuída';
-                    let isRoomInMaintenance = false;
-                    let maintenanceReasonText: string | undefined = undefined;
-
-                    if (cg.assignedClassroomId) {
-                      const roomDetails = classroomDetailsMap.get(cg.assignedClassroomId);
-                      if (roomDetails) {
-                        assignedClassroomDisplay = roomDetails.name;
-                        isRoomInMaintenance = roomDetails.isUnderMaintenance;
-                        maintenanceReasonText = roomDetails.maintenanceReason;
-                      } else {
-                        assignedClassroomDisplay = 'Desconhecida';
-                      }
-                    }
-
-                    return (
-                    <TableRow key={cg.id} className="hover:bg-muted/50">
-                      <TableCell className="font-medium text-foreground">{cg.name}</TableCell>
-                      <TableCell>{cg.shift}</TableCell>
-                      <TableCell>
-                        {cg.classDays && cg.classDays.length > 0 ? (
-                          <div className="flex flex-wrap gap-1">
-                            {cg.classDays.map(day => (
-                              <Badge key={day} variant="secondary" className="text-xs font-medium">
-                                {day.substring(0,3)}
-                              </Badge>
-                            ))}
-                          </div>
-                        ) : (
-                          <span className="text-muted-foreground text-xs">N/D</span>
-                        )}
-                      </TableCell>
-                      <TableCell>
-                        <Badge
-                          variant={
-                            cg.status === 'Em Andamento' ? 'default' :
-                            cg.status === 'Planejada' ? 'secondary' :
-                            cg.status === 'Concluída' ? 'outline' :
-                            'destructive'
-                          }
-                          className={cn(
-                            cg.status === 'Em Andamento' && 'bg-green-500 text-white dark:bg-green-600 dark:text-green-50',
-                            cg.status === 'Planejada' && 'bg-blue-500 text-white dark:bg-blue-600 dark:text-blue-50',
-                            cg.status === 'Concluída' && 'border-gray-500 text-gray-700 dark:border-gray-400 dark:text-gray-300',
-                            cg.status === 'Cancelada' && 'bg-red-500 text-white dark:bg-red-600 dark:text-red-50'
-                          )}
-                        >
-                          {cg.status}
-                        </Badge>
-                      </TableCell>
-                      <TableCell>{cg.year}</TableCell>
-                      <TableCell>
-                        <div className="flex items-center gap-1.5">
-                          <span className={cn(isRoomInMaintenance && "text-amber-600 dark:text-amber-400")}>{assignedClassroomDisplay}</span>
-                          {isRoomInMaintenance && (
-                            <Tooltip delayDuration={100}>
-                              <TooltipTrigger>
-                                <Wrench className="h-3.5 w-3.5 text-amber-500 dark:text-amber-400" />
-                              </TooltipTrigger>
-                              <TooltipContent side="top" className="max-w-xs bg-popover text-popover-foreground p-2 border shadow-md rounded-md">
-                                <p className="font-semibold mb-1">Sala em manutenção</p>
-                                {maintenanceReasonText && <p className="text-xs">{maintenanceReasonText}</p>}
-                              </TooltipContent>
-                            </Tooltip>
-                          )}
-                           <ChangeClassroomDialog
-                              classGroup={cg}
-                              availableClassrooms={classrooms.filter(c => !c.isUnderMaintenance || c.id === cg.assignedClassroomId)} // Allow current room even if in maintenance
-                              triggerButton={
-                                <Button variant="ghost" size="icon" className="h-7 w-7 hover:bg-accent">
-                                  <Home className="h-3.5 w-3.5 text-primary" />
-                                  <span className="sr-only">{cg.assignedClassroomId ? "Trocar Sala" : "Atribuir Sala"}</span>
-                                </Button>
-                              }
-                            />
-                        </div>
-                      </TableCell>
-                      <TableCell className="text-right space-x-1">
-                        <EditClassGroupButton classGroupId={cg.id} />
-                        <DeleteClassGroupButton classGroupId={cg.id} />
-                      </TableCell>
-                    </TableRow>
-                    );
-                  })}
-                </TableBody>
-              </Table>
-            </div>
-          )}
-        </CardContent>
-      </Card>
-    </TooltipProvider>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classgroups/DeleteClassGroupButton.tsx /mnt/data/refatorados/src/components/classgroups/DeleteClassGroupButton.tsx
--- /mnt/data/firebase_project/src/components/classgroups/DeleteClassGroupButton.tsx	2025-06-18 16:04:38.463269578 +0000
+++ /mnt/data/refatorados/src/components/classgroups/DeleteClassGroupButton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,53 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { Trash2 } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { DeleteConfirmationDialog } from '@/components/shared/DeleteConfirmationDialog';
-import { useToast } from '@/hooks/use-toast';
-import { deleteClassGroup } from '@/lib/actions/classgroups';
-
-interface DeleteClassGroupButtonProps {
-  classGroupId: string;
-  className?: string;
-}
-
-export function DeleteClassGroupButton({ classGroupId, className }: DeleteClassGroupButtonProps) {
-  const { toast } = useToast();
-  // No need for isPending state here if DeleteConfirmationDialog handles it,
-  // or if we want the server action to be the source of truth for loading.
-  // For simplicity with toast, we can let the server action complete.
-
-  const handleDelete = async () => {
-    const result = await deleteClassGroup(classGroupId);
-    if (result.success) {
-      toast({
-        title: "Sucesso!",
-        description: result.message,
-        variant: "default",
-      });
-      // Path revalidation is handled by the server action.
-    } else {
-      toast({
-        title: "Erro",
-        description: result.message,
-        variant: "destructive",
-      });
-    }
-  };
-
-  return (
-    <DeleteConfirmationDialog
-      onConfirm={handleDelete}
-      triggerButton={
-        <Button variant="ghost" size="icon" className={className}>
-          <Trash2 className="h-4 w-4" />
-          <span className="sr-only">Excluir Turma</span>
-        </Button>
-      }
-      dialogTitle="Excluir Turma?"
-      dialogDescription="Esta ação não pode ser desfeita. Todos os dados da turma serão removidos."
-    />
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classgroups/EditClassGroupButton.tsx /mnt/data/refatorados/src/components/classgroups/EditClassGroupButton.tsx
--- /mnt/data/firebase_project/src/components/classgroups/EditClassGroupButton.tsx	2025-06-18 16:04:38.463981970 +0000
+++ /mnt/data/refatorados/src/components/classgroups/EditClassGroupButton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,23 +0,0 @@
-
-'use client';
-
-import Link from 'next/link';
-import { Edit } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { cn } from '@/lib/utils';
-
-interface EditClassGroupButtonProps {
-  classGroupId: string;
-  className?: string;
-}
-
-export function EditClassGroupButton({ classGroupId, className }: EditClassGroupButtonProps) {
-  return (
-    <Button variant="ghost" size="icon" asChild className={cn(className)}>
-      <Link href={`/classgroups/${classGroupId}/edit`}>
-        <Edit className="h-4 w-4" />
-        <span className="sr-only">Editar Turma</span>
-      </Link>
-    </Button>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classgroups/EditClassGroupForm.tsx /mnt/data/refatorados/src/components/classgroups/EditClassGroupForm.tsx
--- /mnt/data/firebase_project/src/components/classgroups/EditClassGroupForm.tsx	2025-06-18 16:04:38.464719127 +0000
+++ /mnt/data/refatorados/src/components/classgroups/EditClassGroupForm.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,207 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { z } from 'zod';
-import { useRouter } from 'next/navigation';
-import { Save } from 'lucide-react';
-
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import {
-  Select,
-  SelectContent,
-  SelectItem,
-  SelectTrigger,
-  SelectValue,
-} from '@/components/ui/select';
-import { Checkbox } from "@/components/ui/checkbox";
-import { useToast } from '@/hooks/use-toast';
-import { updateClassGroup } from '@/lib/actions/classgroups';
-import { CLASS_GROUP_SHIFTS, DAYS_OF_WEEK } from '@/lib/constants';
-import type { ClassGroup, ClassGroupShift, DayOfWeek } from '@/types';
-
-const formSchema = z.object({
-  name: z.string().min(3, { message: "O nome da turma deve ter pelo menos 3 caracteres." }),
-  shift: z.enum(CLASS_GROUP_SHIFTS as [string, ...string[]], { required_error: "Selecione um turno.", invalid_type_error: "Turno inválido." }),
-  classDays: z.array(z.enum(DAYS_OF_WEEK as [string, ...string[]]))
-    .min(1, { message: "Selecione pelo menos um dia da semana." }),
-});
-
-type EditClassGroupFormValues = z.infer<typeof formSchema>;
-
-interface EditClassGroupFormProps {
-  classGroup: ClassGroup;
-}
-
-export default function EditClassGroupForm({ classGroup }: EditClassGroupFormProps) {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const form = useForm<EditClassGroupFormValues>({
-    resolver: zodResolver(formSchema),
-    defaultValues: {
-      name: classGroup.name,
-      shift: classGroup.shift,
-      classDays: classGroup.classDays || [],
-    },
-  });
-
-  async function onSubmit(values: EditClassGroupFormValues) {
-    setIsPending(true);
-    const result = await updateClassGroup(classGroup.id, values);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-      });
-      router.push('/classgroups');
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-            form.setError(field as keyof EditClassGroupFormValues, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-         toast({
-          title: 'Erro de Validação',
-          description: "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-         toast({
-          title: 'Erro ao atualizar turma',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <Form {...form}>
-      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-        <FormField
-          control={form.control}
-          name="name"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Nome da Turma</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: ADS 2024.1 - A" {...field} />
-              </FormControl>
-              <FormDescription>
-                O nome que identificará esta turma.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="shift"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Turno</FormLabel>
-              <Select onValueChange={field.onChange} defaultValue={field.value}>
-                <FormControl>
-                  <SelectTrigger>
-                    <SelectValue placeholder="Selecione o turno" />
-                  </SelectTrigger>
-                </FormControl>
-                <SelectContent>
-                  {CLASS_GROUP_SHIFTS.map((shift) => (
-                    <SelectItem key={shift} value={shift}>
-                      {shift}
-                    </SelectItem>
-                  ))}
-                </SelectContent>
-              </Select>
-              <FormDescription>
-                O período em que as aulas da turma ocorrerão.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="classDays"
-          render={() => (
-            <FormItem>
-              <div className="mb-4">
-                <FormLabel className="text-base">Dias de Aula</FormLabel>
-                <FormDescription>
-                  Selecione os dias da semana em que haverá aula para esta turma.
-                </FormDescription>
-              </div>
-              <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
-              {DAYS_OF_WEEK.map((day) => (
-                <FormField
-                  key={day}
-                  control={form.control}
-                  name="classDays"
-                  render={({ field }) => {
-                    return (
-                      <FormItem
-                        key={day}
-                        className="flex flex-row items-start space-x-3 space-y-0"
-                      >
-                        <FormControl>
-                          <Checkbox
-                            checked={field.value?.includes(day)}
-                            onCheckedChange={(checked) => {
-                              return checked
-                                ? field.onChange([...(field.value || []), day])
-                                : field.onChange(
-                                    (field.value || []).filter(
-                                      (value) => value !== day
-                                    )
-                                  )
-                            }}
-                          />
-                        </FormControl>
-                        <FormLabel className="font-normal">
-                          {day}
-                        </FormLabel>
-                      </FormItem>
-                    )
-                  }}
-                />
-              ))}
-              </div>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <div className="flex justify-end">
-          <Button type="submit" disabled={isPending}>
-            {isPending ? "Salvando..." : (
-              <>
-                <Save className="mr-2 h-4 w-4" />
-                Salvar Alterações
-              </>
-            )}
-          </Button>
-        </div>
-      </form>
-    </Form>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classgroups/NewClassGroupForm.tsx /mnt/data/refatorados/src/components/classgroups/NewClassGroupForm.tsx
--- /mnt/data/firebase_project/src/components/classgroups/NewClassGroupForm.tsx	2025-06-18 16:04:38.465298995 +0000
+++ /mnt/data/refatorados/src/components/classgroups/NewClassGroupForm.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,210 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { z } from 'zod';
-import { useRouter } from 'next/navigation';
-import { PlusCircle } from 'lucide-react';
-
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import {
-  Select,
-  SelectContent,
-  SelectItem,
-  SelectTrigger,
-  SelectValue,
-} from '@/components/ui/select';
-import { Checkbox } from "@/components/ui/checkbox";
-import { useToast } from '@/hooks/use-toast';
-import { createClassGroup, type ClassGroupFormValues } from '@/lib/actions/classgroups';
-import { CLASS_GROUP_SHIFTS, DAYS_OF_WEEK } from '@/lib/constants';
-// AppCurso type import removed as it's no longer used
-
-const formSchema = z.object({
-  name: z.string().min(3, { message: "O nome da turma deve ter pelo menos 3 caracteres." }),
-  shift: z.enum(CLASS_GROUP_SHIFTS as [string, ...string[]], { required_error: "Selecione um turno.", invalid_type_error: "Turno inválido." }),
-  classDays: z.array(z.enum(DAYS_OF_WEEK as [string, ...string[]]))
-    .min(1, { message: "Selecione pelo menos um dia da semana." }),
-  // appCursoId field removed from schema
-});
-
-// Interface NewClassGroupFormProps removed as appCursos is no longer a prop
-// interface NewClassGroupFormProps {
-//   appCursos: AppCurso[];
-// }
-
-export default function NewClassGroupForm(/* { appCursos }: NewClassGroupFormProps */) { // appCursos prop removed
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const form = useForm<z.infer<typeof formSchema>>({
-    resolver: zodResolver(formSchema),
-    defaultValues: {
-      name: '',
-      shift: undefined,
-      classDays: [],
-      // appCursoId: undefined, // Removed
-    },
-  });
-
-  async function onSubmit(values: z.infer<typeof formSchema>) {
-    setIsPending(true);
-    // The createClassGroup action now expects values that match the updated schema (without appCursoId)
-    const result = await createClassGroup(values as ClassGroupFormValues);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-      });
-      router.push('/classgroups');
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-            form.setError(field as keyof z.infer<typeof formSchema>, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-         toast({
-          title: 'Erro de Validação',
-          description: "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-         toast({
-          title: 'Erro ao criar turma',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <Form {...form}>
-      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-        <FormField
-          control={form.control}
-          name="name"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Nome da Turma</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: ADS 2024.1 - A" {...field} />
-              </FormControl>
-              <FormDescription>
-                O nome que identificará esta turma.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        {/* FormField for appCursoId removed */}
-        <FormField
-          control={form.control}
-          name="shift"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Turno</FormLabel>
-              <Select onValueChange={field.onChange} defaultValue={field.value}>
-                <FormControl>
-                  <SelectTrigger>
-                    <SelectValue placeholder="Selecione o turno" />
-                  </SelectTrigger>
-                </FormControl>
-                <SelectContent>
-                  {CLASS_GROUP_SHIFTS.map((shift) => (
-                    <SelectItem key={shift} value={shift}>
-                      {shift}
-                    </SelectItem>
-                  ))}
-                </SelectContent>
-              </Select>
-              <FormDescription>
-                O período em que as aulas da turma ocorrerão.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="classDays"
-          render={() => (
-            <FormItem>
-              <div className="mb-4">
-                <FormLabel className="text-base">Dias de Aula</FormLabel>
-                <FormDescription>
-                  Selecione os dias da semana em que haverá aula para esta turma.
-                </FormDescription>
-              </div>
-              <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
-              {DAYS_OF_WEEK.map((day) => (
-                <FormField
-                  key={day}
-                  control={form.control}
-                  name="classDays"
-                  render={({ field }) => {
-                    return (
-                      <FormItem
-                        key={day}
-                        className="flex flex-row items-start space-x-3 space-y-0"
-                      >
-                        <FormControl>
-                          <Checkbox
-                            checked={field.value?.includes(day)}
-                            onCheckedChange={(checked) => {
-                              return checked
-                                ? field.onChange([...field.value, day])
-                                : field.onChange(
-                                    field.value?.filter(
-                                      (value) => value !== day
-                                    )
-                                  )
-                            }}
-                          />
-                        </FormControl>
-                        <FormLabel className="font-normal">
-                          {day}
-                        </FormLabel>
-                      </FormItem>
-                    )
-                  }}
-                />
-              ))}
-              </div>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <div className="flex justify-end">
-          <Button type="submit" disabled={isPending}>
-            {isPending ? "Salvando..." : (
-              <>
-                <PlusCircle className="mr-2 h-4 w-4" />
-                Cadastrar Turma
-              </>
-            )}
-          </Button>
-        </div>
-      </form>
-    </Form>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classrooms/ClassroomEditFormNEW.tsx /mnt/data/refatorados/src/components/classrooms/ClassroomEditFormNEW.tsx
--- /mnt/data/firebase_project/src/components/classrooms/ClassroomEditFormNEW.tsx	2025-06-18 16:04:38.465992651 +0000
+++ /mnt/data/refatorados/src/components/classrooms/ClassroomEditFormNEW.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,185 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { useRouter } from 'next/navigation';
-import { Save, Wrench } from 'lucide-react';
-
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import { Textarea } from '@/components/ui/textarea';
-import { Checkbox } from '@/components/ui/checkbox';
-import { useToast } from '@/hooks/use-toast';
-import { updateClassroom } from '@/lib/actions/classrooms';
-import type { Classroom } from '@/types';
-import { classroomEditSchema, type ClassroomEditFormValues } from '@/lib/schemas/classrooms';
-
-interface EditClassroomFormProps {
-  classroom: Classroom;
-}
-
-export default function EditClassroomForm({ classroom }: EditClassroomFormProps) {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const form = useForm<ClassroomEditFormValues>({
-    resolver: zodResolver(classroomEditSchema),
-    defaultValues: {
-      name: classroom.name,
-      capacity: classroom.capacity ?? undefined,
-      isUnderMaintenance: classroom.isUnderMaintenance ?? false,
-      maintenanceReason: classroom.maintenanceReason ?? '',
-    },
-  });
-
-  const isUnderMaintenance = form.watch('isUnderMaintenance');
-
-  async function onSubmit(values: ClassroomEditFormValues) {
-    setIsPending(true);
-    const result = await updateClassroom(classroom.id, values);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-      });
-      router.push('/classrooms');
-      router.refresh(); 
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-            form.setError(field as keyof ClassroomEditFormValues, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-        toast({
-          title: 'Erro de Validação',
-          description: "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-        toast({
-          title: 'Erro ao atualizar sala',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <Form {...form}>
-      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-        <FormField
-          control={form.control}
-          name="name"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Nome da Sala</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: Laboratório de Informática 1" {...field} />
-              </FormControl>
-              <FormDescription>
-                O nome que identificará esta sala.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="capacity"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Capacidade</FormLabel>
-              <FormControl>
-                <Input 
-                  type="number" 
-                  placeholder="Ex: 30" 
-                  {...field} 
-                  onChange={event => field.onChange(event.target.value === '' ? undefined : +event.target.value)}
-                  value={field.value === undefined ? '' : field.value}
-                />
-              </FormControl>
-              <FormDescription>
-                Número máximo de alunos que a sala comporta.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="isUnderMaintenance"
-          render={({ field }) => (
-            <FormItem className="flex flex-row items-center space-x-3 space-y-0 rounded-md border p-4 shadow-sm bg-amber-50 dark:bg-amber-900/20">
-              <Wrench className="h-6 w-6 text-amber-600 dark:text-amber-400" />
-              <div className="space-y-0.5 leading-none">
-                <FormLabel className="text-base">
-                  Em Manutenção?
-                </FormLabel>
-                <FormDescription>
-                  Marque esta opção se a sala estiver temporariamente indisponível para uso.
-                </FormDescription>
-              </div>
-              <FormControl className="ml-auto!important mr-2">
-                <Checkbox
-                  checked={field.value}
-                  onCheckedChange={field.onChange}
-                  aria-label="Marcar como em manutenção"
-                />
-              </FormControl>
-            </FormItem>
-          )}
-        />
-        {isUnderMaintenance && (
-          <FormField
-            control={form.control}
-            name="maintenanceReason"
-            render={({ field }) => (
-              <FormItem>
-                <FormLabel>Motivo da Manutenção (Opcional)</FormLabel>
-                <FormControl>
-                  <Textarea
-                    placeholder="Ex: Ar condicionado quebrado, pintura, etc."
-                    {...field}
-                  />
-                </FormControl>
-                <FormDescription>
-                  Descreva brevemente o motivo pelo qual a sala está em manutenção.
-                </FormDescription>
-                <FormMessage />
-              </FormItem>
-            )}
-          />
-        )}
-        <div className="flex justify-end">
-          <Button type="submit" disabled={isPending} className="bg-primary hover:bg-primary/90 text-primary-foreground">
-            {isPending ? "Salvando..." : (
-              <>
-                <Save className="mr-2 h-4 w-4" />
-                Salvar Alterações
-              </>
-            )}
-          </Button>
-        </div>
-      </form>
-    </Form>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classrooms/ClassroomsDisplay.tsx /mnt/data/refatorados/src/components/classrooms/ClassroomsDisplay.tsx
--- /mnt/data/firebase_project/src/components/classrooms/ClassroomsDisplay.tsx	2025-06-18 16:04:38.466640085 +0000
+++ /mnt/data/refatorados/src/components/classrooms/ClassroomsDisplay.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,233 +0,0 @@
-
-'use client';
-
-import Link from 'next/link';
-import { PlusCircle, School, Users, CalendarDays, Clock, Wrench } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
-import { Badge } from '@/components/ui/badge';
-import type { Classroom, ClassGroup, DayOfWeek, PeriodOfDay } from '@/types';
-import { DeleteClassroomButton } from '@/components/classrooms/DeleteClassroomButton';
-import { EditClassroomButton } from '@/components/classrooms/EditClassroomButton';
-import { JS_DAYS_OF_WEEK_MAP_TO_PT } from '@/lib/constants';
-import { cn } from '@/lib/utils';
-import {
-  Tooltip,
-  TooltipContent,
-  TooltipProvider,
-  TooltipTrigger,
-} from "@/components/ui/tooltip";
-import * as React from 'react';
-
-function getCurrentShift(hour: number | null): PeriodOfDay | null {
-  if (hour === null) return null;
-  if (hour >= 6 && hour < 12) {
-    return 'Manhã';
-  } else if (hour >= 12 && hour < 18) {
-    return 'Tarde';
-  } else {
-    return 'Noite';
-  }
-}
-
-interface ClassroomsDisplayProps {
-  classrooms: Classroom[];
-  classGroups: ClassGroup[];
-}
-
-export default function ClassroomsDisplay({ classrooms, classGroups }: ClassroomsDisplayProps) {
-  const [currentHour, setCurrentHour] = React.useState<number | null>(null);
-  const [currentDayIndex, setCurrentDayIndex] = React.useState<number | null>(null);
-
-  React.useEffect(() => {
-    const now = new Date();
-    setCurrentHour(now.getHours());
-    setCurrentDayIndex(now.getDay());
-
-    const timer = setInterval(() => {
-      const now = new Date();
-      setCurrentHour(now.getHours());
-      setCurrentDayIndex(now.getDay());
-    }, 60000); // Update every minute
-    return () => clearInterval(timer);
-  }, []); // Empty dependency array ensures this runs once on mount (client-side)
-
-  const currentShift = getCurrentShift(currentHour);
-  const currentDayName = currentDayIndex !== null ? JS_DAYS_OF_WEEK_MAP_TO_PT[currentDayIndex] : null;
-
-  if (currentHour === null || currentDayIndex === null || !currentShift || !currentDayName) {
-    // Render a loading state or placeholder until client-side hydration sets the time
-    return (
-        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
-            {classrooms.map((room: Classroom) => (
-                 <Card key={room.id} className={cn("shadow-lg rounded-lg flex flex-col", room.isUnderMaintenance && "border-amber-500 border-2 bg-amber-50 dark:bg-amber-900/30")}>
-                    <CardHeader className="pb-4">
-                        <div className="flex justify-between items-start gap-2">
-                            <CardTitle className="font-headline text-xl text-foreground break-words">
-                            {room.name}
-                            </CardTitle>
-                            <div className="flex-shrink-0 space-x-1">
-                                <EditClassroomButton classroomId={room.id} className="h-8 w-8 hover:bg-accent" />
-                                <DeleteClassroomButton classroomId={room.id} className="h-8 w-8 hover:bg-destructive/10 text-destructive hover:text-destructive" />
-                            </div>
-                        </div>
-                        <CardDescription>
-                            Capacidade: {room.capacity ?? 'N/A'}
-                        </CardDescription>
-                         {room.isUnderMaintenance && (
-                            <>
-                            <Badge variant="destructive" className="mt-2 bg-amber-600 hover:bg-amber-700 text-white dark:bg-amber-500 dark:hover:bg-amber-600">
-                                <Wrench className="mr-2 h-3.5 w-3.5" />
-                                Em Manutenção
-                            </Badge>
-                            </>
-                        )}
-                    </CardHeader>
-                    <CardContent className="flex-grow">
-                         <div className="border-t pt-4">
-                            <p className="text-sm text-muted-foreground">Carregando status da sala...</p>
-                        </div>
-                    </CardContent>
-                </Card>
-            ))}
-            {classrooms.length === 0 && (
-                <Card className="shadow-lg rounded-lg md:col-span-2 lg:col-span-3">
-                    <CardContent>
-                        <div className="text-center text-muted-foreground py-12">
-                            <School className="mx-auto h-16 w-16 mb-6 text-primary" />
-                            <h3 className="text-xl font-semibold mb-2 text-foreground">Nenhuma sala de aula cadastrada.</h3>
-                            <p className="mb-6">
-                                Comece cadastrando a primeira sala para sua instituição.
-                            </p>
-                            <Button asChild variant="default" className="bg-primary hover:bg-primary/90 text-primary-foreground">
-                                <Link href="/classrooms/new">
-                                <PlusCircle className="mr-2 h-4 w-4" />
-                                Cadastrar Primeira Sala
-                                </Link>
-                            </Button>
-                        </div>
-                    </CardContent>
-                </Card>
-            )}
-        </div>
-    );
-  }
-
-
-  return (
-    <TooltipProvider>
-      {classrooms.length === 0 ? (
-        <Card className="shadow-lg rounded-lg">
-          <CardContent>
-            <div className="text-center text-muted-foreground py-12">
-              <School className="mx-auto h-16 w-16 mb-6 text-primary" />
-              <h3 className="text-xl font-semibold mb-2 text-foreground">Nenhuma sala de aula cadastrada.</h3>
-              <p className="mb-6">
-                Comece cadastrando a primeira sala para sua instituição.
-              </p>
-              <Button asChild variant="default" className="bg-primary hover:bg-primary/90 text-primary-foreground">
-                <Link href="/classrooms/new">
-                  <PlusCircle className="mr-2 h-4 w-4" />
-                  Cadastrar Primeira Sala
-                </Link>
-              </Button>
-            </div>
-          </CardContent>
-        </Card>
-      ) : (
-        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
-          {classrooms.map((room: Classroom) => {
-            const occupyingGroup = !room.isUnderMaintenance ? classGroups.find(cg =>
-              cg.assignedClassroomId === room.id &&
-              cg.status === 'Em Andamento' &&
-              Array.isArray(cg.classDays) && cg.classDays.includes(currentDayName as DayOfWeek) && // currentDayName is now guaranteed to be DayOfWeek or null
-              cg.shift === currentShift // currentShift is also guaranteed
-            ) : undefined;
-
-            return (
-              <Card key={room.id} className={cn("shadow-lg rounded-lg flex flex-col", room.isUnderMaintenance && "border-amber-500 border-2 bg-amber-50 dark:bg-amber-900/30")}>
-                <CardHeader className="pb-4">
-                  <div className="flex justify-between items-start gap-2">
-                    <CardTitle className="font-headline text-xl text-foreground break-words">
-                      {room.name}
-                    </CardTitle>
-                    <div className="flex-shrink-0 space-x-1">
-                      <EditClassroomButton classroomId={room.id} className="h-8 w-8 hover:bg-accent" />
-                      <DeleteClassroomButton classroomId={room.id} className="h-8 w-8 hover:bg-destructive/10 text-destructive hover:text-destructive" />
-                    </div>
-                  </div>
-                  <CardDescription>
-                    Capacidade: {room.capacity ?? 'N/A'}
-                  </CardDescription>
-                   {room.isUnderMaintenance && (
-                    <>
-                      <Badge variant="destructive" className="mt-2 bg-amber-600 hover:bg-amber-700 text-white dark:bg-amber-500 dark:hover:bg-amber-600">
-                        <Wrench className="mr-2 h-3.5 w-3.5" />
-                        Em Manutenção
-                      </Badge>
-                      {room.maintenanceReason && (
-                        <Tooltip delayDuration={100}>
-                          <TooltipTrigger asChild>
-                            <p className="text-xs text-amber-700 dark:text-amber-300 mt-1.5 cursor-help underline decoration-dotted decoration-amber-500/50 hover:decoration-amber-500">
-                              Motivo: {room.maintenanceReason.substring(0, 40)}{room.maintenanceReason.length > 40 ? '...' : ''}
-                            </p>
-                          </TooltipTrigger>
-                          <TooltipContent side="bottom" className="max-w-xs bg-popover text-popover-foreground p-2 border shadow-md rounded-md">
-                            <p className="font-semibold mb-1">Motivo da Manutenção:</p>
-                            <p className="text-xs">{room.maintenanceReason}</p>
-                          </TooltipContent>
-                        </Tooltip>
-                      )}
-                    </>
-                  )}
-                </CardHeader>
-                <CardContent className="flex-grow">
-                  <div className="border-t pt-4">
-                    {room.isUnderMaintenance ? (
-                       <div className="space-y-1.5">
-                        <p className="text-sm text-amber-700 dark:text-amber-300 font-medium flex items-center">
-                          <Wrench className="mr-2 h-4 w-4 " />
-                          Sala indisponível.
-                        </p>
-                      </div>
-                    ) : occupyingGroup ? (
-                      <div className="space-y-1.5">
-                        <Badge variant="destructive" className="text-xs mb-2">Ocupada Agora</Badge>
-                        <p className="text-sm text-foreground flex items-center">
-                          <Users className="mr-2 h-4 w-4 text-muted-foreground" />
-                          Turma: <span className="font-medium ml-1">{occupyingGroup.name}</span>
-                        </p>
-                        <p className="text-sm text-foreground flex items-center">
-                          <CalendarDays className="mr-2 h-4 w-4 text-muted-foreground" />
-                           Hoje: <span className="font-medium ml-1">{currentDayName}</span>
-                        </p>
-                        <p className="text-sm text-foreground flex items-center">
-                          <Clock className="mr-2 h-4 w-4 text-muted-foreground" />
-                          Turno: <span className="font-medium ml-1">{currentShift}</span>
-                        </p>
-                      </div>
-                    ) : (
-                       <div className="space-y-1.5">
-                        <Badge variant="secondary" className="bg-green-100 text-green-700 hover:bg-green-200 border-green-300 dark:bg-green-700/30 dark:text-green-200 dark:border-green-600 text-xs mb-2">
-                          Livre Agora
-                        </Badge>
-                         <p className="text-sm text-muted-foreground flex items-center">
-                          <CalendarDays className="mr-2 h-4 w-4" />
-                          Hoje: <span className="font-medium ml-1">{currentDayName}</span>
-                        </p>
-                        <p className="text-sm text-muted-foreground flex items-center">
-                          <Clock className="mr-2 h-4 w-4" />
-                          Turno Atual: <span className="font-medium ml-1">{currentShift}</span>
-                        </p>
-                       </div>
-                    )}
-                  </div>
-                </CardContent>
-              </Card>
-            );
-          })}
-        </div>
-      )}
-    </TooltipProvider>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classrooms/DeleteClassroomButton.tsx /mnt/data/refatorados/src/components/classrooms/DeleteClassroomButton.tsx
--- /mnt/data/firebase_project/src/components/classrooms/DeleteClassroomButton.tsx	2025-06-18 16:04:38.467414150 +0000
+++ /mnt/data/refatorados/src/components/classrooms/DeleteClassroomButton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,53 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { Trash2 } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { DeleteConfirmationDialog } from '@/components/shared/DeleteConfirmationDialog';
-import { useToast } from '@/hooks/use-toast';
-import { deleteClassroom } from '@/lib/actions/classrooms';
-
-interface DeleteClassroomButtonProps {
-  classroomId: string;
-  className?: string;
-}
-
-export function DeleteClassroomButton({ classroomId, className }: DeleteClassroomButtonProps) {
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const handleDelete = async () => {
-    setIsPending(true);
-    const result = await deleteClassroom(classroomId);
-    setIsPending(false);
-    if (result.success) {
-      toast({
-        title: "Sucesso!",
-        description: result.message,
-        variant: "default",
-      });
-      // Revalidation will be handled by revalidatePath in the server action
-    } else {
-      toast({
-        title: "Erro",
-        description: result.message,
-        variant: "destructive",
-      });
-    }
-  };
-
-  return (
-    <DeleteConfirmationDialog
-      onConfirm={handleDelete}
-      triggerButton={
-        <Button variant="ghost" size="icon" className={className} disabled={isPending}>
-          <Trash2 className="h-4 w-4" />
-          <span className="sr-only">Excluir Sala</span>
-        </Button>
-      }
-      dialogTitle="Excluir Sala de Aula?"
-      dialogDescription="Esta ação não pode ser desfeita. Todos os dados da sala serão removidos permanentemente."
-    />
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classrooms/EditClassroomButton.tsx /mnt/data/refatorados/src/components/classrooms/EditClassroomButton.tsx
--- /mnt/data/firebase_project/src/components/classrooms/EditClassroomButton.tsx	2025-06-18 16:04:38.468013003 +0000
+++ /mnt/data/refatorados/src/components/classrooms/EditClassroomButton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,21 +0,0 @@
-
-import Link from 'next/link';
-import { Edit } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { cn } from '@/lib/utils';
-
-interface EditClassroomButtonProps {
-  classroomId: string;
-  className?: string;
-}
-
-export function EditClassroomButton({ classroomId, className }: EditClassroomButtonProps) {
-  return (
-    <Button variant="ghost" size="icon" asChild className={cn(className)}>
-      <Link href={`/classrooms/${classroomId}/edit`}>
-        <Edit className="h-4 w-4" />
-        <span className="sr-only">Editar Sala</span>
-      </Link>
-    </Button>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/classrooms/EditClassroomForm.tsx /mnt/data/refatorados/src/components/classrooms/EditClassroomForm.tsx
--- /mnt/data/firebase_project/src/components/classrooms/EditClassroomForm.tsx	2025-06-18 16:04:38.468622623 +0000
+++ /mnt/data/refatorados/src/components/classrooms/EditClassroomForm.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,185 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { useRouter } from 'next/navigation';
-import { Save, Wrench } from 'lucide-react';
-
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import { Textarea } from '@/components/ui/textarea';
-import { Checkbox } from '@/components/ui/checkbox';
-import { useToast } from '@/hooks/use-toast';
-import { updateClassroom } from '@/lib/actions/classrooms';
-import type { Classroom } from '@/types';
-import { classroomEditSchema, type ClassroomEditFormValues } from '@/lib/schemas/classrooms';
-
-interface EditClassroomFormProps {
-  classroom: Classroom;
-}
-
-export default function EditClassroomForm({ classroom }: EditClassroomFormProps) {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const form = useForm<ClassroomEditFormValues>({
-    resolver: zodResolver(classroomEditSchema),
-    defaultValues: {
-      name: classroom.name,
-      capacity: classroom.capacity ?? undefined,
-      isUnderMaintenance: classroom.isUnderMaintenance ?? false,
-      maintenanceReason: classroom.maintenanceReason ?? '',
-    },
-  });
-
-  const isUnderMaintenance = form.watch('isUnderMaintenance');
-
-  async function onSubmit(values: ClassroomEditFormValues) {
-    setIsPending(true);
-    const result = await updateClassroom(classroom.id, values);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-      });
-      router.push('/classrooms');
-      router.refresh(); 
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-            form.setError(field as keyof ClassroomEditFormValues, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-        toast({
-          title: 'Erro de Validação',
-          description: "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-        toast({
-          title: 'Erro ao atualizar sala',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <Form {...form}>
-      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-        <FormField
-          control={form.control}
-          name="name"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Nome da Sala</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: Laboratório de Informática 1" {...field} />
-              </FormControl>
-              <FormDescription>
-                O nome que identificará esta sala.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="capacity"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Capacidade</FormLabel>
-              <FormControl>
-                <Input 
-                  type="number" 
-                  placeholder="Ex: 30" 
-                  {...field} 
-                  onChange={event => field.onChange(event.target.value === '' ? undefined : +event.target.value)}
-                  value={field.value === undefined ? '' : field.value}
-                />
-              </FormControl>
-              <FormDescription>
-                Número máximo de alunos que a sala comporta.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        <FormField
-          control={form.control}
-          name="isUnderMaintenance"
-          render={({ field }) => (
-            <FormItem className="flex flex-row items-center space-x-3 space-y-0 rounded-md border p-4 shadow-sm bg-amber-50 dark:bg-amber-900/20">
-              <Wrench className="h-6 w-6 text-amber-600 dark:text-amber-400" />
-              <div className="space-y-0.5 leading-none">
-                <FormLabel className="text-base">
-                  Em Manutenção?
-                </FormLabel>
-                <FormDescription>
-                  Marque esta opção se a sala estiver temporariamente indisponível para uso.
-                </FormDescription>
-              </div>
-              <FormControl className="ml-auto!important mr-2">
-                <Checkbox
-                  checked={field.value}
-                  onCheckedChange={field.onChange}
-                  aria-label="Marcar como em manutenção"
-                />
-              </FormControl>
-            </FormItem>
-          )}
-        />
-        {isUnderMaintenance && (
-          <FormField
-            control={form.control}
-            name="maintenanceReason"
-            render={({ field }) => (
-              <FormItem>
-                <FormLabel>Motivo da Manutenção (Opcional)</FormLabel>
-                <FormControl>
-                  <Textarea
-                    placeholder="Ex: Ar condicionado quebrado, pintura, etc."
-                    {...field}
-                  />
-                </FormControl>
-                <FormDescription>
-                  Descreva brevemente o motivo pelo qual a sala está em manutenção.
-                </FormDescription>
-                <FormMessage />
-              </FormItem>
-            )}
-          />
-        )}
-        <div className="flex justify-end">
-          <Button type="submit" disabled={isPending} className="bg-primary hover:bg-primary/90 text-primary-foreground">
-            {isPending ? "Salvando..." : (
-              <>
-                <Save className="mr-2 h-4 w-4" />
-                Salvar Alterações
-              </>
-            )}
-          </Button>
-        </div>
-      </form>
-    </Form>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/dashboard/ClassroomOccupancyChart.tsx /mnt/data/refatorados/src/components/dashboard/ClassroomOccupancyChart.tsx
--- /mnt/data/firebase_project/src/components/dashboard/ClassroomOccupancyChart.tsx	2025-06-18 16:04:38.469424317 +0000
+++ /mnt/data/refatorados/src/components/dashboard/ClassroomOccupancyChart.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,118 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { Bar, BarChart, CartesianGrid, ResponsiveContainer, XAxis, YAxis } from 'recharts';
-import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
-import {
-  ChartContainer,
-  ChartTooltip,
-  ChartTooltipContent,
-  type ChartConfig,
-} from '@/components/ui/chart';
-import { Activity } from 'lucide-react'; // Icon for chart card header
-
-const chartConfig = {
-  turmas: {
-    label: 'Turmas Alocadas',
-    color: 'hsl(var(--primary))',
-  },
-} satisfies ChartConfig;
-
-interface DailyOccupancy {
-  day: string; // Abbreviation for XAxis e.g. "Seg"
-  day_full: string; // Full day name for Tooltip e.g. "Segunda"
-  turmas: number;
-}
-
-interface ClassroomOccupancyChartProps {
-  data: DailyOccupancy[];
-}
-
-export default function ClassroomOccupancyChart({ data }: ClassroomOccupancyChartProps) {
-  const chartDataPrepared = data.map(item => ({
-    ...item,
-    fill: 'var(--color-turmas)', // For Bar component to use the CSS variable
-  }));
-  
-  return (
-    <Card className="shadow-lg rounded-lg">
-      <CardHeader>
-        <div className="flex flex-row items-center justify-between space-y-0 pb-2">
-          <CardTitle className="text-xl font-semibold font-headline">Ocupação de Salas por Dia</CardTitle>
-          <Activity className="h-5 w-5 text-muted-foreground" />
-        </div>
-        <CardDescription>Número de turmas alocadas em salas disponíveis por dia da semana.</CardDescription>
-      </CardHeader>
-      <CardContent>
-        {(!data || data.length === 0 || data.every(d => d.turmas === 0)) ? (
-          <p className="text-center text-muted-foreground py-8">Nenhuma ocupação de sala registrada para esta semana.</p>
-        ) : (
-          <ChartContainer config={chartConfig} className="h-[300px] w-full">
-            <ResponsiveContainer width="100%" height="100%">
-              <BarChart 
-                accessibilityLayer 
-                data={chartDataPrepared} 
-                margin={{ top: 5, right: 10, left: -20, bottom: 5 }}
-              >
-                <CartesianGrid strokeDasharray="3 3" vertical={false} />
-                <XAxis
-                  dataKey="day"
-                  tickLine={false}
-                  axisLine={false}
-                  tickMargin={8}
-                />
-                <YAxis
-                  tickLine={false}
-                  axisLine={false}
-                  tickMargin={8}
-                  allowDecimals={false}
-                  domain={[0, 'dataMax + 1']} // Ensure Y-axis shows at least one tick above max value
-                />
-                <ChartTooltip
-                  cursor={{ fill: 'hsl(var(--muted) / 0.5)' }}
-                  content={
-                    <ChartTooltipContent 
-                      labelFormatter={(label, payload) => {
-                        // Find the full day name from the payload if available
-                        if (payload && payload.length > 0 && payload[0].payload.day_full) {
-                          return payload[0].payload.day_full;
-                        }
-                        return label; // Fallback to the abbreviated day name
-                      }}
-                      formatter={(value, name, props) => {
-                        // name here refers to the dataKey 'turmas'
-                        const configEntry = chartConfig[name as keyof typeof chartConfig];
-                        const count = Number(value);
-                        const label = count === 1 ? 'turma alocada' : 'turmas alocadas';
-                        return (
-                          <div className="flex flex-col items-start gap-0.5">
-                            <div className="text-sm font-medium text-foreground">{props.payload.day_full || props.payload.day}</div>
-                            <div className="flex items-center gap-2">
-                                <span 
-                                    className="h-2.5 w-2.5 shrink-0 rounded-[2px]" 
-                                    style={{backgroundColor: configEntry?.color || 'hsl(var(--foreground))'}}
-                                />
-                                <span className="text-xs text-muted-foreground">
-                                    {configEntry?.label}: {count}
-                                </span>
-                            </div>
-                          </div>
-                        );
-                      }}
-                    />
-                  }
-                />
-                <Bar 
-                  dataKey="turmas" 
-                  radius={[4, 4, 0, 0]} 
-                />
-              </BarChart>
-            </ResponsiveContainer>
-          </ChartContainer>
-        )}
-      </CardContent>
-    </Card>
-  );
-}
-
diff -ruN /mnt/data/firebase_project/src/components/layout/AppShell.tsx /mnt/data/refatorados/src/components/layout/AppShell.tsx
--- /mnt/data/firebase_project/src/components/layout/AppShell.tsx	2025-06-18 16:04:38.470221880 +0000
+++ /mnt/data/refatorados/src/components/layout/AppShell.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,25 +0,0 @@
-
-'use client';
-
-import type { ReactNode } from 'react';
-import { SidebarProvider, Sidebar, SidebarInset } from '@/components/ui/sidebar';
-import SidebarNav from './SidebarNav';
-
-interface AppShellProps {
-  children: ReactNode;
-}
-
-export default function AppShell({ children }: AppShellProps) {
-  return (
-    <SidebarProvider defaultOpen={true}>
-      <Sidebar collapsible="icon" variant="sidebar" side="left">
-        <SidebarNav />
-      </Sidebar>
-      <SidebarInset>
-        <div className="min-h-screen p-4 md:p-8">
-          {children}
-        </div>
-      </SidebarInset>
-    </SidebarProvider>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/layout/SidebarNav.tsx /mnt/data/refatorados/src/components/layout/SidebarNav.tsx
--- /mnt/data/firebase_project/src/components/layout/SidebarNav.tsx	2025-06-18 16:04:38.470852354 +0000
+++ /mnt/data/refatorados/src/components/layout/SidebarNav.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,88 +0,0 @@
-
-'use client';
-
-import Link from 'next/link';
-import { usePathname } from 'next/navigation';
-import * as React from 'react'; 
-import {
-  LayoutDashboard,
-  School,
-  UsersRound,
-  CalendarDays,
-  Landmark, // Using Landmark as a placeholder for the main Academica icon
-  ListChecks,
-  MonitorPlay,
-} from 'lucide-react';
-import {
-  SidebarHeader,
-  SidebarContent,
-  SidebarMenu,
-  SidebarMenuItem,
-  SidebarMenuButton,
-  SidebarFooter,
-  SidebarTrigger,
-} from '@/components/ui/sidebar';
-import { cn } from '@/lib/utils';
-
-const navItems = [
-  { href: '/', label: 'Dashboard', icon: LayoutDashboard },
-  { href: '/classrooms', label: 'Salas de Aula', icon: School },
-  { href: '/classgroups', label: 'Turmas', icon: UsersRound },
-  { href: '/room-availability', label: 'Disponibilidade', icon: CalendarDays },
-  { href: '/reservations', label: 'Reservas', icon: ListChecks },
-  { href: '/tv-display', label: 'Painel TV', icon: MonitorPlay },
-];
-
-export default function SidebarNav() {
-  const pathname = usePathname();
-  const [currentYear, setCurrentYear] = React.useState<number | null>(null);
-
-  React.useEffect(() => {
-    setCurrentYear(new Date().getFullYear());
-  }, []); 
-
-  return (
-    <>
-      <SidebarHeader className="p-4 flex items-center justify-between border-b border-sidebar-border">
-        <Link href="/" className="flex items-center gap-2">
-          <Landmark className="w-7 h-7 text-sidebar-primary group-data-[collapsible=icon]:w-6 group-data-[collapsible=icon]:h-6 transition-all" />
-          <h1 className="text-xl font-semibold text-sidebar-foreground group-data-[collapsible=icon]:hidden">
-            Academica
-          </h1>
-        </Link>
-        <div className="md:hidden"> 
-            <SidebarTrigger />
-        </div>
-      </SidebarHeader>
-      <SidebarContent className="p-2">
-        <SidebarMenu>
-          {navItems.map((item) => (
-            <SidebarMenuItem key={item.href}>
-              <SidebarMenuButton
-                asChild
-                isActive={pathname === item.href || (item.href !== '/' && pathname.startsWith(item.href))}
-                className={cn(
-                  'justify-start rounded-md text-sm font-medium', // Consistent styling
-                  (pathname === item.href || (item.href !== '/' && pathname.startsWith(item.href)))
-                    ? 'bg-sidebar-primary text-sidebar-primary-foreground' // Active state uses sidebar-primary
-                    : 'text-sidebar-foreground hover:bg-sidebar-accent hover:text-sidebar-accent-foreground' // Default and hover states
-                )}
-                tooltip={{ children: item.label, side: 'right' }}
-              >
-                <Link href={item.href}>
-                  <item.icon className="h-4 w-4 mr-2 group-data-[collapsible=icon]:mr-0" />
-                  <span className="group-data-[collapsible=icon]:hidden">{item.label}</span>
-                </Link>
-              </SidebarMenuButton>
-            </SidebarMenuItem>
-          ))}
-        </SidebarMenu>
-      </SidebarContent>
-      <SidebarFooter className="p-4 border-t border-sidebar-border">
-         <div className="group-data-[collapsible=icon]:hidden text-xs text-sidebar-foreground/70">
-            {currentYear !== null ? `© ${currentYear} Academica` : `© Academica`}
-         </div>
-      </SidebarFooter>
-    </>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/reservations/DeleteEventReservationButton.tsx /mnt/data/refatorados/src/components/reservations/DeleteEventReservationButton.tsx
--- /mnt/data/firebase_project/src/components/reservations/DeleteEventReservationButton.tsx	2025-06-18 16:04:38.471589320 +0000
+++ /mnt/data/refatorados/src/components/reservations/DeleteEventReservationButton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,50 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { Trash2 } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { DeleteConfirmationDialog } from '@/components/shared/DeleteConfirmationDialog';
-import { useToast } from '@/hooks/use-toast';
-import { deleteEventReservation } from '@/lib/actions/event_reservations';
-
-interface DeleteEventReservationButtonProps {
-  reservationId: string;
-  className?: string;
-}
-
-export function DeleteEventReservationButton({ reservationId, className }: DeleteEventReservationButtonProps) {
-  const { toast } = useToast();
-
-  const handleDelete = async () => {
-    const result = await deleteEventReservation(reservationId);
-    if (result.success) {
-      toast({
-        title: "Sucesso!",
-        description: result.message,
-        variant: "default",
-      });
-    } else {
-      toast({
-        title: "Erro",
-        description: result.message,
-        variant: "destructive",
-      });
-    }
-  };
-
-  return (
-    <DeleteConfirmationDialog
-      onConfirm={handleDelete}
-      triggerButton={
-        <Button variant="ghost" size="icon" className={className}>
-          <Trash2 className="h-4 w-4" />
-          <span className="sr-only">Excluir Reserva de Evento</span>
-        </Button>
-      }
-      dialogTitle="Excluir Reserva de Evento?"
-      dialogDescription="Esta ação não pode ser desfeita. A reserva do evento será removida permanentemente."
-      confirmText="Excluir Evento"
-    />
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/reservations/DeleteRecurringReservationButton.tsx /mnt/data/refatorados/src/components/reservations/DeleteRecurringReservationButton.tsx
--- /mnt/data/firebase_project/src/components/reservations/DeleteRecurringReservationButton.tsx	2025-06-18 16:04:38.472351663 +0000
+++ /mnt/data/refatorados/src/components/reservations/DeleteRecurringReservationButton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,50 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { Trash2 } from 'lucide-react';
-import { Button } from '@/components/ui/button';
-import { DeleteConfirmationDialog } from '@/components/shared/DeleteConfirmationDialog';
-import { useToast } from '@/hooks/use-toast';
-import { deleteRecurringReservation } from '@/lib/actions/recurring_reservations';
-
-interface DeleteRecurringReservationButtonProps {
-  reservationId: string;
-  className?: string;
-}
-
-export function DeleteRecurringReservationButton({ reservationId, className }: DeleteRecurringReservationButtonProps) {
-  const { toast } = useToast();
-
-  const handleDelete = async () => {
-    const result = await deleteRecurringReservation(reservationId);
-    if (result.success) {
-      toast({
-        title: "Sucesso!",
-        description: result.message,
-        variant: "default",
-      });
-    } else {
-      toast({
-        title: "Erro",
-        description: result.message,
-        variant: "destructive",
-      });
-    }
-  };
-
-  return (
-    <DeleteConfirmationDialog
-      onConfirm={handleDelete}
-      triggerButton={
-        <Button variant="ghost" size="icon" className={className}>
-          <Trash2 className="h-4 w-4" />
-          <span className="sr-only">Excluir Reserva Recorrente</span>
-        </Button>
-      }
-      dialogTitle="Excluir Reserva Recorrente?"
-      dialogDescription="Esta ação não pode ser desfeita. A reserva será removida permanentemente."
-      confirmText="Excluir"
-    />
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/reservations/NewEventReservationForm.tsx /mnt/data/refatorados/src/components/reservations/NewEventReservationForm.tsx
--- /mnt/data/firebase_project/src/components/reservations/NewEventReservationForm.tsx	2025-06-18 16:04:38.473043024 +0000
+++ /mnt/data/refatorados/src/components/reservations/NewEventReservationForm.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,259 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { useRouter } from 'next/navigation';
-import { CalendarPlus as SaveIcon, CalendarIcon as CalendarDateIcon } from 'lucide-react';
-import { format, parseISO, isValid as isValidDate } from 'date-fns';
-import { ptBR } from 'date-fns/locale';
-
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import { Textarea } from '@/components/ui/textarea';
-import {
-  Select,
-  SelectContent,
-  SelectItem,
-  SelectTrigger,
-  SelectValue,
-} from '@/components/ui/select';
-import { Calendar } from '@/components/ui/calendar';
-import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';
-import { useToast } from '@/hooks/use-toast';
-import { createEventReservation } from '@/lib/actions/event_reservations';
-import { eventReservationFormSchema, type EventReservationFormValues } from '@/lib/schemas/event_reservations';
-import type { Classroom } from '@/types';
-import { cn } from '@/lib/utils';
-
-interface NewEventReservationFormProps {
-  classrooms: Classroom[];
-}
-
-export default function NewEventReservationForm({ classrooms }: NewEventReservationFormProps) {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-
-  const form = useForm<EventReservationFormValues>({
-    resolver: zodResolver(eventReservationFormSchema),
-    defaultValues: {
-      classroomId: undefined,
-      title: '',
-      date: format(new Date(), 'yyyy-MM-dd'),
-      startTime: '08:00',
-      endTime: '09:00',
-      reservedBy: '',
-      details: '',
-    },
-  });
-
-  async function onSubmit(values: EventReservationFormValues) {
-    setIsPending(true);
-    const result = await createEventReservation(values);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-      });
-      router.push('/reservations');
-      router.refresh();
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-            form.setError(field as keyof EventReservationFormValues, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-        toast({
-          title: 'Erro de Validação',
-          description: result.message || "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-        toast({
-          title: 'Erro ao criar reserva',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <Form {...form}>
-      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-        <FormField
-          control={form.control}
-          name="title"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Título do Evento</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: Reunião de Coordenação" {...field} />
-              </FormControl>
-              <FormDescription>O nome ou motivo principal da reserva.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-
-        <FormField
-          control={form.control}
-          name="classroomId"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Sala</FormLabel>
-              <Select onValueChange={field.onChange} defaultValue={field.value}>
-                <FormControl>
-                  <SelectTrigger>
-                    <SelectValue placeholder="Selecione a sala" />
-                  </SelectTrigger>
-                </FormControl>
-                <SelectContent>
-                  {classrooms.length === 0 && <SelectItem value="no-cr" disabled>Nenhuma sala cadastrada</SelectItem>}
-                  {classrooms.map((cr) => (
-                    <SelectItem key={cr.id} value={cr.id}>
-                      {cr.name} (Cap: {cr.capacity ?? 'N/A'})
-                    </SelectItem>
-                  ))}
-                </SelectContent>
-              </Select>
-              <FormDescription>A sala a ser reservada para o evento.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        
-        <FormField
-          control={form.control}
-          name="date"
-          render={({ field }) => (
-            <FormItem className="flex flex-col">
-              <FormLabel>Data do Evento</FormLabel>
-              <Popover>
-                <PopoverTrigger asChild>
-                  <FormControl>
-                    <Button
-                      variant={"outline"}
-                      className={cn(
-                        "pl-3 text-left font-normal",
-                        !field.value && "text-muted-foreground"
-                      )}
-                    >
-                      {field.value && isValidDate(parseISO(field.value)) ? (
-                        format(parseISO(field.value), "PPP", { locale: ptBR })
-                      ) : (
-                        <span>Escolha uma data</span>
-                      )}
-                      <CalendarDateIcon className="ml-auto h-4 w-4 opacity-50" />
-                    </Button>
-                  </FormControl>
-                </PopoverTrigger>
-                <PopoverContent className="w-auto p-0" align="start">
-                  <Calendar
-                    mode="single"
-                    selected={field.value && isValidDate(parseISO(field.value)) ? parseISO(field.value) : undefined}
-                    onSelect={(date) => field.onChange(date ? format(date, 'yyyy-MM-dd') : '')}
-                    initialFocus
-                    locale={ptBR}
-                    disabled={(date) => date < new Date(new Date().setHours(0,0,0,0))} // Disable past dates
-                  />
-                </PopoverContent>
-              </Popover>
-              <FormDescription>Selecione a data para a reserva do evento.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-
-        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-          <FormField
-            control={form.control}
-            name="startTime"
-            render={({ field }) => (
-              <FormItem>
-                <FormLabel>Hora de Início</FormLabel>
-                <FormControl>
-                  <Input type="time" {...field} />
-                </FormControl>
-                <FormDescription>Início do evento.</FormDescription>
-                <FormMessage />
-              </FormItem>
-            )}
-          />
-          <FormField
-            control={form.control}
-            name="endTime"
-            render={({ field }) => (
-              <FormItem>
-                <FormLabel>Hora de Fim</FormLabel>
-                <FormControl>
-                  <Input type="time" {...field} />
-                </FormControl>
-                <FormDescription>Fim do evento.</FormDescription>
-                <FormMessage />
-              </FormItem>
-            )}
-          />
-        </div>
-
-        <FormField
-          control={form.control}
-          name="reservedBy"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Reservado Por</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: Prof. Silva / Departamento de TI" {...field} />
-              </FormControl>
-              <FormDescription>Nome do responsável ou departamento.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-
-        <FormField
-          control={form.control}
-          name="details"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Detalhes Adicionais (Opcional)</FormLabel>
-              <FormControl>
-                <Textarea placeholder="Ex: Necessário projetor e acesso à internet." {...field} />
-              </FormControl>
-              <FormDescription>Qualquer informação extra sobre a reserva.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        
-        <div className="flex justify-end">
-          <Button type="submit" disabled={isPending} className="bg-primary hover:bg-primary/90 text-primary-foreground">
-            {isPending ? "Salvando..." : (
-              <>
-                <SaveIcon className="mr-2 h-4 w-4" />
-                Salvar Reserva de Evento
-              </>
-            )}
-          </Button>
-        </div>
-      </form>
-    </Form>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/reservations/NewRecurringReservationForm.tsx /mnt/data/refatorados/src/components/reservations/NewRecurringReservationForm.tsx
--- /mnt/data/firebase_project/src/components/reservations/NewRecurringReservationForm.tsx	2025-06-18 16:04:38.473652221 +0000
+++ /mnt/data/refatorados/src/components/reservations/NewRecurringReservationForm.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,495 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { zodResolver } from '@hookform/resolvers/zod';
-import { useForm } from 'react-hook-form';
-import { useRouter } from 'next/navigation';
-import { CalendarPlus, Save, CalendarIcon as CalendarDateIcon } from 'lucide-react';
-import { format, parse, isValid, isWithinInterval, getDay, isBefore, isAfter, parseISO } from 'date-fns';
-import { ptBR } from 'date-fns/locale';
-
-import { Button } from '@/components/ui/button';
-import {
-  Form,
-  FormControl,
-  FormDescription,
-  FormField,
-  FormItem,
-  FormLabel,
-  FormMessage,
-} from '@/components/ui/form';
-import { Input } from '@/components/ui/input';
-import {
-  Select,
-  SelectContent,
-  SelectItem,
-  SelectTrigger,
-  SelectValue,
-} from '@/components/ui/select';
-import { Calendar } from '@/components/ui/calendar';
-import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';
-import { useToast } from '@/hooks/use-toast';
-import { createRecurringReservation } from '@/lib/actions/recurring_reservations';
-import { recurringReservationFormSchema, type RecurringReservationFormValues } from '@/lib/schemas/recurring-reservations';
-import type { ClassGroup, Classroom, DayOfWeek, ClassroomRecurringReservation, PeriodOfDay } from '@/types';
-import { cn } from '@/lib/utils';
-import { CLASS_GROUP_SHIFTS } from '@/lib/constants';
-
-interface NewRecurringReservationFormProps {
-  classGroups: ClassGroup[];
-  classrooms: Classroom[];
-  allRecurringReservations: ClassroomRecurringReservation[];
-}
-
-const dayOfWeekMapping: Record<DayOfWeek, number> = {
-  'Domingo': 0,
-  'Segunda': 1,
-  'Terça': 2,
-  'Quarta': 3,
-  'Quinta': 4,
-  'Sexta': 5,
-  'Sábado': 6
-};
-
-const isEqualDate = (dateLeft: Date, dateRight: Date): boolean => {
-  return dateLeft.getFullYear() === dateRight.getFullYear() &&
-         dateLeft.getMonth() === dateRight.getMonth() &&
-         dateLeft.getDate() === dateRight.getDate();
-};
-
-const dateRangesOverlapClient = (startA: Date, endA: Date, startB: Date, endB: Date): boolean => {
-  return startA <= endB && endA >= startB;
-};
-
-// timeStringsOverlapClient is no longer needed for suggestion logic, comparing shifts directly.
-
-export default function NewRecurringReservationForm({ classGroups, classrooms, allRecurringReservations }: NewRecurringReservationFormProps) {
-  const router = useRouter();
-  const { toast } = useToast();
-  const [isPending, setIsPending] = React.useState(false);
-  const [selectedClassGroup, setSelectedClassGroup] = React.useState<ClassGroup | undefined>(undefined);
-  const [suggestedClassrooms, setSuggestedClassrooms] = React.useState<Classroom[]>([]);
-  const [attemptedSuggestions, setAttemptedSuggestions] = React.useState(false);
-
-
-  const form = useForm<RecurringReservationFormValues>({
-    resolver: zodResolver(recurringReservationFormSchema),
-    defaultValues: {
-      classGroupId: undefined,
-      classroomId: undefined,
-      startDate: format(new Date(), 'yyyy-MM-dd'),
-      endDate: format(new Date(), 'yyyy-MM-dd'),
-      shift: undefined, // Default shift
-      purpose: '',
-    },
-  });
-
-  const watchedClassGroupId = form.watch("classGroupId");
-  const watchedStartDate = form.watch("startDate");
-  const watchedEndDate = form.watch("endDate");
-  const watchedShift = form.watch("shift"); // Watch shift instead of times
-
-  React.useEffect(() => {
-    if (watchedClassGroupId) {
-      setSelectedClassGroup(classGroups.find(cg => cg.id === watchedClassGroupId));
-    } else {
-      setSelectedClassGroup(undefined);
-    }
-  }, [watchedClassGroupId, classGroups]);
-
-  React.useEffect(() => {
-    if (!watchedClassGroupId || !watchedStartDate || !watchedEndDate || !watchedShift) {
-      setSuggestedClassrooms([]);
-      setAttemptedSuggestions(false);
-      return;
-    }
-    setAttemptedSuggestions(true);
-
-    const currentFormValues = {
-        classGroupId: watchedClassGroupId,
-        startDate: watchedStartDate,
-        endDate: watchedEndDate,
-        shift: watchedShift, // Use shift
-    };
-
-    const targetClassGroup = classGroups.find(cg => cg.id === currentFormValues.classGroupId);
-    if (!targetClassGroup) {
-      setSuggestedClassrooms([]);
-      return;
-    }
-    const targetClassDays = targetClassGroup.classDays;
-    
-    let newResStart: Date, newResEnd: Date;
-    try {
-        newResStart = parseISO(currentFormValues.startDate);
-        newResEnd = parseISO(currentFormValues.endDate);
-        if (!isValid(newResStart) || !isValid(newResEnd)) {
-            setSuggestedClassrooms([]); return;
-        }
-    } catch (e) {
-        setSuggestedClassrooms([]); return;
-    }
-
-    const suggestions: Classroom[] = [];
-    for (const classroom of classrooms) {
-      let isConflicted = false;
-      for (const existingRes of allRecurringReservations) {
-        if (existingRes.classroomId !== classroom.id) {
-          continue;
-        }
-
-        let existingResStart: Date, existingResEnd: Date;
-        try {
-            existingResStart = parseISO(existingRes.startDate);
-            existingResEnd = parseISO(existingRes.endDate);
-             if (!isValid(existingResStart) || !isValid(existingResEnd)) continue;
-        } catch (e) {
-            continue;
-        }
-
-        if (!dateRangesOverlapClient(newResStart, newResEnd, existingResStart, existingResEnd)) {
-          continue;
-        }
-
-        const existingResClassGroup = classGroups.find(cg => cg.id === existingRes.classGroupId);
-        if (!existingResClassGroup) {
-          continue; 
-        }
-        const existingReservationClassDays = existingResClassGroup.classDays;
-        const commonClassDays = targetClassDays.filter(day => existingReservationClassDays.includes(day));
-
-        if (commonClassDays.length > 0) {
-          // Compare shifts directly for conflict in suggestion
-          if (currentFormValues.shift === existingRes.shift) {
-            isConflicted = true;
-            break; 
-          }
-        }
-      }
-
-      if (!isConflicted) {
-        suggestions.push(classroom);
-      }
-    }
-    setSuggestedClassrooms(suggestions);
-
-  }, [watchedClassGroupId, watchedStartDate, watchedEndDate, watchedShift, classrooms, classGroups, allRecurringReservations]);
-
-
-  const classDayInRangeModifier = React.useCallback((date: Date): boolean => {
-    if (!selectedClassGroup || !selectedClassGroup.classDays.length || !watchedStartDate || !watchedEndDate) {
-      return false;
-    }
-
-    const rStart = parseISO(watchedStartDate);
-    const rEnd = parseISO(watchedEndDate);
-
-    if (!isValid(rStart) || !isValid(rEnd) || isBefore(rEnd, rStart)) {
-      return false;
-    }
-    
-    const dateIsWithinInterval = 
-      (isAfter(date, rStart) || isEqualDate(date, rStart)) &&
-      (isBefore(date, rEnd) || isEqualDate(date, rEnd));
-
-    if (!dateIsWithinInterval) {
-        return false;
-    }
-
-    const dayNum = getDay(date); 
-    const numericalClassDays = selectedClassGroup.classDays.map(d => dayOfWeekMapping[d]);
-    
-    return numericalClassDays.includes(dayNum);
-  }, [selectedClassGroup, watchedStartDate, watchedEndDate]);
-
-  const modifiers = { 
-    isClassDayInRange: classDayInRangeModifier,
-  };
-
-  const modifiersStyles = {
-    isClassDayInRange: {
-      backgroundColor: 'hsl(var(--accent) / 0.3)', 
-      color: 'hsl(var(--foreground))', 
-      borderRadius: '0.25rem',
-    },
-  };
-
-
-  async function onSubmit(values: RecurringReservationFormValues) {
-    setIsPending(true);
-    
-    const result = await createRecurringReservation(values);
-    setIsPending(false);
-
-    if (result.success) {
-      toast({
-        title: 'Sucesso!',
-        description: result.message,
-      });
-      router.push('/reservations');
-      router.refresh();
-    } else {
-      if (result.errors) {
-        Object.entries(result.errors).forEach(([field, errors]) => {
-          if (errors) {
-            form.setError(field as keyof RecurringReservationFormValues, {
-              type: 'manual',
-              message: Array.isArray(errors) ? errors.join(', ') : String(errors),
-            });
-          }
-        });
-        toast({
-          title: 'Erro de Validação',
-          description: result.message || "Por favor, corrija os campos destacados.",
-          variant: 'destructive',
-        });
-      } else {
-        toast({
-          title: 'Erro ao criar reserva',
-          description: result.message || 'Ocorreu um erro inesperado.',
-          variant: 'destructive',
-        });
-      }
-    }
-  }
-
-  return (
-    <Form {...form}>
-      <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
-        <FormField
-          control={form.control}
-          name="purpose"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Propósito da Reserva</FormLabel>
-              <FormControl>
-                <Input placeholder="Ex: Aula de Reposição de Algoritmos" {...field} />
-              </FormControl>
-              <FormDescription>
-                Um breve motivo para a reserva.
-              </FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-
-        <FormField
-          control={form.control}
-          name="classGroupId"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Turma</FormLabel>
-              <Select 
-                onValueChange={(value) => {
-                  field.onChange(value);
-                }} 
-                defaultValue={field.value}
-              >
-                <FormControl>
-                  <SelectTrigger>
-                    <SelectValue placeholder="Selecione a turma" />
-                  </SelectTrigger>
-                </FormControl>
-                <SelectContent>
-                  {classGroups.length === 0 && <SelectItem value="no-cg" disabled>Nenhuma turma cadastrada</SelectItem>}
-                  {classGroups.map((cg) => (
-                    <SelectItem key={cg.id} value={cg.id}>
-                      {cg.name} ({cg.shift})
-                    </SelectItem>
-                  ))}
-                </SelectContent>
-              </Select>
-              <FormDescription>A turma que utilizará a sala. Os dias de aula desta turma serão usados para a reserva e destacados no calendário.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-
-        <FormField
-          control={form.control}
-          name="classroomId"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Sala</FormLabel>
-              <Select onValueChange={field.onChange} defaultValue={field.value}>
-                <FormControl>
-                  <SelectTrigger>
-                    <SelectValue placeholder="Selecione a sala" />
-                  </SelectTrigger>
-                </FormControl>
-                <SelectContent>
-                  {classrooms.length === 0 && <SelectItem value="no-cr" disabled>Nenhuma sala cadastrada</SelectItem>}
-                  {classrooms.map((cr) => (
-                    <SelectItem key={cr.id} value={cr.id}>
-                      {cr.name} (Cap: {cr.capacity ?? 'N/A'})
-                    </SelectItem>
-                  ))}
-                </SelectContent>
-              </Select>
-              <FormDescription>A sala a ser reservada.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        
-        {attemptedSuggestions && suggestedClassrooms.length > 0 && (
-          <div className="mt-4 p-3 border rounded-md bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700">
-            <p className="text-sm font-medium text-green-700 dark:text-green-300 mb-2">
-              Sugestões de salas (baseado em outras reservas recorrentes):
-            </p>
-            <ul className="list-disc list-inside text-sm space-y-1 text-green-600 dark:text-green-400">
-              {suggestedClassrooms.map(room => (
-                <li key={room.id}>
-                  {room.name} (Cap: {room.capacity ?? 'N/A'})
-                </li>
-              ))}
-            </ul>
-          </div>
-        )}
-        {attemptedSuggestions && watchedClassGroupId && watchedStartDate && watchedEndDate && watchedShift && suggestedClassrooms.length === 0 && (
-         <div className="mt-4 p-3 border rounded-md bg-amber-50 dark:bg-amber-900/30 border-amber-200 dark:border-amber-700">
-            <p className="text-sm text-amber-700 dark:text-amber-300">
-              Nenhuma sala diretamente sugerida como livre para todos os dias de aula da turma selecionada neste turno e período.
-              Verifique a disponibilidade manualmente ou prossiga (a validação final ocorrerá ao salvar).
-            </p>
-          </div>
-        )}
-
-
-        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-          <FormField
-            control={form.control}
-            name="startDate"
-            render={({ field }) => (
-              <FormItem className="flex flex-col">
-                <FormLabel>Data de Início</FormLabel>
-                <Popover>
-                  <PopoverTrigger asChild>
-                    <FormControl>
-                      <Button
-                        variant={"outline"}
-                        className={cn(
-                          "pl-3 text-left font-normal",
-                          !field.value && "text-muted-foreground"
-                        )}
-                      >
-                        {field.value && isValid(parseISO(field.value)) ? (
-                          format(parseISO(field.value), "PPP", { locale: ptBR })
-                        ) : (
-                          <span>Escolha uma data</span>
-                        )}
-                        <CalendarDateIcon className="ml-auto h-4 w-4 opacity-50" />
-                      </Button>
-                    </FormControl>
-                  </PopoverTrigger>
-                  <PopoverContent className="w-auto p-0" align="start">
-                    <Calendar
-                      mode="single"
-                      selected={field.value && isValid(parseISO(field.value)) ? parseISO(field.value) : undefined}
-                      onSelect={(date) => field.onChange(date ? format(date, 'yyyy-MM-dd') : '')}
-                      initialFocus
-                      locale={ptBR}
-                      modifiers={modifiers}
-                      modifiersStyles={modifiersStyles}
-                    />
-                  </PopoverContent>
-                </Popover>
-                <FormDescription>Início do período da reserva.</FormDescription>
-                <FormMessage />
-              </FormItem>
-            )}
-          />
-
-          <FormField
-            control={form.control}
-            name="endDate"
-            render={({ field }) => (
-              <FormItem className="flex flex-col">
-                <FormLabel>Data de Fim</FormLabel>
-                <Popover>
-                  <PopoverTrigger asChild>
-                    <FormControl>
-                      <Button
-                        variant={"outline"}
-                        className={cn(
-                          "pl-3 text-left font-normal",
-                          !field.value && "text-muted-foreground"
-                        )}
-                      >
-                        {field.value && isValid(parseISO(field.value)) ? (
-                           format(parseISO(field.value), "PPP", { locale: ptBR })
-                        ) : (
-                          <span>Escolha uma data</span>
-                        )}
-                        <CalendarDateIcon className="ml-auto h-4 w-4 opacity-50" />
-                      </Button>
-                    </FormControl>
-                  </PopoverTrigger>
-                  <PopoverContent className="w-auto p-0" align="start">
-                    <Calendar
-                      mode="single"
-                      selected={field.value && isValid(parseISO(field.value)) ? parseISO(field.value) : undefined}
-                      onSelect={(date) => field.onChange(date ? format(date, 'yyyy-MM-dd') : '')}
-                      disabled={(date) => {
-                        const startDateVal = form.getValues("startDate");
-                        if (!startDateVal) return false;
-                        const localStartDate = parseISO(startDateVal);
-                        if (!isValid(localStartDate)) return false;
-                        return isBefore(date, localStartDate) && !isEqualDate(date, localStartDate);
-                      }}
-                      initialFocus
-                      locale={ptBR}
-                      modifiers={modifiers}
-                      modifiersStyles={modifiersStyles}
-                    />
-                  </PopoverContent>
-                </Popover>
-                <FormDescription>Fim do período da reserva.</FormDescription>
-                <FormMessage />
-              </FormItem>
-            )}
-          />
-        </div>
-
-        <FormField
-          control={form.control}
-          name="shift"
-          render={({ field }) => (
-            <FormItem>
-              <FormLabel>Turno da Reserva</FormLabel>
-              <Select onValueChange={field.onChange} defaultValue={field.value}>
-                <FormControl>
-                  <SelectTrigger>
-                    <SelectValue placeholder="Selecione o turno para a reserva" />
-                  </SelectTrigger>
-                </FormControl>
-                <SelectContent>
-                  {CLASS_GROUP_SHIFTS.map((shiftOption) => (
-                    <SelectItem key={shiftOption} value={shiftOption}>
-                      {shiftOption}
-                    </SelectItem>
-                  ))}
-                </SelectContent>
-              </Select>
-              <FormDescription>O turno em que a sala será reservada nos dias de aula da turma selecionada.</FormDescription>
-              <FormMessage />
-            </FormItem>
-          )}
-        />
-        
-        <div className="flex justify-end">
-          <Button type="submit" disabled={isPending} className="bg-primary hover:bg-primary/90 text-primary-foreground">
-            {isPending ? "Salvando..." : (
-              <>
-                <Save className="mr-2 h-4 w-4" />
-                Salvar Reserva Recorrente
-              </>
-            )}
-          </Button>
-        </div>
-      </form>
-    </Form>
-  );
-}
-
diff -ruN /mnt/data/firebase_project/src/components/reservations/NewRecurringReservationFormClientLoader.tsx /mnt/data/refatorados/src/components/reservations/NewRecurringReservationFormClientLoader.tsx
--- /mnt/data/firebase_project/src/components/reservations/NewRecurringReservationFormClientLoader.tsx	2025-06-18 16:04:38.474051181 +0000
+++ /mnt/data/refatorados/src/components/reservations/NewRecurringReservationFormClientLoader.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,38 +0,0 @@
-
-'use client';
-
-import dynamic from 'next/dynamic';
-import type { ComponentType } from 'react';
-import type { ClassGroup, Classroom, ClassroomRecurringReservation } from '@/types'; // Added ClassroomRecurringReservation
-
-// Dynamically import NewRecurringReservationForm
-const NewRecurringReservationForm: ComponentType<{ 
-  classGroups: ClassGroup[]; 
-  classrooms: Classroom[];
-  allRecurringReservations: ClassroomRecurringReservation[]; // Added
-}> = dynamic(
-  () => import('@/components/reservations/NewRecurringReservationForm'),
-  { 
-    loading: () => <p className="text-center py-4">Carregando formulário de reserva...</p>,
-    ssr: false 
-  }
-);
-
-interface NewRecurringReservationFormClientLoaderProps {
-  classGroups: ClassGroup[];
-  classrooms: Classroom[];
-  allRecurringReservations: ClassroomRecurringReservation[]; // Added
-}
-
-export default function NewRecurringReservationFormClientLoader({ 
-  classGroups, 
-  classrooms,
-  allRecurringReservations // Added
-}: NewRecurringReservationFormClientLoaderProps) {
-  return <NewRecurringReservationForm 
-            classGroups={classGroups} 
-            classrooms={classrooms} 
-            allRecurringReservations={allRecurringReservations} // Added
-          />;
-}
-
diff -ruN /mnt/data/firebase_project/src/components/room-availability/RoomAvailabilityClientLoader.tsx /mnt/data/refatorados/src/components/room-availability/RoomAvailabilityClientLoader.tsx
--- /mnt/data/firebase_project/src/components/room-availability/RoomAvailabilityClientLoader.tsx	2025-06-18 16:04:38.474514218 +0000
+++ /mnt/data/refatorados/src/components/room-availability/RoomAvailabilityClientLoader.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,24 +0,0 @@
-
-'use client';
-
-import dynamic from 'next/dynamic';
-import type { ComponentType } from 'react';
-import type { Classroom, ClassGroup } from '@/types';
-
-// Dynamically import RoomAvailabilityDisplay
-const RoomAvailabilityDisplay: ComponentType<{ initialClassrooms: Classroom[]; initialClassGroups: ClassGroup[] }> = dynamic(
-  () => import('@/components/room-availability/RoomAvailabilityDisplay'),
-  { 
-    loading: () => <p className="text-center py-4">Carregando quadro de disponibilidade...</p>,
-    ssr: false // This is now in a Client Component, which is allowed
-  }
-);
-
-interface RoomAvailabilityClientLoaderProps {
-  initialClassrooms: Classroom[];
-  initialClassGroups: ClassGroup[];
-}
-
-export default function RoomAvailabilityClientLoader({ initialClassrooms, initialClassGroups }: RoomAvailabilityClientLoaderProps) {
-  return <RoomAvailabilityDisplay initialClassrooms={initialClassrooms} initialClassGroups={initialClassGroups} />;
-}
diff -ruN /mnt/data/firebase_project/src/components/room-availability/RoomAvailabilityDisplay.tsx /mnt/data/refatorados/src/components/room-availability/RoomAvailabilityDisplay.tsx
--- /mnt/data/firebase_project/src/components/room-availability/RoomAvailabilityDisplay.tsx	2025-06-18 16:04:38.480203332 +0000
+++ /mnt/data/refatorados/src/components/room-availability/RoomAvailabilityDisplay.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,360 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { useState, useEffect } from 'react';
-import { format, startOfWeek, addDays, parseISO, isValid, differenceInDays, max as maxDate } from 'date-fns';
-import { ptBR } from 'date-fns/locale';
-import { Calendar as CalendarIcon, Wrench } from 'lucide-react';
-
-import { Button } from '@/components/ui/button';
-import { Calendar } from '@/components/ui/calendar';
-import {
-  Popover,
-  PopoverContent,
-  PopoverTrigger,
-} from '@/components/ui/popover';
-import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
-import { Badge } from '@/components/ui/badge';
-import { cn } from '@/lib/utils';
-import type { Classroom, ClassGroup, DayOfWeek, PeriodOfDay } from '@/types';
-import { DAYS_OF_WEEK, PERIODS_OF_DAY } from '@/lib/constants';
-import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';
-
-
-interface RoomAvailabilityDisplayProps {
-  initialClassrooms: Classroom[];
-  initialClassGroups: ClassGroup[];
-}
-
-const getCourseColorClasses = (groupName: string): string => {
-  const prefixMatch = groupName.match(/^([A-Z]+)/);
-  const prefix = prefixMatch ? prefixMatch[1] : 'DEFAULT';
-
-  switch (prefix) {
-    case 'RAD': // Radiologia - Amarelo
-      return 'bg-yellow-100 text-yellow-800 border-yellow-300 dark:bg-yellow-700/30 dark:text-yellow-200 dark:border-yellow-600 hover:bg-yellow-200 dark:hover:bg-yellow-700/50';
-    case 'FMC': // Farmácia - Roxo
-      return 'bg-purple-100 text-purple-800 border-purple-300 dark:bg-purple-700/30 dark:text-purple-200 dark:border-purple-600 hover:bg-purple-200 dark:hover:bg-purple-700/50';
-    case 'ADM': // Administração - Azul
-      return 'bg-blue-100 text-blue-800 border-blue-300 dark:bg-blue-700/30 dark:text-blue-200 dark:border-blue-600 hover:bg-blue-200 dark:hover:bg-blue-700/50';
-    case 'CDI': // Cuidador de Idosos - Rosa
-      return 'bg-pink-100 text-pink-800 border-pink-300 dark:bg-pink-700/30 dark:text-pink-200 dark:border-pink-600 hover:bg-pink-200 dark:hover:bg-pink-700/50';
-    case 'ENF': // Enfermagem - Azul Céu (mantido)
-      return 'bg-sky-100 text-sky-800 border-sky-300 dark:bg-sky-700/30 dark:text-sky-200 dark:border-sky-600 hover:bg-sky-200 dark:hover:bg-sky-700/50';
-    default: // Outros cursos - Cinza
-      return 'bg-slate-100 text-slate-800 border-slate-300 dark:bg-slate-700/30 dark:text-slate-200 dark:border-slate-600 hover:bg-slate-200 dark:hover:bg-slate-700/50';
-  }
-};
-
-const getColumnDateString = (targetDay: DayOfWeek, currentFilterStartDate: Date | undefined): string => {
-  if (!currentFilterStartDate) return '';
-  const mondayOfFilterWeek = startOfWeek(currentFilterStartDate, { weekStartsOn: 1 });
-  const orderInDAYS_OF_WEEK: DayOfWeek[] = ['Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'];
-  const targetDayIndexInOrder = orderInDAYS_OF_WEEK.indexOf(targetDay);
-  if (targetDayIndexInOrder === -1) return '';
-  const dateForColumn = addDays(mondayOfFilterWeek, targetDayIndexInOrder);
-  return format(dateForColumn, 'dd/MMM', { locale: ptBR });
-};
-
-const getShiftColorClass = (shift: PeriodOfDay): string => {
-  switch (shift) {
-    case 'Manhã':
-      return 'bg-sky-100/70 dark:bg-sky-800/40 hover:bg-sky-200/70 dark:hover:bg-sky-700/50';
-    case 'Tarde':
-      return 'bg-orange-100/70 dark:bg-orange-800/40 hover:bg-orange-200/70 dark:hover:bg-orange-700/50';
-    case 'Noite':
-      return 'bg-indigo-100/70 dark:bg-indigo-800/40 hover:bg-indigo-200/70 dark:hover:bg-indigo-700/50';
-    default:
-      return 'bg-muted/50 dark:bg-muted/30';
-  }
-};
-
-const getCellContainerClass = (classroomId: string, day: DayOfWeek, displayedClassGroups: ClassGroup[], roomIsUnderMaintenance: boolean): string => {
-    if (roomIsUnderMaintenance) {
-      return 'bg-amber-100/70 dark:bg-amber-900/40 opacity-70';
-    }
-    const groupsInCellToday = displayedClassGroups.filter(
-      cg => 
-        cg.assignedClassroomId === classroomId && 
-        Array.isArray(cg.classDays) && cg.classDays.includes(day) && 
-        cg.status === 'Em Andamento'
-    );
-    if (groupsInCellToday.length === 0) return 'bg-background dark:bg-card';
-
-    const endDates = groupsInCellToday.map(cg => parseISO(cg.endDate)).filter(date => isValid(date));
-    if (endDates.length === 0) return 'bg-muted/30 dark:bg-muted/20'; 
-
-    const latestEndDateInCell = maxDate(endDates);
-    const today = new Date();
-    today.setHours(0, 0, 0, 0);
-    const daysRemaining = differenceInDays(latestEndDateInCell, today);
-
-    if (daysRemaining < 0) return 'bg-background dark:bg-card'; // Turmas já encerradas, célula não deve ter cor de ocupação
-    if (daysRemaining <= 7) return 'bg-yellow-100/60 dark:bg-yellow-900/30'; // Perto do fim
-    return 'bg-muted/40 dark:bg-muted/20'; // Ocupado normal
-};
-
-
-export default function RoomAvailabilityDisplay({ initialClassrooms, initialClassGroups }: RoomAvailabilityDisplayProps) {
-  const [startDate, setStartDate] = useState<Date | undefined>(startOfWeek(new Date(), { weekStartsOn: 1 }));
-  const [endDate, setEndDate] = useState<Date | undefined>(addDays(startOfWeek(new Date(), { weekStartsOn: 1 }), 6));
-  const [displayedClassGroups, setDisplayedClassGroups] = useState<ClassGroup[]>([]);
-
-  const filterClassGroups = React.useCallback(() => {
-    if (!startDate || !endDate) {
-      setDisplayedClassGroups([]);
-      return;
-    }
-    const filtered = initialClassGroups.filter(cg => {
-      if (!cg || typeof cg.startDate !== 'string' || typeof cg.endDate !== 'string' || typeof cg.status !== 'string') {
-        return false; 
-      }
-      const cgStartDate = parseISO(cg.startDate);
-      const cgEndDate = parseISO(cg.endDate);
-      if (!isValid(cgStartDate) || !isValid(cgEndDate)) return false;
-      
-      if (cg.status !== 'Em Andamento') {
-          return false;
-      }
-      
-      return cgStartDate <= endDate && cgEndDate >= startDate;
-    });
-    setDisplayedClassGroups(filtered);
-  }, [startDate, endDate, initialClassGroups]);
-
-  useEffect(() => {
-    filterClassGroups();
-  }, [filterClassGroups]);
-
-  const getScheduledGroupsForShift = (classroomId: string, day: DayOfWeek, shift: PeriodOfDay): ClassGroup[] => {
-    return displayedClassGroups.filter(cg =>
-      cg.assignedClassroomId === classroomId &&
-      Array.isArray(cg.classDays) && cg.classDays.includes(day) &&
-      cg.shift === shift && 
-      cg.status === 'Em Andamento'
-    );
-  };
-
-  return (
-    <TooltipProvider>
-      <div>
-        <div className="flex flex-col sm:flex-row gap-4 mb-6 p-4 border rounded-lg items-end bg-card">
-          <div className="flex-1">
-            <label htmlFor="startDateFilter" className="block text-sm font-medium text-foreground mb-1">Data de Início da Semana</label>
-            <Popover>
-              <PopoverTrigger asChild>
-                <Button
-                  id="startDateFilter"
-                  variant={"outline"}
-                  className={cn(
-                    "w-full justify-start text-left font-normal",
-                    !startDate && "text-muted-foreground"
-                  )}
-                >
-                  <CalendarIcon className="mr-2 h-4 w-4" />
-                  {startDate ? format(startDate, "PPP", { locale: ptBR }) : <span>Escolha uma data</span>}
-                </Button>
-              </PopoverTrigger>
-              <PopoverContent className="w-auto p-0">
-                <Calendar
-                  mode="single"
-                  selected={startDate}
-                  onSelect={(date) => {
-                    if (date) {
-                      const weekStart = startOfWeek(date, { weekStartsOn: 1 });
-                      setStartDate(weekStart);
-                      setEndDate(addDays(weekStart, 6));
-                    } else {
-                      setStartDate(undefined);
-                      setEndDate(undefined);
-                    }
-                  }}
-                  initialFocus
-                  locale={ptBR}
-                />
-              </PopoverContent>
-            </Popover>
-          </div>
-          <div className="flex-1">
-            <label htmlFor="endDateFilter" className="block text-sm font-medium text-foreground mb-1">Data de Fim da Semana</label>
-            <Button
-              id="endDateFilter"
-              variant={"outline"}
-              disabled
-              className={cn(
-                "w-full justify-start text-left font-normal",
-                !endDate && "text-muted-foreground"
-              )}
-            >
-              <CalendarIcon className="mr-2 h-4 w-4" />
-              {endDate ? format(endDate, "PPP", { locale: ptBR }) : <span>Calculada automaticamente</span>}
-            </Button>
-          </div>
-        </div>
-
-        {initialClassrooms.length === 0 ? (
-          <p className="text-muted-foreground text-center py-4">Nenhuma sala cadastrada.</p>
-        ) : displayedClassGroups.length === 0 && initialClassrooms.every(c => c.isUnderMaintenance) && (startDate && endDate) ? (
-          <p className="text-muted-foreground text-center py-4">Todas as salas estão em manutenção ou nenhuma turma ativa encontrada para o período.</p>
-        ) : displayedClassGroups.length === 0 && (startDate && endDate) && !initialClassrooms.some(c => !c.isUnderMaintenance) ? (
-           <p className="text-muted-foreground text-center py-4">Todas as salas cadastradas estão em manutenção.</p>
-        ) : displayedClassGroups.length === 0 && (startDate && endDate) ? (
-           <p className="text-muted-foreground text-center py-4">Nenhuma turma ativa encontrada para o período selecionado em salas disponíveis.</p>
-        ) : !startDate || !endDate ? (
-          <p className="text-muted-foreground text-center py-4">Por favor, selecione um intervalo de datas.</p>
-        ) : (
-          <div className="overflow-x-auto border rounded-lg shadow-md bg-card">
-            <Table className="min-w-full table-fixed">
-              <TableHeader className="sticky top-0 z-20 bg-muted/95 dark:bg-muted backdrop-blur-sm shadow-sm">
-                <TableRow>
-                  <TableHead className="w-[160px] min-w-[160px] sticky top-0 left-0 bg-muted/95 dark:bg-muted z-30 shadow-sm text-sm font-semibold text-foreground border-r px-3 py-3 align-middle">Sala</TableHead>
-                  {DAYS_OF_WEEK.map(day => {
-                    const columnDateStr = getColumnDateString(day, startDate);
-                    return (
-                      <TableHead key={day} className="w-[180px] min-w-[180px] text-center whitespace-nowrap text-sm font-semibold text-foreground border-r px-2 py-3 align-middle">
-                        {day.substring(0,3)}
-                        {columnDateStr && (
-                          <>
-                            <br />
-                            <span className="text-xs font-normal text-muted-foreground">{columnDateStr}</span>
-                          </>
-                        )}
-                      </TableHead>
-                    );
-                  })}
-                </TableRow>
-              </TableHeader>
-              <TableBody>
-                {initialClassrooms.map((room: Classroom) => (
-                  <TableRow key={room.id} className="hover:bg-muted/20 dark:hover:bg-muted/50 transition-colors duration-150">
-                    <TableCell className={cn("font-medium sticky left-0 bg-card dark:bg-muted z-10 shadow-sm whitespace-nowrap text-sm py-3 px-3 border-r align-top min-h-[170px]", room.isUnderMaintenance && "bg-amber-50 dark:bg-amber-900/50")}>
-                      {room.name}
-                      <span className="block text-xs text-muted-foreground mt-0.5">(Cap: {room.capacity ?? 'N/A'})</span>
-                      {room.isUnderMaintenance && (
-                        <Tooltip delayDuration={150}>
-                          <TooltipTrigger asChild>
-                            <Badge variant="outline" className="mt-1.5 text-xs bg-amber-100 border-amber-400 text-amber-700 dark:bg-amber-700/30 dark:text-amber-200 dark:border-amber-600 cursor-default">
-                              <Wrench className="mr-1.5 h-3 w-3" />
-                              Manutenção
-                            </Badge>
-                          </TooltipTrigger>
-                          <TooltipContent side="bottom" className="bg-background text-foreground border shadow-lg rounded-md p-2 text-xs max-w-xs">
-                            <p className="font-semibold mb-1">Sala em Manutenção</p>
-                            {room.maintenanceReason ? (
-                              <p>Motivo: {room.maintenanceReason}</p>
-                            ) : (
-                              <p>Motivo não especificado.</p>
-                            )}
-                          </TooltipContent>
-                        </Tooltip>
-                      )}
-                    </TableCell>
-                    {DAYS_OF_WEEK.map(day => {
-                      const cellBgClass = getCellContainerClass(room.id, day, displayedClassGroups, room.isUnderMaintenance ?? false);
-                      return (
-                        <TableCell
-                          key={day}
-                          className={cn(
-                            "align-top p-0.5 transition-colors duration-150 h-[170px] border-r relative", // Adjusted height
-                            cellBgClass
-                          )}
-                        >
-                          {room.isUnderMaintenance ? (
-                            <div className="absolute inset-0 flex items-center justify-center bg-amber-100/50 dark:bg-amber-800/40 backdrop-blur-xs">
-                               <Tooltip delayDuration={150}>
-                                <TooltipTrigger asChild>
-                                  <div><Wrench className="h-8 w-8 text-amber-500 dark:text-amber-400" /></div>
-                                </TooltipTrigger>
-                                <TooltipContent side="top" className="bg-background text-foreground border shadow-lg rounded-md p-2 text-xs max-w-xs">
-                                  <p className="font-semibold mb-1">Em Manutenção</p>
-                                  {room.maintenanceReason ? (
-                                    <p>Motivo: {room.maintenanceReason}</p>
-                                  ) : (
-                                    <p>Motivo não especificado.</p>
-                                  )}
-                                </TooltipContent>
-                              </Tooltip>
-                            </div>
-                          ) : (
-                            <div className="flex flex-col space-y-0.5 h-full text-xs">
-                              {PERIODS_OF_DAY.map(shift => {
-                                const scheduledForShift = getScheduledGroupsForShift(room.id, day, shift);
-                                const shiftColorClass = getShiftColorClass(shift);
-                                return (
-                                  <Tooltip key={shift} delayDuration={150}>
-                                    <TooltipTrigger asChild>
-                                      <div
-                                        className={cn(
-                                          "flex-1 p-1 rounded-sm border border-border/30 shadow-sm transition-all flex flex-col items-center min-h-[55px] hover:shadow-md", 
-                                          shiftColorClass,
-                                          scheduledForShift.length > 0 ? "justify-start pt-0.5" : "justify-center"
-                                        )}
-                                      >
-                                        {scheduledForShift.length > 0 ? (
-                                          <div className="flex flex-col gap-0.5 items-center justify-start w-full">
-                                            {scheduledForShift.slice(0, 2).map(cg => (
-                                              <Badge
-                                                key={cg.id}
-                                                variant="secondary"
-                                                className={cn(
-                                                  "text-[10px] px-1.5 py-0.5 w-full text-left block max-w-full truncate leading-tight border font-medium shadow-xs",
-                                                  getCourseColorClasses(cg.name)
-                                                )}
-                                                title={`${cg.name} (${cg.shift})`}
-                                              >
-                                                {cg.name}
-                                              </Badge>
-                                            ))}
-                                            {scheduledForShift.length > 2 && (
-                                              <Badge variant="outline" className="text-[9px] px-1 mt-0.5 w-full text-center bg-muted/50 dark:bg-muted/70">
-                                                +{scheduledForShift.length - 2} turma(s)
-                                              </Badge>
-                                            )}
-                                          </div>
-                                        ) : (
-                                          <Badge
-                                            variant="outline"
-                                            className="text-[10px] px-2 py-1 bg-green-100 border-green-400 text-green-800 dark:bg-green-800/40 dark:text-green-200 dark:border-green-600/70 font-semibold shadow-xs"
-                                          >
-                                            Livre
-                                          </Badge>
-                                        )}
-                                      </div>
-                                    </TooltipTrigger>
-                                    <TooltipContent side="top" className="bg-background text-foreground border shadow-lg rounded-md p-2 text-xs max-w-xs">
-                                      <p className="font-semibold mb-1">{shift}</p>
-                                      {scheduledForShift.length > 0 ? (
-                                        <ul className="list-disc list-inside space-y-0.5">
-                                          {scheduledForShift.map(cg => (
-                                            <li key={cg.id} className={getCourseColorClasses(cg.name).replace(/bg-(\w+)-(\d+)/, 'text-$1-800 dark:text-$1-200').replace('border-transparent', '')}>
-                                              {cg.name}
-                                            </li>
-                                          ))}
-                                        </ul>
-                                      ) : (
-                                        <p>Este turno está livre.</p>
-                                      )}
-                                    </TooltipContent>
-                                  </Tooltip>
-                                );
-                              })}
-                            </div>
-                          )}
-                        </TableCell>
-                      );
-                    })}
-                  </TableRow>
-                ))}
-              </TableBody>
-            </Table>
-          </div>
-        )}
-        <p className="text-xs text-muted-foreground mt-6">
-            Nota: Este quadro reflete a ocupação padrão com base nos dias de aula e turnos das turmas "Em Andamento" no período selecionado. Reservas pontuais e salas em manutenção podem afetar a disponibilidade real.
-        </p>
-      </div>
-    </TooltipProvider>
-  );
-}
-
diff -ruN /mnt/data/firebase_project/src/components/shared/DeleteConfirmationDialog.tsx /mnt/data/refatorados/src/components/shared/DeleteConfirmationDialog.tsx
--- /mnt/data/firebase_project/src/components/shared/DeleteConfirmationDialog.tsx	2025-06-18 16:04:38.480960344 +0000
+++ /mnt/data/refatorados/src/components/shared/DeleteConfirmationDialog.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,68 +0,0 @@
-'use client';
-
-import {
-  AlertDialog,
-  AlertDialogAction,
-  AlertDialogCancel,
-  AlertDialogContent,
-  AlertDialogDescription,
-  AlertDialogFooter,
-  AlertDialogHeader,
-  AlertDialogTitle,
-  AlertDialogTrigger,
-} from "@/components/ui/alert-dialog";
-import { Button } from "@/components/ui/button";
-import type { ReactNode } from "react";
-import { useState } from "react";
-
-interface DeleteConfirmationDialogProps {
-  onConfirm: () => Promise<void> | void;
-  triggerButton: ReactNode;
-  dialogTitle?: string;
-  dialogDescription?: string;
-  confirmText?: string;
-  cancelText?: string;
-}
-
-export function DeleteConfirmationDialog({
-  onConfirm,
-  triggerButton,
-  dialogTitle = "Tem certeza?",
-  dialogDescription = "Esta ação não pode ser desfeita. Isso excluirá permanentemente o item.",
-  confirmText = "Excluir",
-  cancelText = "Cancelar",
-}: DeleteConfirmationDialogProps) {
-  const [isOpen, setIsOpen] = useState(false);
-  const [isPending, setIsPending] = useState(false);
-
-  const handleConfirm = async () => {
-    setIsPending(true);
-    try {
-      await onConfirm();
-      setIsOpen(false);
-    } catch (error) {
-      console.error("Failed to delete:", error);
-      // Optionally show a toast message here
-    } finally {
-      setIsPending(false);
-    }
-  };
-
-  return (
-    <AlertDialog open={isOpen} onOpenChange={setIsOpen}>
-      <AlertDialogTrigger asChild>{triggerButton}</AlertDialogTrigger>
-      <AlertDialogContent>
-        <AlertDialogHeader>
-          <AlertDialogTitle>{dialogTitle}</AlertDialogTitle>
-          <AlertDialogDescription>{dialogDescription}</AlertDialogDescription>
-        </AlertDialogHeader>
-        <AlertDialogFooter>
-          <AlertDialogCancel disabled={isPending}>{cancelText}</AlertDialogCancel>
-          <AlertDialogAction onClick={handleConfirm} disabled={isPending} className="bg-destructive hover:bg-destructive/90">
-            {isPending ? "Excluindo..." : confirmText}
-          </AlertDialogAction>
-        </AlertDialogFooter>
-      </AlertDialogContent>
-    </AlertDialog>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/shared/PageHeader.tsx /mnt/data/refatorados/src/components/shared/PageHeader.tsx
--- /mnt/data/firebase_project/src/components/shared/PageHeader.tsx	2025-06-18 16:04:38.481542296 +0000
+++ /mnt/data/refatorados/src/components/shared/PageHeader.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,26 +0,0 @@
-import type { LucideIcon } from 'lucide-react';
-import type { ReactNode } from 'react';
-
-interface PageHeaderProps {
-  title: string;
-  description?: string;
-  icon?: LucideIcon;
-  actions?: ReactNode;
-}
-
-export default function PageHeader({ title, description, icon: Icon, actions }: PageHeaderProps) {
-  return (
-    <div className="mb-6 md:mb-8">
-      <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
-        <div className="flex items-center gap-3">
-          {Icon && <Icon className="w-8 h-8 text-primary hidden md:block" />}
-          <div>
-            <h1 className="text-2xl md:text-3xl font-bold text-foreground font-headline">{title}</h1>
-            {description && <p className="text-muted-foreground mt-1 text-sm md:text-base">{description}</p>}
-          </div>
-        </div>
-        {actions && <div className="flex-shrink-0">{actions}</div>}
-      </div>
-    </div>
-  );
-}
diff -ruN /mnt/data/firebase_project/src/components/tv-display/TvDisplayClient.tsx /mnt/data/refatorados/src/components/tv-display/TvDisplayClient.tsx
--- /mnt/data/firebase_project/src/components/tv-display/TvDisplayClient.tsx	2025-06-18 16:04:38.482044842 +0000
+++ /mnt/data/refatorados/src/components/tv-display/TvDisplayClient.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,244 +0,0 @@
-
-'use client';
-
-import * as React from 'react';
-import { useRouter } from 'next/navigation';
-import { DoorOpen, MonitorPlay, AlertTriangle, WifiOff } from 'lucide-react';
-import { format } from 'date-fns';
-import { ptBR } from 'date-fns/locale';
-import { cn } from '@/lib/utils';
-
-export interface TvDisplayInfo {
-  id: string;
-  groupName: string;
-  shift: string;
-  classroomName: string | null;
-}
-
-interface TvDisplayClientProps {
-  initialDisplayData: TvDisplayInfo[];
-}
-
-const PLACEHOLDER_DATE = "Carregando data...";
-const LOCAL_STORAGE_KEY = 'tvDisplayData';
-const DATA_CHECK_INTERVAL = 3 * 60 * 1000; // 3 minutes
-const RETRY_INTERVAL = 30 * 1000; // 30 seconds
-const PAGE_RELOAD_INTERVAL = 6 * 60 * 60 * 1000; // 6 hours
-
-interface DataStatus {
-  classGroupsMtime: number | null;
-  classroomsMtime: number | null;
-}
-
-const getCourseLeftBorderColorClass = (groupName: string): string => {
-  const prefixMatch = groupName.match(/^([A-Z]+)/);
-  const prefix = prefixMatch ? prefixMatch[1] : 'DEFAULT';
-
-  switch (prefix) {
-    case 'RAD': // Radiologia - Amarelo
-      return 'border-l-yellow-500';
-    case 'FMC': // Farmácia - Roxo
-      return 'border-l-purple-500';
-    case 'ADM': // Administração - Azul
-      return 'border-l-blue-500';
-    case 'CDI': // Cuidador de Idosos - Rosa
-      return 'border-l-pink-500';
-    case 'ENF': // Enfermagem - Azul Céu
-      return 'border-l-sky-500';
-    default: // Outros cursos - Cor primária (verde)
-      return 'border-l-primary';
-  }
-};
-
-export default function TvDisplayClient({ initialDisplayData }: TvDisplayClientProps) {
-  const router = useRouter();
-  const [displayData, setDisplayData] = React.useState<TvDisplayInfo[]>(initialDisplayData);
-  const [liveCurrentDateHeader, setLiveCurrentDateHeader] = React.useState<string>(PLACEHOLDER_DATE);
-  const [lastDataStatus, setLastDataStatus] = React.useState<DataStatus | null>(null);
-  const [isOffline, setIsOffline] = React.useState<boolean>(false);
-  const [usingLocalStorageData, setUsingLocalStorageData] = React.useState<boolean>(false);
-  const retryTimeoutRef = React.useRef<NodeJS.Timeout | null>(null);
-
-  React.useEffect(() => {
-    const updateDateHeader = () => {
-      const now = new Date();
-      setLiveCurrentDateHeader(format(now, "EEEE, dd 'de' MMMM", { locale: ptBR }));
-    };
-    
-    updateDateHeader(); // Set date on mount
-    
-    const pageReloadTimer = setTimeout(() => {
-      window.location.reload();
-    }, PAGE_RELOAD_INTERVAL);
-
-    return () => {
-      clearTimeout(pageReloadTimer);
-      if (retryTimeoutRef.current) {
-        clearTimeout(retryTimeoutRef.current);
-      }
-    };
-  }, []);
-
-  const saveToLocalStorage = (data: TvDisplayInfo[]) => {
-    try {
-      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(data));
-    } catch (error) {
-      console.error("TV Display: Error saving data to localStorage", error);
-    }
-  };
-
-  const loadFromLocalStorage = (): TvDisplayInfo[] | null => {
-    try {
-      const cachedData = localStorage.getItem(LOCAL_STORAGE_KEY);
-      return cachedData ? JSON.parse(cachedData) : null;
-    } catch (error) {
-      console.error("TV Display: Error loading data from localStorage", error);
-      return null;
-    }
-  };
-  
-  const checkDataChanges = React.useCallback(async () => {
-    if (retryTimeoutRef.current) {
-      clearTimeout(retryTimeoutRef.current);
-      retryTimeoutRef.current = null;
-    }
-    try {
-      const response = await fetch('/api/data-status');
-      if (!response.ok) {
-        throw new Error(`Failed to fetch data status: ${response.statusText}`);
-      }
-      const currentDataStatus: DataStatus = await response.json();
-      setIsOffline(false);
-
-      if (lastDataStatus) {
-        if (
-          currentDataStatus.classGroupsMtime !== lastDataStatus.classGroupsMtime ||
-          currentDataStatus.classroomsMtime !== lastDataStatus.classroomsMtime
-        ) {
-          router.refresh(); 
-        }
-      }
-      setLastDataStatus(currentDataStatus);
-    } catch (error) {
-      console.error('TV Display: Error fetching data status -', error);
-      setIsOffline(true);
-      retryTimeoutRef.current = setTimeout(checkDataChanges, RETRY_INTERVAL);
-    }
-  }, [router, lastDataStatus]);
-
-  React.useEffect(() => {
-    checkDataChanges(); 
-    const dataCheckIntervalId = setInterval(checkDataChanges, DATA_CHECK_INTERVAL);
-    return () => clearInterval(dataCheckIntervalId);
-  }, [checkDataChanges]);
-
-  React.useEffect(() => {
-    if (initialDisplayData && initialDisplayData.length > 0) {
-      setDisplayData(initialDisplayData);
-      saveToLocalStorage(initialDisplayData);
-      setUsingLocalStorageData(false); 
-    } else {
-      const cachedData = loadFromLocalStorage();
-      if (cachedData && cachedData.length > 0) {
-        setDisplayData(cachedData);
-        setUsingLocalStorageData(true); 
-      } else {
-        setDisplayData([]);
-        setUsingLocalStorageData(false);
-      }
-    }
-  }, [initialDisplayData]);
-
-
-  return (
-    <div className="flex-grow w-full flex flex-col p-4 sm:p-6 md:p-8 xl:p-10">
-      <header className="mb-8 md:mb-12 text-center">
-        <div className="flex items-center justify-center mb-3 sm:mb-4">
-          <MonitorPlay className="w-14 h-14 sm:w-16 sm:h-16 md:w-20 md:h-20 text-primary mr-3 sm:mr-4" />
-          <h1 className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-extrabold tracking-tight text-foreground font-headline">
-            Guia de Salas
-          </h1>
-        </div>
-        <p className="text-2xl sm:text-3xl md:text-4xl text-muted-foreground">
-          {liveCurrentDateHeader}
-        </p>
-      </header>
-
-      {isOffline && (
-        <div className="my-3 sm:my-4 p-3 sm:p-4 bg-destructive/20 text-destructive-foreground border border-destructive rounded-md text-center flex items-center justify-center gap-2 text-sm sm:text-base md:text-lg">
-          <WifiOff className="w-5 h-5 sm:w-6 sm:h-6" />
-          Sem conexão com o servidor. Tentando novamente em {RETRY_INTERVAL / 1000} segundos...
-        </div>
-      )}
-      {usingLocalStorageData && !isOffline && (
-         <div className="my-3 sm:my-4 p-3 bg-accent/20 text-accent-foreground border border-accent rounded-md text-center text-sm sm:text-base">
-          Exibindo últimos dados salvos. A aplicação tentará atualizar em breve.
-        </div>
-      )}
-
-      {displayData.length === 0 && !usingLocalStorageData ? (
-        <div className="flex-grow flex flex-col items-center justify-center text-center p-4">
-          <AlertTriangle className="w-28 h-28 sm:w-32 sm:h-32 md:w-40 md:h-40 text-accent mb-6 sm:mb-8" />
-          <p className="text-3xl sm:text-4xl md:text-5xl font-semibold text-foreground">
-            Nenhuma turma em andamento.
-          </p>
-          <p className="text-lg sm:text-xl md:text-2xl text-muted-foreground mt-3 sm:mt-4">
-            Verifique novamente mais tarde.
-          </p>
-        </div>
-      ) : (
-        <main className="flex-grow grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 2xl:grid-cols-4 gap-4 sm:gap-6 md:gap-8">
-          {displayData.map(item => (
-            <div
-              key={item.id}
-              className={cn(
-                "bg-card rounded-xl shadow-xl p-5 sm:p-6 md:p-8 flex flex-col justify-between border border-border/70 border-l-[10px]",
-                getCourseLeftBorderColorClass(item.groupName)
-              )}
-            >
-              <div className="flex-grow">
-                <h2 className="text-4xl sm:text-5xl md:text-6xl font-bold text-foreground mb-3 sm:mb-4 truncate font-headline" title={item.groupName}>
-                  {item.groupName}
-                </h2>
-                <p className="text-2xl sm:text-3xl md:text-4xl text-muted-foreground mb-4 sm:mb-5">
-                  Turno: <span className="font-semibold text-foreground">{item.shift}</span>
-                </p>
-              </div>
-              <div className="mt-auto pt-4 sm:pt-5 border-t border-border/50">
-                {item.classroomName ? (
-                  <div className="flex items-center">
-                    <DoorOpen className="w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 text-accent mr-3 sm:mr-4 shrink-0" />
-                    <div>
-                      <p className="text-lg sm:text-xl md:text-2xl text-muted-foreground uppercase tracking-wider font-medium">Sala Atual</p>
-                      <p className="text-3xl sm:text-4xl md:text-5xl font-semibold text-foreground truncate" title={item.classroomName}>
-                        {item.classroomName}
-                      </p>
-                    </div>
-                  </div>
-                ) : (
-                  <div className="flex items-center">
-                     <AlertTriangle className="w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 text-destructive mr-3 sm:mr-4 shrink-0" />
-                     <div>
-                        <p className="text-lg sm:text-xl md:text-2xl text-muted-foreground uppercase tracking-wider font-medium">Sala</p>
-                        <p className="text-3xl sm:text-4xl md:text-5xl font-semibold text-destructive">
-                            Não Atribuída
-                        </p>
-                     </div>
-                  </div>
-                )}
-              </div>
-            </div>
-          ))}
-        </main>
-      )}
-       <footer className="mt-8 sm:mt-12 text-center text-sm sm:text-base md:text-lg text-muted-foreground">
-        {isOffline 
-          ? `Tentando reconectar...`
-          : usingLocalStorageData 
-            ? `Dados em cache. Tentando atualizar.`
-            : `Verificando atualizações.`}
-      </footer>
-    </div>
-  );
-}
-
diff -ruN /mnt/data/firebase_project/src/components/ui/accordion.tsx /mnt/data/refatorados/src/components/ui/accordion.tsx
--- /mnt/data/firebase_project/src/components/ui/accordion.tsx	2025-06-18 16:04:38.482583074 +0000
+++ /mnt/data/refatorados/src/components/ui/accordion.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,58 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as AccordionPrimitive from "@radix-ui/react-accordion"
-import { ChevronDown } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const Accordion = AccordionPrimitive.Root
-
-const AccordionItem = React.forwardRef<
-  React.ElementRef<typeof AccordionPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
->(({ className, ...props }, ref) => (
-  <AccordionPrimitive.Item
-    ref={ref}
-    className={cn("border-b", className)}
-    {...props}
-  />
-))
-AccordionItem.displayName = "AccordionItem"
-
-const AccordionTrigger = React.forwardRef<
-  React.ElementRef<typeof AccordionPrimitive.Trigger>,
-  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
->(({ className, children, ...props }, ref) => (
-  <AccordionPrimitive.Header className="flex">
-    <AccordionPrimitive.Trigger
-      ref={ref}
-      className={cn(
-        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
-        className
-      )}
-      {...props}
-    >
-      {children}
-      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
-    </AccordionPrimitive.Trigger>
-  </AccordionPrimitive.Header>
-))
-AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName
-
-const AccordionContent = React.forwardRef<
-  React.ElementRef<typeof AccordionPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
->(({ className, children, ...props }, ref) => (
-  <AccordionPrimitive.Content
-    ref={ref}
-    className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
-    {...props}
-  >
-    <div className={cn("pb-4 pt-0", className)}>{children}</div>
-  </AccordionPrimitive.Content>
-))
-
-AccordionContent.displayName = AccordionPrimitive.Content.displayName
-
-export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }
diff -ruN /mnt/data/firebase_project/src/components/ui/alert-dialog.tsx /mnt/data/refatorados/src/components/ui/alert-dialog.tsx
--- /mnt/data/firebase_project/src/components/ui/alert-dialog.tsx	2025-06-18 16:04:38.483263329 +0000
+++ /mnt/data/refatorados/src/components/ui/alert-dialog.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,141 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"
-
-import { cn } from "@/lib/utils"
-import { buttonVariants } from "@/components/ui/button"
-
-const AlertDialog = AlertDialogPrimitive.Root
-
-const AlertDialogTrigger = AlertDialogPrimitive.Trigger
-
-const AlertDialogPortal = AlertDialogPrimitive.Portal
-
-const AlertDialogOverlay = React.forwardRef<
-  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
-  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
->(({ className, ...props }, ref) => (
-  <AlertDialogPrimitive.Overlay
-    className={cn(
-      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
-      className
-    )}
-    {...props}
-    ref={ref}
-  />
-))
-AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName
-
-const AlertDialogContent = React.forwardRef<
-  React.ElementRef<typeof AlertDialogPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
->(({ className, ...props }, ref) => (
-  <AlertDialogPortal>
-    <AlertDialogOverlay />
-    <AlertDialogPrimitive.Content
-      ref={ref}
-      className={cn(
-        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
-        className
-      )}
-      {...props}
-    />
-  </AlertDialogPortal>
-))
-AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName
-
-const AlertDialogHeader = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) => (
-  <div
-    className={cn(
-      "flex flex-col space-y-2 text-center sm:text-left",
-      className
-    )}
-    {...props}
-  />
-)
-AlertDialogHeader.displayName = "AlertDialogHeader"
-
-const AlertDialogFooter = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) => (
-  <div
-    className={cn(
-      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
-      className
-    )}
-    {...props}
-  />
-)
-AlertDialogFooter.displayName = "AlertDialogFooter"
-
-const AlertDialogTitle = React.forwardRef<
-  React.ElementRef<typeof AlertDialogPrimitive.Title>,
-  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
->(({ className, ...props }, ref) => (
-  <AlertDialogPrimitive.Title
-    ref={ref}
-    className={cn("text-lg font-semibold", className)}
-    {...props}
-  />
-))
-AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName
-
-const AlertDialogDescription = React.forwardRef<
-  React.ElementRef<typeof AlertDialogPrimitive.Description>,
-  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
->(({ className, ...props }, ref) => (
-  <AlertDialogPrimitive.Description
-    ref={ref}
-    className={cn("text-sm text-muted-foreground", className)}
-    {...props}
-  />
-))
-AlertDialogDescription.displayName =
-  AlertDialogPrimitive.Description.displayName
-
-const AlertDialogAction = React.forwardRef<
-  React.ElementRef<typeof AlertDialogPrimitive.Action>,
-  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
->(({ className, ...props }, ref) => (
-  <AlertDialogPrimitive.Action
-    ref={ref}
-    className={cn(buttonVariants(), className)}
-    {...props}
-  />
-))
-AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName
-
-const AlertDialogCancel = React.forwardRef<
-  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
-  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
->(({ className, ...props }, ref) => (
-  <AlertDialogPrimitive.Cancel
-    ref={ref}
-    className={cn(
-      buttonVariants({ variant: "outline" }),
-      "mt-2 sm:mt-0",
-      className
-    )}
-    {...props}
-  />
-))
-AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName
-
-export {
-  AlertDialog,
-  AlertDialogPortal,
-  AlertDialogOverlay,
-  AlertDialogTrigger,
-  AlertDialogContent,
-  AlertDialogHeader,
-  AlertDialogFooter,
-  AlertDialogTitle,
-  AlertDialogDescription,
-  AlertDialogAction,
-  AlertDialogCancel,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/alert.tsx /mnt/data/refatorados/src/components/ui/alert.tsx
--- /mnt/data/firebase_project/src/components/ui/alert.tsx	2025-06-18 16:04:38.483877920 +0000
+++ /mnt/data/refatorados/src/components/ui/alert.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,59 +0,0 @@
-import * as React from "react"
-import { cva, type VariantProps } from "class-variance-authority"
-
-import { cn } from "@/lib/utils"
-
-const alertVariants = cva(
-  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
-  {
-    variants: {
-      variant: {
-        default: "bg-background text-foreground",
-        destructive:
-          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-    },
-  }
-)
-
-const Alert = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
->(({ className, variant, ...props }, ref) => (
-  <div
-    ref={ref}
-    role="alert"
-    className={cn(alertVariants({ variant }), className)}
-    {...props}
-  />
-))
-Alert.displayName = "Alert"
-
-const AlertTitle = React.forwardRef<
-  HTMLParagraphElement,
-  React.HTMLAttributes<HTMLHeadingElement>
->(({ className, ...props }, ref) => (
-  <h5
-    ref={ref}
-    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
-    {...props}
-  />
-))
-AlertTitle.displayName = "AlertTitle"
-
-const AlertDescription = React.forwardRef<
-  HTMLParagraphElement,
-  React.HTMLAttributes<HTMLParagraphElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn("text-sm [&_p]:leading-relaxed", className)}
-    {...props}
-  />
-))
-AlertDescription.displayName = "AlertDescription"
-
-export { Alert, AlertTitle, AlertDescription }
diff -ruN /mnt/data/firebase_project/src/components/ui/avatar.tsx /mnt/data/refatorados/src/components/ui/avatar.tsx
--- /mnt/data/firebase_project/src/components/ui/avatar.tsx	2025-06-18 16:04:38.484281332 +0000
+++ /mnt/data/refatorados/src/components/ui/avatar.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,50 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as AvatarPrimitive from "@radix-ui/react-avatar"
-
-import { cn } from "@/lib/utils"
-
-const Avatar = React.forwardRef<
-  React.ElementRef<typeof AvatarPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
->(({ className, ...props }, ref) => (
-  <AvatarPrimitive.Root
-    ref={ref}
-    className={cn(
-      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
-      className
-    )}
-    {...props}
-  />
-))
-Avatar.displayName = AvatarPrimitive.Root.displayName
-
-const AvatarImage = React.forwardRef<
-  React.ElementRef<typeof AvatarPrimitive.Image>,
-  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
->(({ className, ...props }, ref) => (
-  <AvatarPrimitive.Image
-    ref={ref}
-    className={cn("aspect-square h-full w-full", className)}
-    {...props}
-  />
-))
-AvatarImage.displayName = AvatarPrimitive.Image.displayName
-
-const AvatarFallback = React.forwardRef<
-  React.ElementRef<typeof AvatarPrimitive.Fallback>,
-  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
->(({ className, ...props }, ref) => (
-  <AvatarPrimitive.Fallback
-    ref={ref}
-    className={cn(
-      "flex h-full w-full items-center justify-center rounded-full bg-muted",
-      className
-    )}
-    {...props}
-  />
-))
-AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName
-
-export { Avatar, AvatarImage, AvatarFallback }
diff -ruN /mnt/data/firebase_project/src/components/ui/badge.tsx /mnt/data/refatorados/src/components/ui/badge.tsx
--- /mnt/data/firebase_project/src/components/ui/badge.tsx	2025-06-18 16:04:38.484882310 +0000
+++ /mnt/data/refatorados/src/components/ui/badge.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,36 +0,0 @@
-import * as React from "react"
-import { cva, type VariantProps } from "class-variance-authority"
-
-import { cn } from "@/lib/utils"
-
-const badgeVariants = cva(
-  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
-  {
-    variants: {
-      variant: {
-        default:
-          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
-        secondary:
-          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
-        destructive:
-          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
-        outline: "text-foreground",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-    },
-  }
-)
-
-export interface BadgeProps
-  extends React.HTMLAttributes<HTMLDivElement>,
-    VariantProps<typeof badgeVariants> {}
-
-function Badge({ className, variant, ...props }: BadgeProps) {
-  return (
-    <div className={cn(badgeVariants({ variant }), className)} {...props} />
-  )
-}
-
-export { Badge, badgeVariants }
diff -ruN /mnt/data/firebase_project/src/components/ui/button.tsx /mnt/data/refatorados/src/components/ui/button.tsx
--- /mnt/data/firebase_project/src/components/ui/button.tsx	2025-06-18 16:04:38.485413517 +0000
+++ /mnt/data/refatorados/src/components/ui/button.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,56 +0,0 @@
-import * as React from "react"
-import { Slot } from "@radix-ui/react-slot"
-import { cva, type VariantProps } from "class-variance-authority"
-
-import { cn } from "@/lib/utils"
-
-const buttonVariants = cva(
-  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
-  {
-    variants: {
-      variant: {
-        default: "bg-primary text-primary-foreground hover:bg-primary/90",
-        destructive:
-          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
-        outline:
-          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
-        secondary:
-          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
-        ghost: "hover:bg-accent hover:text-accent-foreground",
-        link: "text-primary underline-offset-4 hover:underline",
-      },
-      size: {
-        default: "h-10 px-4 py-2",
-        sm: "h-9 rounded-md px-3",
-        lg: "h-11 rounded-md px-8",
-        icon: "h-10 w-10",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-      size: "default",
-    },
-  }
-)
-
-export interface ButtonProps
-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
-    VariantProps<typeof buttonVariants> {
-  asChild?: boolean
-}
-
-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
-  ({ className, variant, size, asChild = false, ...props }, ref) => {
-    const Comp = asChild ? Slot : "button"
-    return (
-      <Comp
-        className={cn(buttonVariants({ variant, size, className }))}
-        ref={ref}
-        {...props}
-      />
-    )
-  }
-)
-Button.displayName = "Button"
-
-export { Button, buttonVariants }
diff -ruN /mnt/data/firebase_project/src/components/ui/calendar.tsx /mnt/data/refatorados/src/components/ui/calendar.tsx
--- /mnt/data/firebase_project/src/components/ui/calendar.tsx	2025-06-18 16:04:38.485892131 +0000
+++ /mnt/data/refatorados/src/components/ui/calendar.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,70 +0,0 @@
-"use client"
-
-import * as React from "react"
-import { ChevronLeft, ChevronRight } from "lucide-react"
-import { DayPicker } from "react-day-picker"
-
-import { cn } from "@/lib/utils"
-import { buttonVariants } from "@/components/ui/button"
-
-export type CalendarProps = React.ComponentProps<typeof DayPicker>
-
-function Calendar({
-  className,
-  classNames,
-  showOutsideDays = true,
-  ...props
-}: CalendarProps) {
-  return (
-    <DayPicker
-      showOutsideDays={showOutsideDays}
-      className={cn("p-3", className)}
-      classNames={{
-        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
-        month: "space-y-4",
-        caption: "flex justify-center pt-1 relative items-center",
-        caption_label: "text-sm font-medium",
-        nav: "space-x-1 flex items-center",
-        nav_button: cn(
-          buttonVariants({ variant: "outline" }),
-          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"
-        ),
-        nav_button_previous: "absolute left-1",
-        nav_button_next: "absolute right-1",
-        table: "w-full border-collapse space-y-1",
-        head_row: "flex",
-        head_cell:
-          "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
-        row: "flex w-full mt-2",
-        cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
-        day: cn(
-          buttonVariants({ variant: "ghost" }),
-          "h-9 w-9 p-0 font-normal aria-selected:opacity-100"
-        ),
-        day_range_end: "day-range-end",
-        day_selected:
-          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
-        day_today: "bg-accent text-accent-foreground",
-        day_outside:
-          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
-        day_disabled: "text-muted-foreground opacity-50",
-        day_range_middle:
-          "aria-selected:bg-accent aria-selected:text-accent-foreground",
-        day_hidden: "invisible",
-        ...classNames,
-      }}
-      components={{
-        IconLeft: ({ className, ...props }) => (
-          <ChevronLeft className={cn("h-4 w-4", className)} {...props} />
-        ),
-        IconRight: ({ className, ...props }) => (
-          <ChevronRight className={cn("h-4 w-4", className)} {...props} />
-        ),
-      }}
-      {...props}
-    />
-  )
-}
-Calendar.displayName = "Calendar"
-
-export { Calendar }
diff -ruN /mnt/data/firebase_project/src/components/ui/card.tsx /mnt/data/refatorados/src/components/ui/card.tsx
--- /mnt/data/firebase_project/src/components/ui/card.tsx	2025-06-18 16:04:38.486556014 +0000
+++ /mnt/data/refatorados/src/components/ui/card.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,79 +0,0 @@
-import * as React from "react"
-
-import { cn } from "@/lib/utils"
-
-const Card = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn(
-      "rounded-lg border bg-card text-card-foreground shadow-sm",
-      className
-    )}
-    {...props}
-  />
-))
-Card.displayName = "Card"
-
-const CardHeader = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn("flex flex-col space-y-1.5 p-6", className)}
-    {...props}
-  />
-))
-CardHeader.displayName = "CardHeader"
-
-const CardTitle = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn(
-      "text-2xl font-semibold leading-none tracking-tight",
-      className
-    )}
-    {...props}
-  />
-))
-CardTitle.displayName = "CardTitle"
-
-const CardDescription = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn("text-sm text-muted-foreground", className)}
-    {...props}
-  />
-))
-CardDescription.displayName = "CardDescription"
-
-const CardContent = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
-))
-CardContent.displayName = "CardContent"
-
-const CardFooter = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    className={cn("flex items-center p-6 pt-0", className)}
-    {...props}
-  />
-))
-CardFooter.displayName = "CardFooter"
-
-export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }
diff -ruN /mnt/data/firebase_project/src/components/ui/chart.tsx /mnt/data/refatorados/src/components/ui/chart.tsx
--- /mnt/data/firebase_project/src/components/ui/chart.tsx	2025-06-18 16:04:38.487230967 +0000
+++ /mnt/data/refatorados/src/components/ui/chart.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,365 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as RechartsPrimitive from "recharts"
-
-import { cn } from "@/lib/utils"
-
-// Format: { THEME_NAME: CSS_SELECTOR }
-const THEMES = { light: "", dark: ".dark" } as const
-
-export type ChartConfig = {
-  [k in string]: {
-    label?: React.ReactNode
-    icon?: React.ComponentType
-  } & (
-    | { color?: string; theme?: never }
-    | { color?: never; theme: Record<keyof typeof THEMES, string> }
-  )
-}
-
-type ChartContextProps = {
-  config: ChartConfig
-}
-
-const ChartContext = React.createContext<ChartContextProps | null>(null)
-
-function useChart() {
-  const context = React.useContext(ChartContext)
-
-  if (!context) {
-    throw new Error("useChart must be used within a <ChartContainer />")
-  }
-
-  return context
-}
-
-const ChartContainer = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div"> & {
-    config: ChartConfig
-    children: React.ComponentProps<
-      typeof RechartsPrimitive.ResponsiveContainer
-    >["children"]
-  }
->(({ id, className, children, config, ...props }, ref) => {
-  const uniqueId = React.useId()
-  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`
-
-  return (
-    <ChartContext.Provider value={{ config }}>
-      <div
-        data-chart={chartId}
-        ref={ref}
-        className={cn(
-          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
-          className
-        )}
-        {...props}
-      >
-        <ChartStyle id={chartId} config={config} />
-        <RechartsPrimitive.ResponsiveContainer>
-          {children}
-        </RechartsPrimitive.ResponsiveContainer>
-      </div>
-    </ChartContext.Provider>
-  )
-})
-ChartContainer.displayName = "Chart"
-
-const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
-  const colorConfig = Object.entries(config).filter(
-    ([, config]) => config.theme || config.color
-  )
-
-  if (!colorConfig.length) {
-    return null
-  }
-
-  return (
-    <style
-      dangerouslySetInnerHTML={{
-        __html: Object.entries(THEMES)
-          .map(
-            ([theme, prefix]) => `
-${prefix} [data-chart=${id}] {
-${colorConfig
-  .map(([key, itemConfig]) => {
-    const color =
-      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||
-      itemConfig.color
-    return color ? `  --color-${key}: ${color};` : null
-  })
-  .join("\n")}
-}
-`
-          )
-          .join("\n"),
-      }}
-    />
-  )
-}
-
-const ChartTooltip = RechartsPrimitive.Tooltip
-
-const ChartTooltipContent = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
-    React.ComponentProps<"div"> & {
-      hideLabel?: boolean
-      hideIndicator?: boolean
-      indicator?: "line" | "dot" | "dashed"
-      nameKey?: string
-      labelKey?: string
-    }
->(
-  (
-    {
-      active,
-      payload,
-      className,
-      indicator = "dot",
-      hideLabel = false,
-      hideIndicator = false,
-      label,
-      labelFormatter,
-      labelClassName,
-      formatter,
-      color,
-      nameKey,
-      labelKey,
-    },
-    ref
-  ) => {
-    const { config } = useChart()
-
-    const tooltipLabel = React.useMemo(() => {
-      if (hideLabel || !payload?.length) {
-        return null
-      }
-
-      const [item] = payload
-      const key = `${labelKey || item.dataKey || item.name || "value"}`
-      const itemConfig = getPayloadConfigFromPayload(config, item, key)
-      const value =
-        !labelKey && typeof label === "string"
-          ? config[label as keyof typeof config]?.label || label
-          : itemConfig?.label
-
-      if (labelFormatter) {
-        return (
-          <div className={cn("font-medium", labelClassName)}>
-            {labelFormatter(value, payload)}
-          </div>
-        )
-      }
-
-      if (!value) {
-        return null
-      }
-
-      return <div className={cn("font-medium", labelClassName)}>{value}</div>
-    }, [
-      label,
-      labelFormatter,
-      payload,
-      hideLabel,
-      labelClassName,
-      config,
-      labelKey,
-    ])
-
-    if (!active || !payload?.length) {
-      return null
-    }
-
-    const nestLabel = payload.length === 1 && indicator !== "dot"
-
-    return (
-      <div
-        ref={ref}
-        className={cn(
-          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
-          className
-        )}
-      >
-        {!nestLabel ? tooltipLabel : null}
-        <div className="grid gap-1.5">
-          {payload.map((item, index) => {
-            const key = `${nameKey || item.name || item.dataKey || "value"}`
-            const itemConfig = getPayloadConfigFromPayload(config, item, key)
-            const indicatorColor = color || item.payload.fill || item.color
-
-            return (
-              <div
-                key={item.dataKey}
-                className={cn(
-                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
-                  indicator === "dot" && "items-center"
-                )}
-              >
-                {formatter && item?.value !== undefined && item.name ? (
-                  formatter(item.value, item.name, item, index, item.payload)
-                ) : (
-                  <>
-                    {itemConfig?.icon ? (
-                      <itemConfig.icon />
-                    ) : (
-                      !hideIndicator && (
-                        <div
-                          className={cn(
-                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
-                            {
-                              "h-2.5 w-2.5": indicator === "dot",
-                              "w-1": indicator === "line",
-                              "w-0 border-[1.5px] border-dashed bg-transparent":
-                                indicator === "dashed",
-                              "my-0.5": nestLabel && indicator === "dashed",
-                            }
-                          )}
-                          style={
-                            {
-                              "--color-bg": indicatorColor,
-                              "--color-border": indicatorColor,
-                            } as React.CSSProperties
-                          }
-                        />
-                      )
-                    )}
-                    <div
-                      className={cn(
-                        "flex flex-1 justify-between leading-none",
-                        nestLabel ? "items-end" : "items-center"
-                      )}
-                    >
-                      <div className="grid gap-1.5">
-                        {nestLabel ? tooltipLabel : null}
-                        <span className="text-muted-foreground">
-                          {itemConfig?.label || item.name}
-                        </span>
-                      </div>
-                      {item.value && (
-                        <span className="font-mono font-medium tabular-nums text-foreground">
-                          {item.value.toLocaleString()}
-                        </span>
-                      )}
-                    </div>
-                  </>
-                )}
-              </div>
-            )
-          })}
-        </div>
-      </div>
-    )
-  }
-)
-ChartTooltipContent.displayName = "ChartTooltip"
-
-const ChartLegend = RechartsPrimitive.Legend
-
-const ChartLegendContent = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div"> &
-    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
-      hideIcon?: boolean
-      nameKey?: string
-    }
->(
-  (
-    { className, hideIcon = false, payload, verticalAlign = "bottom", nameKey },
-    ref
-  ) => {
-    const { config } = useChart()
-
-    if (!payload?.length) {
-      return null
-    }
-
-    return (
-      <div
-        ref={ref}
-        className={cn(
-          "flex items-center justify-center gap-4",
-          verticalAlign === "top" ? "pb-3" : "pt-3",
-          className
-        )}
-      >
-        {payload.map((item) => {
-          const key = `${nameKey || item.dataKey || "value"}`
-          const itemConfig = getPayloadConfigFromPayload(config, item, key)
-
-          return (
-            <div
-              key={item.value}
-              className={cn(
-                "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"
-              )}
-            >
-              {itemConfig?.icon && !hideIcon ? (
-                <itemConfig.icon />
-              ) : (
-                <div
-                  className="h-2 w-2 shrink-0 rounded-[2px]"
-                  style={{
-                    backgroundColor: item.color,
-                  }}
-                />
-              )}
-              {itemConfig?.label}
-            </div>
-          )
-        })}
-      </div>
-    )
-  }
-)
-ChartLegendContent.displayName = "ChartLegend"
-
-// Helper to extract item config from a payload.
-function getPayloadConfigFromPayload(
-  config: ChartConfig,
-  payload: unknown,
-  key: string
-) {
-  if (typeof payload !== "object" || payload === null) {
-    return undefined
-  }
-
-  const payloadPayload =
-    "payload" in payload &&
-    typeof payload.payload === "object" &&
-    payload.payload !== null
-      ? payload.payload
-      : undefined
-
-  let configLabelKey: string = key
-
-  if (
-    key in payload &&
-    typeof payload[key as keyof typeof payload] === "string"
-  ) {
-    configLabelKey = payload[key as keyof typeof payload] as string
-  } else if (
-    payloadPayload &&
-    key in payloadPayload &&
-    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
-  ) {
-    configLabelKey = payloadPayload[
-      key as keyof typeof payloadPayload
-    ] as string
-  }
-
-  return configLabelKey in config
-    ? config[configLabelKey]
-    : config[key as keyof typeof config]
-}
-
-export {
-  ChartContainer,
-  ChartTooltip,
-  ChartTooltipContent,
-  ChartLegend,
-  ChartLegendContent,
-  ChartStyle,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/checkbox.tsx /mnt/data/refatorados/src/components/ui/checkbox.tsx
--- /mnt/data/firebase_project/src/components/ui/checkbox.tsx	2025-06-18 16:04:38.487717413 +0000
+++ /mnt/data/refatorados/src/components/ui/checkbox.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,30 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
-import { Check } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const Checkbox = React.forwardRef<
-  React.ElementRef<typeof CheckboxPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
->(({ className, ...props }, ref) => (
-  <CheckboxPrimitive.Root
-    ref={ref}
-    className={cn(
-      "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
-      className
-    )}
-    {...props}
-  >
-    <CheckboxPrimitive.Indicator
-      className={cn("flex items-center justify-center text-current")}
-    >
-      <Check className="h-4 w-4" />
-    </CheckboxPrimitive.Indicator>
-  </CheckboxPrimitive.Root>
-))
-Checkbox.displayName = CheckboxPrimitive.Root.displayName
-
-export { Checkbox }
diff -ruN /mnt/data/firebase_project/src/components/ui/dialog.tsx /mnt/data/refatorados/src/components/ui/dialog.tsx
--- /mnt/data/firebase_project/src/components/ui/dialog.tsx	2025-06-18 16:04:38.488468184 +0000
+++ /mnt/data/refatorados/src/components/ui/dialog.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,122 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as DialogPrimitive from "@radix-ui/react-dialog"
-import { X } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const Dialog = DialogPrimitive.Root
-
-const DialogTrigger = DialogPrimitive.Trigger
-
-const DialogPortal = DialogPrimitive.Portal
-
-const DialogClose = DialogPrimitive.Close
-
-const DialogOverlay = React.forwardRef<
-  React.ElementRef<typeof DialogPrimitive.Overlay>,
-  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
->(({ className, ...props }, ref) => (
-  <DialogPrimitive.Overlay
-    ref={ref}
-    className={cn(
-      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
-      className
-    )}
-    {...props}
-  />
-))
-DialogOverlay.displayName = DialogPrimitive.Overlay.displayName
-
-const DialogContent = React.forwardRef<
-  React.ElementRef<typeof DialogPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
->(({ className, children, ...props }, ref) => (
-  <DialogPortal>
-    <DialogOverlay />
-    <DialogPrimitive.Content
-      ref={ref}
-      className={cn(
-        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
-        className
-      )}
-      {...props}
-    >
-      {children}
-      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
-        <X className="h-4 w-4" />
-        <span className="sr-only">Close</span>
-      </DialogPrimitive.Close>
-    </DialogPrimitive.Content>
-  </DialogPortal>
-))
-DialogContent.displayName = DialogPrimitive.Content.displayName
-
-const DialogHeader = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) => (
-  <div
-    className={cn(
-      "flex flex-col space-y-1.5 text-center sm:text-left",
-      className
-    )}
-    {...props}
-  />
-)
-DialogHeader.displayName = "DialogHeader"
-
-const DialogFooter = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) => (
-  <div
-    className={cn(
-      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
-      className
-    )}
-    {...props}
-  />
-)
-DialogFooter.displayName = "DialogFooter"
-
-const DialogTitle = React.forwardRef<
-  React.ElementRef<typeof DialogPrimitive.Title>,
-  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
->(({ className, ...props }, ref) => (
-  <DialogPrimitive.Title
-    ref={ref}
-    className={cn(
-      "text-lg font-semibold leading-none tracking-tight",
-      className
-    )}
-    {...props}
-  />
-))
-DialogTitle.displayName = DialogPrimitive.Title.displayName
-
-const DialogDescription = React.forwardRef<
-  React.ElementRef<typeof DialogPrimitive.Description>,
-  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
->(({ className, ...props }, ref) => (
-  <DialogPrimitive.Description
-    ref={ref}
-    className={cn("text-sm text-muted-foreground", className)}
-    {...props}
-  />
-))
-DialogDescription.displayName = DialogPrimitive.Description.displayName
-
-export {
-  Dialog,
-  DialogPortal,
-  DialogOverlay,
-  DialogClose,
-  DialogTrigger,
-  DialogContent,
-  DialogHeader,
-  DialogFooter,
-  DialogTitle,
-  DialogDescription,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/dropdown-menu.tsx /mnt/data/refatorados/src/components/ui/dropdown-menu.tsx
--- /mnt/data/firebase_project/src/components/ui/dropdown-menu.tsx	2025-06-18 16:04:38.489102187 +0000
+++ /mnt/data/refatorados/src/components/ui/dropdown-menu.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,200 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
-import { Check, ChevronRight, Circle } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const DropdownMenu = DropdownMenuPrimitive.Root
-
-const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger
-
-const DropdownMenuGroup = DropdownMenuPrimitive.Group
-
-const DropdownMenuPortal = DropdownMenuPrimitive.Portal
-
-const DropdownMenuSub = DropdownMenuPrimitive.Sub
-
-const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup
-
-const DropdownMenuSubTrigger = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
-    inset?: boolean
-  }
->(({ className, inset, children, ...props }, ref) => (
-  <DropdownMenuPrimitive.SubTrigger
-    ref={ref}
-    className={cn(
-      "flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  >
-    {children}
-    <ChevronRight className="ml-auto" />
-  </DropdownMenuPrimitive.SubTrigger>
-))
-DropdownMenuSubTrigger.displayName =
-  DropdownMenuPrimitive.SubTrigger.displayName
-
-const DropdownMenuSubContent = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
->(({ className, ...props }, ref) => (
-  <DropdownMenuPrimitive.SubContent
-    ref={ref}
-    className={cn(
-      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-      className
-    )}
-    {...props}
-  />
-))
-DropdownMenuSubContent.displayName =
-  DropdownMenuPrimitive.SubContent.displayName
-
-const DropdownMenuContent = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
->(({ className, sideOffset = 4, ...props }, ref) => (
-  <DropdownMenuPrimitive.Portal>
-    <DropdownMenuPrimitive.Content
-      ref={ref}
-      sideOffset={sideOffset}
-      className={cn(
-        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-        className
-      )}
-      {...props}
-    />
-  </DropdownMenuPrimitive.Portal>
-))
-DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName
-
-const DropdownMenuItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
-    inset?: boolean
-  }
->(({ className, inset, ...props }, ref) => (
-  <DropdownMenuPrimitive.Item
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  />
-))
-DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName
-
-const DropdownMenuCheckboxItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
->(({ className, children, checked, ...props }, ref) => (
-  <DropdownMenuPrimitive.CheckboxItem
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    checked={checked}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <DropdownMenuPrimitive.ItemIndicator>
-        <Check className="h-4 w-4" />
-      </DropdownMenuPrimitive.ItemIndicator>
-    </span>
-    {children}
-  </DropdownMenuPrimitive.CheckboxItem>
-))
-DropdownMenuCheckboxItem.displayName =
-  DropdownMenuPrimitive.CheckboxItem.displayName
-
-const DropdownMenuRadioItem = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
->(({ className, children, ...props }, ref) => (
-  <DropdownMenuPrimitive.RadioItem
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <DropdownMenuPrimitive.ItemIndicator>
-        <Circle className="h-2 w-2 fill-current" />
-      </DropdownMenuPrimitive.ItemIndicator>
-    </span>
-    {children}
-  </DropdownMenuPrimitive.RadioItem>
-))
-DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName
-
-const DropdownMenuLabel = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
-    inset?: boolean
-  }
->(({ className, inset, ...props }, ref) => (
-  <DropdownMenuPrimitive.Label
-    ref={ref}
-    className={cn(
-      "px-2 py-1.5 text-sm font-semibold",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  />
-))
-DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName
-
-const DropdownMenuSeparator = React.forwardRef<
-  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
-  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
->(({ className, ...props }, ref) => (
-  <DropdownMenuPrimitive.Separator
-    ref={ref}
-    className={cn("-mx-1 my-1 h-px bg-muted", className)}
-    {...props}
-  />
-))
-DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName
-
-const DropdownMenuShortcut = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLSpanElement>) => {
-  return (
-    <span
-      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
-      {...props}
-    />
-  )
-}
-DropdownMenuShortcut.displayName = "DropdownMenuShortcut"
-
-export {
-  DropdownMenu,
-  DropdownMenuTrigger,
-  DropdownMenuContent,
-  DropdownMenuItem,
-  DropdownMenuCheckboxItem,
-  DropdownMenuRadioItem,
-  DropdownMenuLabel,
-  DropdownMenuSeparator,
-  DropdownMenuShortcut,
-  DropdownMenuGroup,
-  DropdownMenuPortal,
-  DropdownMenuSub,
-  DropdownMenuSubContent,
-  DropdownMenuSubTrigger,
-  DropdownMenuRadioGroup,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/form.tsx /mnt/data/refatorados/src/components/ui/form.tsx
--- /mnt/data/firebase_project/src/components/ui/form.tsx	2025-06-18 16:04:38.489782147 +0000
+++ /mnt/data/refatorados/src/components/ui/form.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,179 +0,0 @@
-
-"use client"
-
-import * as React from "react"
-import * as LabelPrimitive from "@radix-ui/react-label"
-import { Slot } from "@radix-ui/react-slot"
-import {
-  Controller,
-  FormProvider,
-  useFormContext,
-  type ControllerProps,
-  type FieldPath,
-  type FieldValues,
-} from "react-hook-form"
-
-import { cn } from "@/lib/utils"
-import { Label } from "@/components/ui/label"
-
-const Form = FormProvider
-
-type FormFieldContextValue<
-  TFieldValues extends FieldValues = FieldValues,
-  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
-> = {
-  name: TName
-}
-
-const FormFieldContext = React.createContext<FormFieldContextValue>(
-  {} as FormFieldContextValue
-)
-
-const FormField = <
-  TFieldValues extends FieldValues = FieldValues,
-  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
->({
-  ...props
-}: ControllerProps<TFieldValues, TName>) => {
-  return (
-    <FormFieldContext.Provider value={{ name: props.name }}>
-      <Controller {...props} />
-    </FormFieldContext.Provider>
-  )
-}
-
-const useFormField = () => {
-  const fieldContext = React.useContext(FormFieldContext)
-  const itemContext = React.useContext(FormItemContext)
-  const { getFieldState, formState } = useFormContext()
-
-  const fieldState = getFieldState(fieldContext.name, formState)
-
-  if (!fieldContext) {
-    throw new Error("useFormField should be used within <FormField>")
-  }
-
-  const { id } = itemContext
-
-  return {
-    id,
-    name: fieldContext.name,
-    formItemId: `${id}-form-item`,
-    formDescriptionId: `${id}-form-item-description`,
-    formMessageId: `${id}-form-item-message`,
-    ...fieldState,
-  }
-}
-
-type FormItemContextValue = {
-  id: string
-}
-
-const FormItemContext = React.createContext<FormItemContextValue>(
-  {} as FormItemContextValue
-)
-
-const FormItem = React.forwardRef<
-  HTMLDivElement,
-  React.HTMLAttributes<HTMLDivElement>
->(({ className, ...props }, ref) => {
-  const id = React.useId()
-
-  return (
-    <FormItemContext.Provider value={{ id }}>
-      <div ref={ref} className={cn("space-y-2", className)} {...props} />
-    </FormItemContext.Provider>
-  )
-})
-FormItem.displayName = "FormItem"
-
-const FormLabel = React.forwardRef<
-  React.ElementRef<typeof LabelPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
->(({ className, ...props }, ref) => {
-  const { error, formItemId } = useFormField()
-
-  return (
-    <Label
-      ref={ref}
-      className={cn(error && "text-destructive", className)}
-      htmlFor={formItemId}
-      {...props}
-    />
-  )
-})
-FormLabel.displayName = "FormLabel"
-
-const FormControl = React.forwardRef<
-  React.ElementRef<typeof Slot>,
-  React.ComponentPropsWithoutRef<typeof Slot>
->(({ ...props }, ref) => {
-  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()
-
-  return (
-    <Slot
-      ref={ref}
-      id={formItemId}
-      aria-describedby={
-        !error
-          ? `${formDescriptionId}`
-          : `${formDescriptionId} ${formMessageId}`
-      }
-      aria-invalid={!!error}
-      {...props}
-    />
-  )
-})
-FormControl.displayName = "FormControl"
-
-const FormDescription = React.forwardRef<
-  HTMLParagraphElement,
-  React.HTMLAttributes<HTMLParagraphElement>
->(({ className, ...props }, ref) => {
-  const { formDescriptionId } = useFormField()
-
-  return (
-    <p
-      ref={ref}
-      id={formDescriptionId}
-      className={cn("text-sm text-muted-foreground", className)}
-      {...props}
-    />
-  )
-})
-FormDescription.displayName = "FormDescription"
-
-const FormMessage = React.forwardRef<
-  HTMLParagraphElement,
-  React.HTMLAttributes<HTMLParagraphElement>
->(({ className, children, ...props }, ref) => {
-  const { error, formMessageId } = useFormField()
-  const body = error ? String(error?.message ?? "") : children
-
-  if (!body) {
-    return null
-  }
-
-  return (
-    <p
-      ref={ref}
-      id={formMessageId}
-      className={cn("text-sm font-medium text-destructive", className)}
-      {...props}
-    >
-      {body}
-    </p>
-  )
-})
-FormMessage.displayName = "FormMessage"
-
-export {
-  useFormField,
-  Form,
-  FormItem,
-  FormLabel,
-  FormControl,
-  FormDescription,
-  FormMessage,
-  FormField,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/input.tsx /mnt/data/refatorados/src/components/ui/input.tsx
--- /mnt/data/firebase_project/src/components/ui/input.tsx	2025-06-18 16:04:38.490365729 +0000
+++ /mnt/data/refatorados/src/components/ui/input.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,22 +0,0 @@
-import * as React from "react"
-
-import { cn } from "@/lib/utils"
-
-const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
-  ({ className, type, ...props }, ref) => {
-    return (
-      <input
-        type={type}
-        className={cn(
-          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
-          className
-        )}
-        ref={ref}
-        {...props}
-      />
-    )
-  }
-)
-Input.displayName = "Input"
-
-export { Input }
diff -ruN /mnt/data/firebase_project/src/components/ui/label.tsx /mnt/data/refatorados/src/components/ui/label.tsx
--- /mnt/data/firebase_project/src/components/ui/label.tsx	2025-06-18 16:04:38.490683800 +0000
+++ /mnt/data/refatorados/src/components/ui/label.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,26 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as LabelPrimitive from "@radix-ui/react-label"
-import { cva, type VariantProps } from "class-variance-authority"
-
-import { cn } from "@/lib/utils"
-
-const labelVariants = cva(
-  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
-)
-
-const Label = React.forwardRef<
-  React.ElementRef<typeof LabelPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
-    VariantProps<typeof labelVariants>
->(({ className, ...props }, ref) => (
-  <LabelPrimitive.Root
-    ref={ref}
-    className={cn(labelVariants(), className)}
-    {...props}
-  />
-))
-Label.displayName = LabelPrimitive.Root.displayName
-
-export { Label }
diff -ruN /mnt/data/firebase_project/src/components/ui/menubar.tsx /mnt/data/refatorados/src/components/ui/menubar.tsx
--- /mnt/data/firebase_project/src/components/ui/menubar.tsx	2025-06-18 16:04:38.491458925 +0000
+++ /mnt/data/refatorados/src/components/ui/menubar.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,256 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as MenubarPrimitive from "@radix-ui/react-menubar"
-import { Check, ChevronRight, Circle } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-function MenubarMenu({
-  ...props
-}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {
-  return <MenubarPrimitive.Menu {...props} />
-}
-
-function MenubarGroup({
-  ...props
-}: React.ComponentProps<typeof MenubarPrimitive.Group>) {
-  return <MenubarPrimitive.Group {...props} />
-}
-
-function MenubarPortal({
-  ...props
-}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {
-  return <MenubarPrimitive.Portal {...props} />
-}
-
-function MenubarRadioGroup({
-  ...props
-}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {
-  return <MenubarPrimitive.RadioGroup {...props} />
-}
-
-function MenubarSub({
-  ...props
-}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {
-  return <MenubarPrimitive.Sub data-slot="menubar-sub" {...props} />
-}
-
-const Menubar = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
->(({ className, ...props }, ref) => (
-  <MenubarPrimitive.Root
-    ref={ref}
-    className={cn(
-      "flex h-10 items-center space-x-1 rounded-md border bg-background p-1",
-      className
-    )}
-    {...props}
-  />
-))
-Menubar.displayName = MenubarPrimitive.Root.displayName
-
-const MenubarTrigger = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.Trigger>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
->(({ className, ...props }, ref) => (
-  <MenubarPrimitive.Trigger
-    ref={ref}
-    className={cn(
-      "flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
-      className
-    )}
-    {...props}
-  />
-))
-MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName
-
-const MenubarSubTrigger = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
-    inset?: boolean
-  }
->(({ className, inset, children, ...props }, ref) => (
-  <MenubarPrimitive.SubTrigger
-    ref={ref}
-    className={cn(
-      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  >
-    {children}
-    <ChevronRight className="ml-auto h-4 w-4" />
-  </MenubarPrimitive.SubTrigger>
-))
-MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName
-
-const MenubarSubContent = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.SubContent>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
->(({ className, ...props }, ref) => (
-  <MenubarPrimitive.SubContent
-    ref={ref}
-    className={cn(
-      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-      className
-    )}
-    {...props}
-  />
-))
-MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName
-
-const MenubarContent = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
->(
-  (
-    { className, align = "start", alignOffset = -4, sideOffset = 8, ...props },
-    ref
-  ) => (
-    <MenubarPrimitive.Portal>
-      <MenubarPrimitive.Content
-        ref={ref}
-        align={align}
-        alignOffset={alignOffset}
-        sideOffset={sideOffset}
-        className={cn(
-          "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-          className
-        )}
-        {...props}
-      />
-    </MenubarPrimitive.Portal>
-  )
-)
-MenubarContent.displayName = MenubarPrimitive.Content.displayName
-
-const MenubarItem = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {
-    inset?: boolean
-  }
->(({ className, inset, ...props }, ref) => (
-  <MenubarPrimitive.Item
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  />
-))
-MenubarItem.displayName = MenubarPrimitive.Item.displayName
-
-const MenubarCheckboxItem = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
->(({ className, children, checked, ...props }, ref) => (
-  <MenubarPrimitive.CheckboxItem
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    checked={checked}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <MenubarPrimitive.ItemIndicator>
-        <Check className="h-4 w-4" />
-      </MenubarPrimitive.ItemIndicator>
-    </span>
-    {children}
-  </MenubarPrimitive.CheckboxItem>
-))
-MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName
-
-const MenubarRadioItem = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.RadioItem>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
->(({ className, children, ...props }, ref) => (
-  <MenubarPrimitive.RadioItem
-    ref={ref}
-    className={cn(
-      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <MenubarPrimitive.ItemIndicator>
-        <Circle className="h-2 w-2 fill-current" />
-      </MenubarPrimitive.ItemIndicator>
-    </span>
-    {children}
-  </MenubarPrimitive.RadioItem>
-))
-MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName
-
-const MenubarLabel = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.Label>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {
-    inset?: boolean
-  }
->(({ className, inset, ...props }, ref) => (
-  <MenubarPrimitive.Label
-    ref={ref}
-    className={cn(
-      "px-2 py-1.5 text-sm font-semibold",
-      inset && "pl-8",
-      className
-    )}
-    {...props}
-  />
-))
-MenubarLabel.displayName = MenubarPrimitive.Label.displayName
-
-const MenubarSeparator = React.forwardRef<
-  React.ElementRef<typeof MenubarPrimitive.Separator>,
-  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
->(({ className, ...props }, ref) => (
-  <MenubarPrimitive.Separator
-    ref={ref}
-    className={cn("-mx-1 my-1 h-px bg-muted", className)}
-    {...props}
-  />
-))
-MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName
-
-const MenubarShortcut = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLSpanElement>) => {
-  return (
-    <span
-      className={cn(
-        "ml-auto text-xs tracking-widest text-muted-foreground",
-        className
-      )}
-      {...props}
-    />
-  )
-}
-MenubarShortcut.displayname = "MenubarShortcut"
-
-export {
-  Menubar,
-  MenubarMenu,
-  MenubarTrigger,
-  MenubarContent,
-  MenubarItem,
-  MenubarSeparator,
-  MenubarLabel,
-  MenubarCheckboxItem,
-  MenubarRadioGroup,
-  MenubarRadioItem,
-  MenubarPortal,
-  MenubarSubContent,
-  MenubarSubTrigger,
-  MenubarGroup,
-  MenubarSub,
-  MenubarShortcut,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/popover.tsx /mnt/data/refatorados/src/components/ui/popover.tsx
--- /mnt/data/firebase_project/src/components/ui/popover.tsx	2025-06-18 16:04:38.492128368 +0000
+++ /mnt/data/refatorados/src/components/ui/popover.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,31 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as PopoverPrimitive from "@radix-ui/react-popover"
-
-import { cn } from "@/lib/utils"
-
-const Popover = PopoverPrimitive.Root
-
-const PopoverTrigger = PopoverPrimitive.Trigger
-
-const PopoverContent = React.forwardRef<
-  React.ElementRef<typeof PopoverPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
->(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
-  <PopoverPrimitive.Portal>
-    <PopoverPrimitive.Content
-      ref={ref}
-      align={align}
-      sideOffset={sideOffset}
-      className={cn(
-        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-        className
-      )}
-      {...props}
-    />
-  </PopoverPrimitive.Portal>
-))
-PopoverContent.displayName = PopoverPrimitive.Content.displayName
-
-export { Popover, PopoverTrigger, PopoverContent }
diff -ruN /mnt/data/firebase_project/src/components/ui/progress.tsx /mnt/data/refatorados/src/components/ui/progress.tsx
--- /mnt/data/firebase_project/src/components/ui/progress.tsx	2025-06-18 16:04:38.492609155 +0000
+++ /mnt/data/refatorados/src/components/ui/progress.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,28 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as ProgressPrimitive from "@radix-ui/react-progress"
-
-import { cn } from "@/lib/utils"
-
-const Progress = React.forwardRef<
-  React.ElementRef<typeof ProgressPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
->(({ className, value, ...props }, ref) => (
-  <ProgressPrimitive.Root
-    ref={ref}
-    className={cn(
-      "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
-      className
-    )}
-    {...props}
-  >
-    <ProgressPrimitive.Indicator
-      className="h-full w-full flex-1 bg-primary transition-all"
-      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
-    />
-  </ProgressPrimitive.Root>
-))
-Progress.displayName = ProgressPrimitive.Root.displayName
-
-export { Progress }
diff -ruN /mnt/data/firebase_project/src/components/ui/radio-group.tsx /mnt/data/refatorados/src/components/ui/radio-group.tsx
--- /mnt/data/firebase_project/src/components/ui/radio-group.tsx	2025-06-18 16:04:38.493277044 +0000
+++ /mnt/data/refatorados/src/components/ui/radio-group.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,44 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
-import { Circle } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const RadioGroup = React.forwardRef<
-  React.ElementRef<typeof RadioGroupPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
->(({ className, ...props }, ref) => {
-  return (
-    <RadioGroupPrimitive.Root
-      className={cn("grid gap-2", className)}
-      {...props}
-      ref={ref}
-    />
-  )
-})
-RadioGroup.displayName = RadioGroupPrimitive.Root.displayName
-
-const RadioGroupItem = React.forwardRef<
-  React.ElementRef<typeof RadioGroupPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
->(({ className, ...props }, ref) => {
-  return (
-    <RadioGroupPrimitive.Item
-      ref={ref}
-      className={cn(
-        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
-        className
-      )}
-      {...props}
-    >
-      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
-        <Circle className="h-2.5 w-2.5 fill-current text-current" />
-      </RadioGroupPrimitive.Indicator>
-    </RadioGroupPrimitive.Item>
-  )
-})
-RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName
-
-export { RadioGroup, RadioGroupItem }
diff -ruN /mnt/data/firebase_project/src/components/ui/scroll-area.tsx /mnt/data/refatorados/src/components/ui/scroll-area.tsx
--- /mnt/data/firebase_project/src/components/ui/scroll-area.tsx	2025-06-18 16:04:38.493899573 +0000
+++ /mnt/data/refatorados/src/components/ui/scroll-area.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,48 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"
-
-import { cn } from "@/lib/utils"
-
-const ScrollArea = React.forwardRef<
-  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
->(({ className, children, ...props }, ref) => (
-  <ScrollAreaPrimitive.Root
-    ref={ref}
-    className={cn("relative overflow-hidden", className)}
-    {...props}
-  >
-    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
-      {children}
-    </ScrollAreaPrimitive.Viewport>
-    <ScrollBar />
-    <ScrollAreaPrimitive.Corner />
-  </ScrollAreaPrimitive.Root>
-))
-ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName
-
-const ScrollBar = React.forwardRef<
-  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
-  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
->(({ className, orientation = "vertical", ...props }, ref) => (
-  <ScrollAreaPrimitive.ScrollAreaScrollbar
-    ref={ref}
-    orientation={orientation}
-    className={cn(
-      "flex touch-none select-none transition-colors",
-      orientation === "vertical" &&
-        "h-full w-2.5 border-l border-l-transparent p-[1px]",
-      orientation === "horizontal" &&
-        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
-      className
-    )}
-    {...props}
-  >
-    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
-  </ScrollAreaPrimitive.ScrollAreaScrollbar>
-))
-ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName
-
-export { ScrollArea, ScrollBar }
diff -ruN /mnt/data/firebase_project/src/components/ui/select.tsx /mnt/data/refatorados/src/components/ui/select.tsx
--- /mnt/data/firebase_project/src/components/ui/select.tsx	2025-06-18 16:04:38.494454034 +0000
+++ /mnt/data/refatorados/src/components/ui/select.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,160 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as SelectPrimitive from "@radix-ui/react-select"
-import { Check, ChevronDown, ChevronUp } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const Select = SelectPrimitive.Root
-
-const SelectGroup = SelectPrimitive.Group
-
-const SelectValue = SelectPrimitive.Value
-
-const SelectTrigger = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.Trigger>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
->(({ className, children, ...props }, ref) => (
-  <SelectPrimitive.Trigger
-    ref={ref}
-    className={cn(
-      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
-      className
-    )}
-    {...props}
-  >
-    {children}
-    <SelectPrimitive.Icon asChild>
-      <ChevronDown className="h-4 w-4 opacity-50" />
-    </SelectPrimitive.Icon>
-  </SelectPrimitive.Trigger>
-))
-SelectTrigger.displayName = SelectPrimitive.Trigger.displayName
-
-const SelectScrollUpButton = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
->(({ className, ...props }, ref) => (
-  <SelectPrimitive.ScrollUpButton
-    ref={ref}
-    className={cn(
-      "flex cursor-default items-center justify-center py-1",
-      className
-    )}
-    {...props}
-  >
-    <ChevronUp className="h-4 w-4" />
-  </SelectPrimitive.ScrollUpButton>
-))
-SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName
-
-const SelectScrollDownButton = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
->(({ className, ...props }, ref) => (
-  <SelectPrimitive.ScrollDownButton
-    ref={ref}
-    className={cn(
-      "flex cursor-default items-center justify-center py-1",
-      className
-    )}
-    {...props}
-  >
-    <ChevronDown className="h-4 w-4" />
-  </SelectPrimitive.ScrollDownButton>
-))
-SelectScrollDownButton.displayName =
-  SelectPrimitive.ScrollDownButton.displayName
-
-const SelectContent = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
->(({ className, children, position = "popper", ...props }, ref) => (
-  <SelectPrimitive.Portal>
-    <SelectPrimitive.Content
-      ref={ref}
-      className={cn(
-        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-        position === "popper" &&
-          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
-        className
-      )}
-      position={position}
-      {...props}
-    >
-      <SelectScrollUpButton />
-      <SelectPrimitive.Viewport
-        className={cn(
-          "p-1",
-          position === "popper" &&
-            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
-        )}
-      >
-        {children}
-      </SelectPrimitive.Viewport>
-      <SelectScrollDownButton />
-    </SelectPrimitive.Content>
-  </SelectPrimitive.Portal>
-))
-SelectContent.displayName = SelectPrimitive.Content.displayName
-
-const SelectLabel = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.Label>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
->(({ className, ...props }, ref) => (
-  <SelectPrimitive.Label
-    ref={ref}
-    className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
-    {...props}
-  />
-))
-SelectLabel.displayName = SelectPrimitive.Label.displayName
-
-const SelectItem = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.Item>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
->(({ className, children, ...props }, ref) => (
-  <SelectPrimitive.Item
-    ref={ref}
-    className={cn(
-      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
-      className
-    )}
-    {...props}
-  >
-    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
-      <SelectPrimitive.ItemIndicator>
-        <Check className="h-4 w-4" />
-      </SelectPrimitive.ItemIndicator>
-    </span>
-
-    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
-  </SelectPrimitive.Item>
-))
-SelectItem.displayName = SelectPrimitive.Item.displayName
-
-const SelectSeparator = React.forwardRef<
-  React.ElementRef<typeof SelectPrimitive.Separator>,
-  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
->(({ className, ...props }, ref) => (
-  <SelectPrimitive.Separator
-    ref={ref}
-    className={cn("-mx-1 my-1 h-px bg-muted", className)}
-    {...props}
-  />
-))
-SelectSeparator.displayName = SelectPrimitive.Separator.displayName
-
-export {
-  Select,
-  SelectGroup,
-  SelectValue,
-  SelectTrigger,
-  SelectContent,
-  SelectLabel,
-  SelectItem,
-  SelectSeparator,
-  SelectScrollUpButton,
-  SelectScrollDownButton,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/separator.tsx /mnt/data/refatorados/src/components/ui/separator.tsx
--- /mnt/data/firebase_project/src/components/ui/separator.tsx	2025-06-18 16:04:38.495166761 +0000
+++ /mnt/data/refatorados/src/components/ui/separator.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,31 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as SeparatorPrimitive from "@radix-ui/react-separator"
-
-import { cn } from "@/lib/utils"
-
-const Separator = React.forwardRef<
-  React.ElementRef<typeof SeparatorPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
->(
-  (
-    { className, orientation = "horizontal", decorative = true, ...props },
-    ref
-  ) => (
-    <SeparatorPrimitive.Root
-      ref={ref}
-      decorative={decorative}
-      orientation={orientation}
-      className={cn(
-        "shrink-0 bg-border",
-        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
-        className
-      )}
-      {...props}
-    />
-  )
-)
-Separator.displayName = SeparatorPrimitive.Root.displayName
-
-export { Separator }
diff -ruN /mnt/data/firebase_project/src/components/ui/sheet.tsx /mnt/data/refatorados/src/components/ui/sheet.tsx
--- /mnt/data/firebase_project/src/components/ui/sheet.tsx	2025-06-18 16:04:38.496297389 +0000
+++ /mnt/data/refatorados/src/components/ui/sheet.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,140 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as SheetPrimitive from "@radix-ui/react-dialog"
-import { cva, type VariantProps } from "class-variance-authority"
-import { X } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const Sheet = SheetPrimitive.Root
-
-const SheetTrigger = SheetPrimitive.Trigger
-
-const SheetClose = SheetPrimitive.Close
-
-const SheetPortal = SheetPrimitive.Portal
-
-const SheetOverlay = React.forwardRef<
-  React.ElementRef<typeof SheetPrimitive.Overlay>,
-  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
->(({ className, ...props }, ref) => (
-  <SheetPrimitive.Overlay
-    className={cn(
-      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
-      className
-    )}
-    {...props}
-    ref={ref}
-  />
-))
-SheetOverlay.displayName = SheetPrimitive.Overlay.displayName
-
-const sheetVariants = cva(
-  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
-  {
-    variants: {
-      side: {
-        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
-        bottom:
-          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
-        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
-        right:
-          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
-      },
-    },
-    defaultVariants: {
-      side: "right",
-    },
-  }
-)
-
-interface SheetContentProps
-  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
-    VariantProps<typeof sheetVariants> {}
-
-const SheetContent = React.forwardRef<
-  React.ElementRef<typeof SheetPrimitive.Content>,
-  SheetContentProps
->(({ side = "right", className, children, ...props }, ref) => (
-  <SheetPortal>
-    <SheetOverlay />
-    <SheetPrimitive.Content
-      ref={ref}
-      className={cn(sheetVariants({ side }), className)}
-      {...props}
-    >
-      {children}
-      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
-        <X className="h-4 w-4" />
-        <span className="sr-only">Close</span>
-      </SheetPrimitive.Close>
-    </SheetPrimitive.Content>
-  </SheetPortal>
-))
-SheetContent.displayName = SheetPrimitive.Content.displayName
-
-const SheetHeader = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) => (
-  <div
-    className={cn(
-      "flex flex-col space-y-2 text-center sm:text-left",
-      className
-    )}
-    {...props}
-  />
-)
-SheetHeader.displayName = "SheetHeader"
-
-const SheetFooter = ({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) => (
-  <div
-    className={cn(
-      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
-      className
-    )}
-    {...props}
-  />
-)
-SheetFooter.displayName = "SheetFooter"
-
-const SheetTitle = React.forwardRef<
-  React.ElementRef<typeof SheetPrimitive.Title>,
-  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
->(({ className, ...props }, ref) => (
-  <SheetPrimitive.Title
-    ref={ref}
-    className={cn("text-lg font-semibold text-foreground", className)}
-    {...props}
-  />
-))
-SheetTitle.displayName = SheetPrimitive.Title.displayName
-
-const SheetDescription = React.forwardRef<
-  React.ElementRef<typeof SheetPrimitive.Description>,
-  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
->(({ className, ...props }, ref) => (
-  <SheetPrimitive.Description
-    ref={ref}
-    className={cn("text-sm text-muted-foreground", className)}
-    {...props}
-  />
-))
-SheetDescription.displayName = SheetPrimitive.Description.displayName
-
-export {
-  Sheet,
-  SheetPortal,
-  SheetOverlay,
-  SheetTrigger,
-  SheetClose,
-  SheetContent,
-  SheetHeader,
-  SheetFooter,
-  SheetTitle,
-  SheetDescription,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/sidebar.tsx /mnt/data/refatorados/src/components/ui/sidebar.tsx
--- /mnt/data/firebase_project/src/components/ui/sidebar.tsx	2025-06-18 16:04:38.496962026 +0000
+++ /mnt/data/refatorados/src/components/ui/sidebar.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,765 +0,0 @@
-
-"use client"
-
-import * as React from "react"
-import { Slot } from "@radix-ui/react-slot"
-import { VariantProps, cva } from "class-variance-authority"
-import { PanelLeft } from "lucide-react"
-
-import { useIsMobile } from "@/hooks/use-mobile"
-import { cn } from "@/lib/utils"
-import { Button } from "@/components/ui/button"
-import { Input } from "@/components/ui/input"
-import { Separator } from "@/components/ui/separator"
-import { Sheet, SheetContent } from "@/components/ui/sheet"
-import { Skeleton } from "@/components/ui/skeleton"
-import {
-  Tooltip,
-  TooltipContent,
-  TooltipProvider,
-  TooltipTrigger,
-} from "@/components/ui/tooltip"
-
-const SIDEBAR_COOKIE_NAME = "sidebar_state"
-const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
-const SIDEBAR_WIDTH = "16rem"
-const SIDEBAR_WIDTH_MOBILE = "18rem"
-const SIDEBAR_WIDTH_ICON = "3rem"
-const SIDEBAR_KEYBOARD_SHORTCUT = "b"
-
-type SidebarContext = {
-  state: "expanded" | "collapsed"
-  open: boolean
-  setOpen: (open: boolean) => void
-  openMobile: boolean
-  setOpenMobile: (open: boolean) => void
-  isMobile: boolean
-  toggleSidebar: () => void
-}
-
-const SidebarContext = React.createContext<SidebarContext | null>(null)
-
-function useSidebar() {
-  const context = React.useContext(SidebarContext)
-  if (!context) {
-    throw new Error("useSidebar must be used within a SidebarProvider.")
-  }
-
-  return context
-}
-
-const SidebarProvider = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div"> & {
-    defaultOpen?: boolean
-    open?: boolean
-    onOpenChange?: (open: boolean) => void
-  }
->(
-  (
-    {
-      defaultOpen = true,
-      open: openProp,
-      onOpenChange: setOpenProp,
-      className,
-      style,
-      children,
-      ...props
-    },
-    ref
-  ) => {
-    const isMobile = useIsMobile()
-    const [openMobile, setOpenMobile] = React.useState(false)
-
-    // This is the internal state of the sidebar.
-    // We use openProp and setOpenProp for control from outside the component.
-    const [_open, _setOpen] = React.useState(defaultOpen)
-    const open = openProp ?? _open
-    const setOpen = React.useCallback(
-      (value: boolean | ((value: boolean) => boolean)) => {
-        const openState = typeof value === "function" ? value(open) : value
-        if (setOpenProp) {
-          setOpenProp(openState)
-        } else {
-          _setOpen(openState)
-        }
-
-        // This sets the cookie to keep the sidebar state.
-        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
-      },
-      [setOpenProp, open]
-    )
-
-    // Helper to toggle the sidebar.
-    const toggleSidebar = React.useCallback(() => {
-      return isMobile
-        ? setOpenMobile((open) => !open)
-        : setOpen((open) => !open)
-    }, [isMobile, setOpen, setOpenMobile])
-
-    // Adds a keyboard shortcut to toggle the sidebar.
-    React.useEffect(() => {
-      const handleKeyDown = (event: KeyboardEvent) => {
-        if (
-          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&
-          (event.metaKey || event.ctrlKey)
-        ) {
-          event.preventDefault()
-          toggleSidebar()
-        }
-      }
-
-      window.addEventListener("keydown", handleKeyDown)
-      return () => window.removeEventListener("keydown", handleKeyDown)
-    }, [toggleSidebar])
-
-    // We add a state so that we can do data-state="expanded" or "collapsed".
-    // This makes it easier to style the sidebar with Tailwind classes.
-    const state = open ? "expanded" : "collapsed"
-
-    const contextValue = React.useMemo<SidebarContext>(
-      () => ({
-        state,
-        open,
-        setOpen,
-        isMobile,
-        openMobile,
-        setOpenMobile,
-        toggleSidebar,
-      }),
-      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
-    )
-
-    return (
-      <SidebarContext.Provider value={contextValue}>
-        <TooltipProvider delayDuration={0}>
-          <div
-            style={
-              {
-                "--sidebar-width": SIDEBAR_WIDTH,
-                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
-                ...style,
-              } as React.CSSProperties
-            }
-            className={cn(
-              "group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",
-              className
-            )}
-            ref={ref}
-            {...props}
-          >
-            {children}
-          </div>
-        </TooltipProvider>
-      </SidebarContext.Provider>
-    )
-  }
-)
-SidebarProvider.displayName = "SidebarProvider"
-
-const Sidebar = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div"> & {
-    side?: "left" | "right"
-    variant?: "sidebar" | "floating" | "inset"
-    collapsible?: "offcanvas" | "icon" | "none"
-  }
->(
-  (
-    {
-      side = "left",
-      variant = "sidebar",
-      collapsible = "offcanvas",
-      className,
-      children,
-      ...props
-    },
-    ref
-  ) => {
-    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()
-
-    if (collapsible === "none") {
-      return (
-        <div
-          className={cn(
-            "flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",
-            className
-          )}
-          ref={ref}
-          {...props}
-        >
-          {children}
-        </div>
-      )
-    }
-
-    if (isMobile) {
-      return (
-        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
-          <SheetContent
-            data-sidebar="sidebar"
-            data-mobile="true"
-            className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
-            style={
-              {
-                "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
-              } as React.CSSProperties
-            }
-            side={side}
-          >
-            <div className="flex h-full w-full flex-col">{children}</div>
-          </SheetContent>
-        </Sheet>
-      )
-    }
-
-    return (
-      <div
-        ref={ref}
-        className="group peer hidden md:block text-sidebar-foreground"
-        data-state={state}
-        data-collapsible={state === "collapsed" ? collapsible : ""}
-        data-variant={variant}
-        data-side={side}
-      >
-        {/* This is what handles the sidebar gap on desktop */}
-        <div
-          className={cn(
-            "duration-150 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-out", // Changed from ease-linear
-            "group-data-[collapsible=offcanvas]:w-0",
-            "group-data-[side=right]:rotate-180",
-            variant === "floating" || variant === "inset"
-              ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
-              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]"
-          )}
-        />
-        <div
-          className={cn(
-            "duration-150 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-out md:flex", // Changed from ease-linear
-            side === "left"
-              ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
-              : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
-            // Adjust the padding for floating and inset variants.
-            variant === "floating" || variant === "inset"
-              ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
-              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",
-            className
-          )}
-          {...props}
-        >
-          <div
-            data-sidebar="sidebar"
-            className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
-          >
-            {children}
-          </div>
-        </div>
-      </div>
-    )
-  }
-)
-Sidebar.displayName = "Sidebar"
-
-const SidebarTrigger = React.forwardRef<
-  React.ElementRef<typeof Button>,
-  React.ComponentProps<typeof Button>
->(({ className, onClick, ...props }, ref) => {
-  const { toggleSidebar } = useSidebar()
-
-  return (
-    <Button
-      ref={ref}
-      data-sidebar="trigger"
-      variant="ghost"
-      size="icon"
-      className={cn("h-7 w-7", className)}
-      onClick={(event) => {
-        onClick?.(event)
-        toggleSidebar()
-      }}
-      {...props}
-    >
-      <PanelLeft />
-      <span className="sr-only">Toggle Sidebar</span>
-    </Button>
-  )
-})
-SidebarTrigger.displayName = "SidebarTrigger"
-
-const SidebarRail = React.forwardRef<
-  HTMLButtonElement,
-  React.ComponentProps<"button">
->(({ className, ...props }, ref) => {
-  const { toggleSidebar } = useSidebar()
-
-  return (
-    <button
-      ref={ref}
-      data-sidebar="rail"
-      aria-label="Toggle Sidebar"
-      tabIndex={-1}
-      onClick={toggleSidebar}
-      title="Toggle Sidebar"
-      className={cn(
-        "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-out after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex", // Changed from ease-linear
-        "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
-        "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
-        "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
-        "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
-        "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarRail.displayName = "SidebarRail"
-
-const SidebarInset = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"main">
->(({ className, ...props }, ref) => {
-  return (
-    <main
-      ref={ref}
-      className={cn(
-        "relative flex min-h-svh flex-1 flex-col bg-background",
-        "peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarInset.displayName = "SidebarInset"
-
-const SidebarInput = React.forwardRef<
-  React.ElementRef<typeof Input>,
-  React.ComponentProps<typeof Input>
->(({ className, ...props }, ref) => {
-  return (
-    <Input
-      ref={ref}
-      data-sidebar="input"
-      className={cn(
-        "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarInput.displayName = "SidebarInput"
-
-const SidebarHeader = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div">
->(({ className, ...props }, ref) => {
-  return (
-    <div
-      ref={ref}
-      data-sidebar="header"
-      className={cn("flex flex-col gap-2 p-2", className)}
-      {...props}
-    />
-  )
-})
-SidebarHeader.displayName = "SidebarHeader"
-
-const SidebarFooter = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div">
->(({ className, ...props }, ref) => {
-  return (
-    <div
-      ref={ref}
-      data-sidebar="footer"
-      className={cn("flex flex-col gap-2 p-2", className)}
-      {...props}
-    />
-  )
-})
-SidebarFooter.displayName = "SidebarFooter"
-
-const SidebarSeparator = React.forwardRef<
-  React.ElementRef<typeof Separator>,
-  React.ComponentProps<typeof Separator>
->(({ className, ...props }, ref) => {
-  return (
-    <Separator
-      ref={ref}
-      data-sidebar="separator"
-      className={cn("mx-2 w-auto bg-sidebar-border", className)}
-      {...props}
-    />
-  )
-})
-SidebarSeparator.displayName = "SidebarSeparator"
-
-const SidebarContent = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div">
->(({ className, ...props }, ref) => {
-  return (
-    <div
-      ref={ref}
-      data-sidebar="content"
-      className={cn(
-        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarContent.displayName = "SidebarContent"
-
-const SidebarGroup = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div">
->(({ className, ...props }, ref) => {
-  return (
-    <div
-      ref={ref}
-      data-sidebar="group"
-      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
-      {...props}
-    />
-  )
-})
-SidebarGroup.displayName = "SidebarGroup"
-
-const SidebarGroupLabel = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div"> & { asChild?: boolean }
->(({ className, asChild = false, ...props }, ref) => {
-  const Comp = asChild ? Slot : "div"
-
-  return (
-    <Comp
-      ref={ref}
-      data-sidebar="group-label"
-      className={cn(
-        "duration-150 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-out focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0", // Changed from ease-linear
-        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarGroupLabel.displayName = "SidebarGroupLabel"
-
-const SidebarGroupAction = React.forwardRef<
-  HTMLButtonElement,
-  React.ComponentProps<"button"> & { asChild?: boolean }
->(({ className, asChild = false, ...props }, ref) => {
-  const Comp = asChild ? Slot : "button"
-
-  return (
-    <Comp
-      ref={ref}
-      data-sidebar="group-action"
-      className={cn(
-        "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
-        // Increases the hit area of the button on mobile.
-        "after:absolute after:-inset-2 after:md:hidden",
-        "group-data-[collapsible=icon]:hidden",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarGroupAction.displayName = "SidebarGroupAction"
-
-const SidebarGroupContent = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div">
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    data-sidebar="group-content"
-    className={cn("w-full text-sm", className)}
-    {...props}
-  />
-))
-SidebarGroupContent.displayName = "SidebarGroupContent"
-
-const SidebarMenu = React.forwardRef<
-  HTMLUListElement,
-  React.ComponentProps<"ul">
->(({ className, ...props }, ref) => (
-  <ul
-    ref={ref}
-    data-sidebar="menu"
-    className={cn("flex w-full min-w-0 flex-col gap-1", className)}
-    {...props}
-  />
-))
-SidebarMenu.displayName = "SidebarMenu"
-
-const SidebarMenuItem = React.forwardRef<
-  HTMLLIElement,
-  React.ComponentProps<"li">
->(({ className, ...props }, ref) => (
-  <li
-    ref={ref}
-    data-sidebar="menu-item"
-    className={cn("group/menu-item relative", className)}
-    {...props}
-  />
-))
-SidebarMenuItem.displayName = "SidebarMenuItem"
-
-const sidebarMenuButtonVariants = cva(
-  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
-  {
-    variants: {
-      variant: {
-        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
-        outline:
-          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
-      },
-      size: {
-        default: "h-8 text-sm",
-        sm: "h-7 text-xs",
-        lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-      size: "default",
-    },
-  }
-)
-
-const SidebarMenuButton = React.forwardRef<
-  HTMLButtonElement,
-  React.ComponentProps<"button"> & {
-    asChild?: boolean
-    isActive?: boolean
-    tooltip?: string | React.ComponentProps<typeof TooltipContent>
-  } & VariantProps<typeof sidebarMenuButtonVariants>
->(
-  (
-    {
-      asChild = false,
-      isActive = false,
-      variant = "default",
-      size = "default",
-      tooltip,
-      className,
-      ...props
-    },
-    ref
-  ) => {
-    const Comp = asChild ? Slot : "button"
-    const { isMobile, state } = useSidebar()
-
-    const button = (
-      <Comp
-        ref={ref}
-        data-sidebar="menu-button"
-        data-size={size}
-        data-active={isActive}
-        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
-        {...props}
-      />
-    )
-
-    if (!tooltip) {
-      return button
-    }
-
-    if (typeof tooltip === "string") {
-      tooltip = {
-        children: tooltip,
-      }
-    }
-
-    return (
-      <Tooltip>
-        <TooltipTrigger asChild>{button}</TooltipTrigger>
-        <TooltipContent
-          side="right"
-          align="center"
-          hidden={state !== "collapsed" || isMobile}
-          {...tooltip}
-        />
-      </Tooltip>
-    )
-  }
-)
-SidebarMenuButton.displayName = "SidebarMenuButton"
-
-const SidebarMenuAction = React.forwardRef<
-  HTMLButtonElement,
-  React.ComponentProps<"button"> & {
-    asChild?: boolean
-    showOnHover?: boolean
-  }
->(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
-  const Comp = asChild ? Slot : "button"
-
-  return (
-    <Comp
-      ref={ref}
-      data-sidebar="menu-action"
-      className={cn(
-        "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0",
-        // Increases the hit area of the button on mobile.
-        "after:absolute after:-inset-2 after:md:hidden",
-        "peer-data-[size=sm]/menu-button:top-1",
-        "peer-data-[size=default]/menu-button:top-1.5",
-        "peer-data-[size=lg]/menu-button:top-2.5",
-        "group-data-[collapsible=icon]:hidden",
-        showOnHover &&
-          "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarMenuAction.displayName = "SidebarMenuAction"
-
-const SidebarMenuBadge = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div">
->(({ className, ...props }, ref) => (
-  <div
-    ref={ref}
-    data-sidebar="menu-badge"
-    className={cn(
-      "absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none",
-      "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
-      "peer-data-[size=sm]/menu-button:top-1",
-      "peer-data-[size=default]/menu-button:top-1.5",
-      "peer-data-[size=lg]/menu-button:top-2.5",
-      "group-data-[collapsible=icon]:hidden",
-      className
-    )}
-    {...props}
-  />
-))
-SidebarMenuBadge.displayName = "SidebarMenuBadge"
-
-const SidebarMenuSkeleton = React.forwardRef<
-  HTMLDivElement,
-  React.ComponentProps<"div"> & {
-    showIcon?: boolean
-  }
->(({ className, showIcon = false, ...props }, ref) => {
-  // Random width between 50 to 90%.
-  const width = React.useMemo(() => {
-    return `${Math.floor(Math.random() * 40) + 50}%`
-  }, [])
-
-  return (
-    <div
-      ref={ref}
-      data-sidebar="menu-skeleton"
-      className={cn("rounded-md h-8 flex gap-2 px-2 items-center", className)}
-      {...props}
-    >
-      {showIcon && (
-        <Skeleton
-          className="size-4 rounded-md"
-          data-sidebar="menu-skeleton-icon"
-        />
-      )}
-      <Skeleton
-        className="h-4 flex-1 max-w-[--skeleton-width]"
-        data-sidebar="menu-skeleton-text"
-        style={
-          {
-            "--skeleton-width": width,
-          } as React.CSSProperties
-        }
-      />
-    </div>
-  )
-})
-SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton"
-
-const SidebarMenuSub = React.forwardRef<
-  HTMLUListElement,
-  React.ComponentProps<"ul">
->(({ className, ...props }, ref) => (
-  <ul
-    ref={ref}
-    data-sidebar="menu-sub"
-    className={cn(
-      "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
-      "group-data-[collapsible=icon]:hidden",
-      className
-    )}
-    {...props}
-  />
-))
-SidebarMenuSub.displayName = "SidebarMenuSub"
-
-const SidebarMenuSubItem = React.forwardRef<
-  HTMLLIElement,
-  React.ComponentProps<"li">
->(({ ...props }, ref) => <li ref={ref} {...props} />)
-SidebarMenuSubItem.displayName = "SidebarMenuSubItem"
-
-const SidebarMenuSubButton = React.forwardRef<
-  HTMLAnchorElement,
-  React.ComponentProps<"a"> & {
-    asChild?: boolean
-    size?: "sm" | "md"
-    isActive?: boolean
-  }
->(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
-  const Comp = asChild ? Slot : "a"
-
-  return (
-    <Comp
-      ref={ref}
-      data-sidebar="menu-sub-button"
-      data-size={size}
-      data-active={isActive}
-      className={cn(
-        "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
-        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
-        size === "sm" && "text-xs",
-        size === "md" && "text-sm",
-        "group-data-[collapsible=icon]:hidden",
-        className
-      )}
-      {...props}
-    />
-  )
-})
-SidebarMenuSubButton.displayName = "SidebarMenuSubButton"
-
-export {
-  Sidebar,
-  SidebarContent,
-  SidebarFooter,
-  SidebarGroup,
-  SidebarGroupAction,
-  SidebarGroupContent,
-  SidebarGroupLabel,
-  SidebarHeader,
-  SidebarInput,
-  SidebarInset,
-  SidebarMenu,
-  SidebarMenuAction,
-  SidebarMenuBadge,
-  SidebarMenuButton,
-  SidebarMenuItem,
-  SidebarMenuSkeleton,
-  SidebarMenuSub,
-  SidebarMenuSubButton,
-  SidebarMenuSubItem,
-  SidebarProvider,
-  SidebarRail,
-  SidebarSeparator,
-  SidebarTrigger,
-  useSidebar,
-}
-
diff -ruN /mnt/data/firebase_project/src/components/ui/skeleton.tsx /mnt/data/refatorados/src/components/ui/skeleton.tsx
--- /mnt/data/firebase_project/src/components/ui/skeleton.tsx	2025-06-18 16:04:38.497440573 +0000
+++ /mnt/data/refatorados/src/components/ui/skeleton.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,15 +0,0 @@
-import { cn } from "@/lib/utils"
-
-function Skeleton({
-  className,
-  ...props
-}: React.HTMLAttributes<HTMLDivElement>) {
-  return (
-    <div
-      className={cn("animate-pulse rounded-md bg-muted", className)}
-      {...props}
-    />
-  )
-}
-
-export { Skeleton }
diff -ruN /mnt/data/firebase_project/src/components/ui/slider.tsx /mnt/data/refatorados/src/components/ui/slider.tsx
--- /mnt/data/firebase_project/src/components/ui/slider.tsx	2025-06-18 16:04:38.501298536 +0000
+++ /mnt/data/refatorados/src/components/ui/slider.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,28 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as SliderPrimitive from "@radix-ui/react-slider"
-
-import { cn } from "@/lib/utils"
-
-const Slider = React.forwardRef<
-  React.ElementRef<typeof SliderPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
->(({ className, ...props }, ref) => (
-  <SliderPrimitive.Root
-    ref={ref}
-    className={cn(
-      "relative flex w-full touch-none select-none items-center",
-      className
-    )}
-    {...props}
-  >
-    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-secondary">
-      <SliderPrimitive.Range className="absolute h-full bg-primary" />
-    </SliderPrimitive.Track>
-    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
-  </SliderPrimitive.Root>
-))
-Slider.displayName = SliderPrimitive.Root.displayName
-
-export { Slider }
diff -ruN /mnt/data/firebase_project/src/components/ui/switch.tsx /mnt/data/refatorados/src/components/ui/switch.tsx
--- /mnt/data/firebase_project/src/components/ui/switch.tsx	2025-06-18 16:04:38.501900394 +0000
+++ /mnt/data/refatorados/src/components/ui/switch.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,29 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as SwitchPrimitives from "@radix-ui/react-switch"
-
-import { cn } from "@/lib/utils"
-
-const Switch = React.forwardRef<
-  React.ElementRef<typeof SwitchPrimitives.Root>,
-  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
->(({ className, ...props }, ref) => (
-  <SwitchPrimitives.Root
-    className={cn(
-      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
-      className
-    )}
-    {...props}
-    ref={ref}
-  >
-    <SwitchPrimitives.Thumb
-      className={cn(
-        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
-      )}
-    />
-  </SwitchPrimitives.Root>
-))
-Switch.displayName = SwitchPrimitives.Root.displayName
-
-export { Switch }
diff -ruN /mnt/data/firebase_project/src/components/ui/table.tsx /mnt/data/refatorados/src/components/ui/table.tsx
--- /mnt/data/firebase_project/src/components/ui/table.tsx	2025-06-18 16:04:38.502455952 +0000
+++ /mnt/data/refatorados/src/components/ui/table.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,126 +0,0 @@
-import * as React from "react"
-
-import { cn } from "@/lib/utils"
-
-const Table = React.forwardRef<
-  HTMLTableElement,
-  React.HTMLAttributes<HTMLTableElement>
->(({ className, ...props }, ref) => (
-  <div className="relative w-full overflow-auto">
-    <table
-      ref={ref}
-      className={cn("w-full caption-bottom text-sm", className)}
-      {...props}
-    />
-  </div>
-))
-Table.displayName = "Table"
-
-const TableHeader = React.forwardRef<
-  HTMLTableSectionElement,
-  React.HTMLAttributes<HTMLTableSectionElement>
->(({ className, ...props }, ref) => (
-  <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
-))
-TableHeader.displayName = "TableHeader"
-
-const TableBody = React.forwardRef<
-  HTMLTableSectionElement,
-  React.HTMLAttributes<HTMLTableSectionElement>
->(({ className, ...props }, ref) => (
-  <tbody
-    ref={ref}
-    className={cn("[&_tr:last-child]:border-0", className)}
-    {...props}
-  />
-))
-TableBody.displayName = "TableBody"
-
-const TableFooter = React.forwardRef<
-  HTMLTableSectionElement,
-  React.HTMLAttributes<HTMLTableSectionElement>
->(({ className, ...props }, ref) => (
-  <tfoot
-    ref={ref}
-    className={cn(
-      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
-      className
-    )}
-    {...props}
-  />
-))
-TableFooter.displayName = "TableFooter"
-
-const TableRow = React.forwardRef<
-  HTMLTableRowElement,
-  React.HTMLAttributes<HTMLTableRowElement>
->(({ className, children, ...props }, ref) => {
-  // Filter out whitespace-only string children to prevent hydration errors
-  const filteredChildren = React.Children.toArray(children).filter(child =>
-    !(typeof child === 'string' && child.trim() === '')
-  );
-
-  return (
-    <tr
-      ref={ref}
-      className={cn(
-        "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
-        className
-      )}
-      {...props}
-    >
-      {filteredChildren}
-    </tr>
-  );
-});
-TableRow.displayName = "TableRow"
-
-const TableHead = React.forwardRef<
-  HTMLTableCellElement,
-  React.ThHTMLAttributes<HTMLTableCellElement>
->(({ className, ...props }, ref) => (
-  <th
-    ref={ref}
-    className={cn(
-      "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
-      className
-    )}
-    {...props}
-  />
-))
-TableHead.displayName = "TableHead"
-
-const TableCell = React.forwardRef<
-  HTMLTableCellElement,
-  React.TdHTMLAttributes<HTMLTableCellElement>
->(({ className, ...props }, ref) => (
-  <td
-    ref={ref}
-    className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}
-    {...props}
-  />
-))
-TableCell.displayName = "TableCell"
-
-const TableCaption = React.forwardRef<
-  HTMLTableCaptionElement,
-  React.HTMLAttributes<HTMLTableCaptionElement>
->(({ className, ...props }, ref) => (
-  <caption
-    ref={ref}
-    className={cn("mt-4 text-sm text-muted-foreground", className)}
-    {...props}
-  />
-))
-TableCaption.displayName = "TableCaption"
-
-export {
-  Table,
-  TableHeader,
-  TableBody,
-  TableFooter,
-  TableHead,
-  TableRow,
-  TableCell,
-  TableCaption,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/tabs.tsx /mnt/data/refatorados/src/components/ui/tabs.tsx
--- /mnt/data/firebase_project/src/components/ui/tabs.tsx	2025-06-18 16:04:38.503082337 +0000
+++ /mnt/data/refatorados/src/components/ui/tabs.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,55 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as TabsPrimitive from "@radix-ui/react-tabs"
-
-import { cn } from "@/lib/utils"
-
-const Tabs = TabsPrimitive.Root
-
-const TabsList = React.forwardRef<
-  React.ElementRef<typeof TabsPrimitive.List>,
-  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
->(({ className, ...props }, ref) => (
-  <TabsPrimitive.List
-    ref={ref}
-    className={cn(
-      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
-      className
-    )}
-    {...props}
-  />
-))
-TabsList.displayName = TabsPrimitive.List.displayName
-
-const TabsTrigger = React.forwardRef<
-  React.ElementRef<typeof TabsPrimitive.Trigger>,
-  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
->(({ className, ...props }, ref) => (
-  <TabsPrimitive.Trigger
-    ref={ref}
-    className={cn(
-      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
-      className
-    )}
-    {...props}
-  />
-))
-TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
-
-const TabsContent = React.forwardRef<
-  React.ElementRef<typeof TabsPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
->(({ className, ...props }, ref) => (
-  <TabsPrimitive.Content
-    ref={ref}
-    className={cn(
-      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
-      className
-    )}
-    {...props}
-  />
-))
-TabsContent.displayName = TabsPrimitive.Content.displayName
-
-export { Tabs, TabsList, TabsTrigger, TabsContent }
diff -ruN /mnt/data/firebase_project/src/components/ui/textarea.tsx /mnt/data/refatorados/src/components/ui/textarea.tsx
--- /mnt/data/firebase_project/src/components/ui/textarea.tsx	2025-06-18 16:04:38.503520411 +0000
+++ /mnt/data/refatorados/src/components/ui/textarea.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,21 +0,0 @@
-import * as React from 'react';
-
-import {cn} from '@/lib/utils';
-
-const Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(
-  ({className, ...props}, ref) => {
-    return (
-      <textarea
-        className={cn(
-          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',
-          className
-        )}
-        ref={ref}
-        {...props}
-      />
-    );
-  }
-);
-Textarea.displayName = 'Textarea';
-
-export {Textarea};
diff -ruN /mnt/data/firebase_project/src/components/ui/toast.tsx /mnt/data/refatorados/src/components/ui/toast.tsx
--- /mnt/data/firebase_project/src/components/ui/toast.tsx	2025-06-18 16:04:38.503915555 +0000
+++ /mnt/data/refatorados/src/components/ui/toast.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,129 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as ToastPrimitives from "@radix-ui/react-toast"
-import { cva, type VariantProps } from "class-variance-authority"
-import { X } from "lucide-react"
-
-import { cn } from "@/lib/utils"
-
-const ToastProvider = ToastPrimitives.Provider
-
-const ToastViewport = React.forwardRef<
-  React.ElementRef<typeof ToastPrimitives.Viewport>,
-  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
->(({ className, ...props }, ref) => (
-  <ToastPrimitives.Viewport
-    ref={ref}
-    className={cn(
-      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
-      className
-    )}
-    {...props}
-  />
-))
-ToastViewport.displayName = ToastPrimitives.Viewport.displayName
-
-const toastVariants = cva(
-  "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
-  {
-    variants: {
-      variant: {
-        default: "border bg-background text-foreground",
-        destructive:
-          "destructive group border-destructive bg-destructive text-destructive-foreground",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-    },
-  }
-)
-
-const Toast = React.forwardRef<
-  React.ElementRef<typeof ToastPrimitives.Root>,
-  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
-    VariantProps<typeof toastVariants>
->(({ className, variant, ...props }, ref) => {
-  return (
-    <ToastPrimitives.Root
-      ref={ref}
-      className={cn(toastVariants({ variant }), className)}
-      {...props}
-    />
-  )
-})
-Toast.displayName = ToastPrimitives.Root.displayName
-
-const ToastAction = React.forwardRef<
-  React.ElementRef<typeof ToastPrimitives.Action>,
-  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
->(({ className, ...props }, ref) => (
-  <ToastPrimitives.Action
-    ref={ref}
-    className={cn(
-      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
-      className
-    )}
-    {...props}
-  />
-))
-ToastAction.displayName = ToastPrimitives.Action.displayName
-
-const ToastClose = React.forwardRef<
-  React.ElementRef<typeof ToastPrimitives.Close>,
-  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
->(({ className, ...props }, ref) => (
-  <ToastPrimitives.Close
-    ref={ref}
-    className={cn(
-      "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
-      className
-    )}
-    toast-close=""
-    {...props}
-  >
-    <X className="h-4 w-4" />
-  </ToastPrimitives.Close>
-))
-ToastClose.displayName = ToastPrimitives.Close.displayName
-
-const ToastTitle = React.forwardRef<
-  React.ElementRef<typeof ToastPrimitives.Title>,
-  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
->(({ className, ...props }, ref) => (
-  <ToastPrimitives.Title
-    ref={ref}
-    className={cn("text-sm font-semibold", className)}
-    {...props}
-  />
-))
-ToastTitle.displayName = ToastPrimitives.Title.displayName
-
-const ToastDescription = React.forwardRef<
-  React.ElementRef<typeof ToastPrimitives.Description>,
-  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
->(({ className, ...props }, ref) => (
-  <ToastPrimitives.Description
-    ref={ref}
-    className={cn("text-sm opacity-90", className)}
-    {...props}
-  />
-))
-ToastDescription.displayName = ToastPrimitives.Description.displayName
-
-type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>
-
-type ToastActionElement = React.ReactElement<typeof ToastAction>
-
-export {
-  type ToastProps,
-  type ToastActionElement,
-  ToastProvider,
-  ToastViewport,
-  Toast,
-  ToastTitle,
-  ToastDescription,
-  ToastClose,
-  ToastAction,
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/toaster.tsx /mnt/data/refatorados/src/components/ui/toaster.tsx
--- /mnt/data/firebase_project/src/components/ui/toaster.tsx	2025-06-18 16:04:38.504345759 +0000
+++ /mnt/data/refatorados/src/components/ui/toaster.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,35 +0,0 @@
-"use client"
-
-import { useToast } from "@/hooks/use-toast"
-import {
-  Toast,
-  ToastClose,
-  ToastDescription,
-  ToastProvider,
-  ToastTitle,
-  ToastViewport,
-} from "@/components/ui/toast"
-
-export function Toaster() {
-  const { toasts } = useToast()
-
-  return (
-    <ToastProvider>
-      {toasts.map(function ({ id, title, description, action, ...props }) {
-        return (
-          <Toast key={id} {...props}>
-            <div className="grid gap-1">
-              {title && <ToastTitle>{title}</ToastTitle>}
-              {description && (
-                <ToastDescription>{description}</ToastDescription>
-              )}
-            </div>
-            {action}
-            <ToastClose />
-          </Toast>
-        )
-      })}
-      <ToastViewport />
-    </ToastProvider>
-  )
-}
diff -ruN /mnt/data/firebase_project/src/components/ui/tooltip.tsx /mnt/data/refatorados/src/components/ui/tooltip.tsx
--- /mnt/data/firebase_project/src/components/ui/tooltip.tsx	2025-06-18 16:04:38.504888781 +0000
+++ /mnt/data/refatorados/src/components/ui/tooltip.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,30 +0,0 @@
-"use client"
-
-import * as React from "react"
-import * as TooltipPrimitive from "@radix-ui/react-tooltip"
-
-import { cn } from "@/lib/utils"
-
-const TooltipProvider = TooltipPrimitive.Provider
-
-const Tooltip = TooltipPrimitive.Root
-
-const TooltipTrigger = TooltipPrimitive.Trigger
-
-const TooltipContent = React.forwardRef<
-  React.ElementRef<typeof TooltipPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
->(({ className, sideOffset = 4, ...props }, ref) => (
-  <TooltipPrimitive.Content
-    ref={ref}
-    sideOffset={sideOffset}
-    className={cn(
-      "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
-      className
-    )}
-    {...props}
-  />
-))
-TooltipContent.displayName = TooltipPrimitive.Content.displayName
-
-export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }
diff -ruN /mnt/data/firebase_project/src/data/classgroups.json /mnt/data/refatorados/src/data/classgroups.json
--- /mnt/data/firebase_project/src/data/classgroups.json	2025-06-18 16:04:38.506045322 +0000
+++ /mnt/data/refatorados/src/data/classgroups.json	1970-01-01 00:00:00.000000000 +0000
@@ -1,753 +0,0 @@
-
-[
-  {
-    "id": "mbqkrhum-c8k98u0",
-    "name": "FMC 13",
-    "shift": "Manhã",
-    "classDays": [
-      "Terça",
-      "Quarta",
-      "Quinta"
-    ],
-    "year": 2025,
-    "status": "Em Andamento",
-    "startDate": "2025-06-10T13:46:51Z",
-    "endDate": "2025-07-10T13:46:51Z",
-    "assignedClassroomId": null
-  },
-  {
-    "id": "cg-2024-001",
-    "name": "FMC10",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-1-aaabbbccc"
-  },
-  {
-    "id": "cg-2024-002",
-    "name": "FMC09",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado",
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-1-aaabbbccc"
-  },
-  {
-    "id": "cg-2024-003",
-    "name": "RAD19",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-1-aaabbbccc"
-  },
-  {
-    "id": "cg-2024-004",
-    "name": "FMC09",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta",
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-1-aaabbbccc"
-  },
-  {
-    "id": "cg-2024-005",
-    "name": "ENF88",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-2-aaabbbddd"
-  },
-  {
-    "id": "cg-2024-006",
-    "name": "ENF87",
-    "shift": "Tarde",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-2-aaabbbddd"
-  },
-  {
-    "id": "cg-2024-007",
-    "name": "RAD21",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-2-aaabbbddd"
-  },
-  {
-    "id": "cg-2024-008",
-    "name": "RAD29",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-2-aaabbbddd"
-  },
-  {
-    "id": "cg-2024-009",
-    "name": "ENF57",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-3-aaabbbeee"
-  },
-  {
-    "id": "cg-2024-010",
-    "name": "ENF55",
-    "shift": "Tarde",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-3-aaabbbeee"
-  },
-  {
-    "id": "cg-2024-011",
-    "name": "ADM20",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-3-aaabbbeee"
-  },
-  {
-    "id": "cg-2024-012",
-    "name": "ENF84",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-3-aaabbbeee"
-  },
-  {
-    "id": "cg-2024-013",
-    "name": "ENF74",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-4-aaabbbfff"
-  },
-  {
-    "id": "cg-2024-014",
-    "name": "ADM21",
-    "shift": "Manhã",
-    "classDays": [
-      "Terça",
-      "Quinta",
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-4-aaabbbfff"
-  },
-  {
-    "id": "cg-2024-015",
-    "name": "ENF66",
-    "shift": "Tarde",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-4-aaabbbfff"
-  },
-  {
-    "id": "cg-2024-016",
-    "name": "ENF54",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-4-aaabbbfff"
-  },
-  {
-    "id": "cg-2024-017",
-    "name": "ENF75",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-4-aaabbbfff"
-  },
-  {
-    "id": "cg-2024-018",
-    "name": "RAD21",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-01-15T00:00:00Z",
-    "endDate": "2024-06-30T00:00:00Z",
-    "assignedClassroomId": "new-sala-4-aaabbbfff"
-  },
-  {
-    "id": "imgdata-001-enf85",
-    "name": "ENF85",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-5-aaabbbggg"
-  },
-  {
-    "id": "imgdata-002-enf81",
-    "name": "ENF81",
-    "shift": "Tarde",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-5-aaabbbggg"
-  },
-  {
-    "id": "imgdata-003-enf58",
-    "name": "ENF58",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-5-aaabbbggg"
-  },
-  {
-    "id": "imgdata-004-enf84",
-    "name": "ENF84",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-5-aaabbbggg"
-  },
-  {
-    "id": "imgdata-005-adm20",
-    "name": "ADM20",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-5-aaabbbggg"
-  },
-  {
-    "id": "imgdata-006-fmc08",
-    "name": "FMC08",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-6-aaabbbhhh"
-  },
-  {
-    "id": "imgdata-007-cdi07im",
-    "name": "CDI07-I",
-    "shift": "Manhã",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-6-aaabbbhhh"
-  },
-  {
-    "id": "imgdata-008-enf62",
-    "name": "ENF62",
-    "shift": "Tarde",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-6-aaabbbhhh"
-  },
-  {
-    "id": "imgdata-009-cdi07it",
-    "name": "CDI07-I",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-6-aaabbbhhh"
-  },
-  {
-    "id": "imgdata-010-enf68",
-    "name": "ENF68",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-7-aaabbbiii"
-  },
-  {
-    "id": "imgdata-011-fmc11t",
-    "name": "FMC11",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-7-aaabbbiii"
-  },
-  {
-    "id": "imgdata-012-enf56",
-    "name": "ENF56",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-7-aaabbbiii"
-  },
-  {
-    "id": "imgdata-013-fmc11n",
-    "name": "FMC11",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-7-aaabbbiii"
-  },
-  {
-    "id": "imgdata-014-enf83",
-    "name": "ENF83",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-8-aaabbbjjj"
-  },
-  {
-    "id": "imgdata-015-enf73m",
-    "name": "ENF73",
-    "shift": "Manhã",
-    "classDays": [
-      "Terça",
-      "Quinta",
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-8-aaabbbjjj"
-  },
-  {
-    "id": "imgdata-016-enf72t",
-    "name": "ENF72",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-8-aaabbbjjj"
-  },
-  {
-    "id": "imgdata-017-enf82",
-    "name": "ENF82",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-8-aaabbbjjj"
-  },
-  {
-    "id": "imgdata-018-enf72n",
-    "name": "ENF72",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-8-aaabbbjjj"
-  },
-  {
-    "id": "imgdata-019-rad22",
-    "name": "RAD22",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-9-aaabbbkkk"
-  },
-  {
-    "id": "imgdata-020-fmc05",
-    "name": "FMC05",
-    "shift": "Manhã",
-    "classDays": [
-      "Terça",
-      "Quinta",
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-9-aaabbbkkk"
-  },
-  {
-    "id": "imgdata2-001-fmc06",
-    "name": "FMC06",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-9-aaabbbkkk"
-  },
-  {
-    "id": "imgdata2-002-enf80",
-    "name": "ENF80",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-10-aaabbblll"
-  },
-  {
-    "id": "imgdata2-003-enf76",
-    "name": "ENF76",
-    "shift": "Tarde",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-10-aaabbblll"
-  },
-  {
-    "id": "imgdata2-004-enf79-tarde",
-    "name": "ENF79",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-10-aaabbblll"
-  },
-  {
-    "id": "imgdata2-005-enf86",
-    "name": "ENF86",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-10-aaabbblll"
-  },
-  {
-    "id": "imgdata2-006-enf79-noite",
-    "name": "ENF79",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-10-aaabbblll"
-  },
-  {
-    "id": "imgdata2-007-rad24",
-    "name": "RAD24",
-    "shift": "Manhã",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-11-aaabbbmmm"
-  },
-  {
-    "id": "imgdata2-008-adm13-tarde",
-    "name": "ADM13",
-    "shift": "Tarde",
-    "classDays": [
-      "Sábado"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-11-aaabbbmmm"
-  },
-  {
-    "id": "imgdata2-009-rad18",
-    "name": "RAD18",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-11-aaabbbmmm"
-  },
-  {
-    "id": "imgdata2-010-adm13-noite",
-    "name": "ADM13",
-    "shift": "Noite",
-    "classDays": [
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-11-aaabbbmmm"
-  },
-  {
-    "id": "imgdata2-011-fmc13",
-    "name": "FMC13",
-    "shift": "Manhã",
-    "classDays": [
-      "Terça",
-      "Quarta",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-12-aaabbbnnn"
-  },
-  {
-    "id": "imgdata2-012-fmc12-tarde",
-    "name": "FMC12",
-    "shift": "Noite",
-    "classDays": [
-      "Sábado",
-      "Terça",
-      "Quinta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-12-aaabbbnnn"
-  },
-  {
-    "id": "imgdata2-013-rad30",
-    "name": "RAD30",
-    "shift": "Noite",
-    "classDays": [
-      "Segunda",
-      "Quarta",
-      "Sexta"
-    ],
-    "year": 2024,
-    "status": "Em Andamento",
-    "startDate": "2024-08-01T00:00:00Z",
-    "endDate": "2024-12-20T00:00:00Z",
-    "assignedClassroomId": "new-sala-12-aaabbbnnn"
-  }
-]
diff -ruN /mnt/data/firebase_project/src/data/classrooms.json /mnt/data/refatorados/src/data/classrooms.json
--- /mnt/data/firebase_project/src/data/classrooms.json	2025-06-18 16:04:38.506517274 +0000
+++ /mnt/data/refatorados/src/data/classrooms.json	1970-01-01 00:00:00.000000000 +0000
@@ -1,156 +0,0 @@
-
-[
-  {
-    "id": "new-sala-1-aaabbbccc",
-    "name": "Sala 1",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-2-aaabbbddd",
-    "name": "Sala 2",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-3-aaabbbeee",
-    "name": "Sala 3",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-4-aaabbbfff",
-    "name": "Sala 4",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-5-aaabbbggg",
-    "name": "Sala 5",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-6-aaabbbhhh",
-    "name": "Sala 6",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-7-aaabbbiii",
-    "name": "Sala 7",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-8-aaabbbjjj",
-    "name": "Sala 8",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-9-aaabbbkkk",
-    "name": "Sala 9",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-10-aaabbblll",
-    "name": "Sala 10",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-11-aaabbbmmm",
-    "name": "Sala 11",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-12-aaabbbnnn",
-    "name": "Sala 12",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-13-aaabbbooo",
-    "name": "Sala 13",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-14-aaabbbppp",
-    "name": "Sala 14",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-15-aaabbbqqq",
-    "name": "Sala 15",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-16-aaabbbrrr",
-    "name": "Sala 16",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  },
-  {
-    "id": "new-sala-17-aaabbbsss",
-    "name": "Sala 17",
-    "capacity": 30,
-    "resources": [],
-    "isLab": false,
-    "isUnderMaintenance": false,
-    "maintenanceReason": ""
-  }
-]
diff -ruN /mnt/data/firebase_project/src/data/courses.json /mnt/data/refatorados/src/data/courses.json
--- /mnt/data/firebase_project/src/data/courses.json	2025-06-18 16:04:38.507064579 +0000
+++ /mnt/data/refatorados/src/data/courses.json	1970-01-01 00:00:00.000000000 +0000
@@ -1,2 +0,0 @@
-
-[]
diff -ruN /mnt/data/firebase_project/src/data/event_reservations.json /mnt/data/refatorados/src/data/event_reservations.json
--- /mnt/data/firebase_project/src/data/event_reservations.json	2025-06-18 16:04:38.507537400 +0000
+++ /mnt/data/refatorados/src/data/event_reservations.json	1970-01-01 00:00:00.000000000 +0000
@@ -1,2 +0,0 @@
-
-[]
diff -ruN /mnt/data/firebase_project/src/data/modules.json /mnt/data/refatorados/src/data/modules.json
--- /mnt/data/firebase_project/src/data/modules.json	2025-06-18 16:04:38.508641473 +0000
+++ /mnt/data/refatorados/src/data/modules.json	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-[]
diff -ruN /mnt/data/firebase_project/src/data/professors.json /mnt/data/refatorados/src/data/professors.json
--- /mnt/data/firebase_project/src/data/professors.json	2025-06-18 16:04:38.509071287 +0000
+++ /mnt/data/refatorados/src/data/professors.json	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-[]
diff -ruN /mnt/data/firebase_project/src/data/recurring_reservations.json /mnt/data/refatorados/src/data/recurring_reservations.json
--- /mnt/data/firebase_project/src/data/recurring_reservations.json	2025-06-18 16:04:38.509469189 +0000
+++ /mnt/data/refatorados/src/data/recurring_reservations.json	1970-01-01 00:00:00.000000000 +0000
@@ -1,2 +0,0 @@
-
-[]
diff -ruN /mnt/data/firebase_project/src/data/reservations.json /mnt/data/refatorados/src/data/reservations.json
--- /mnt/data/firebase_project/src/data/reservations.json	2025-06-18 16:04:38.509849818 +0000
+++ /mnt/data/refatorados/src/data/reservations.json	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-[]
diff -ruN /mnt/data/firebase_project/src/hooks/use-mobile.tsx /mnt/data/refatorados/src/hooks/use-mobile.tsx
--- /mnt/data/firebase_project/src/hooks/use-mobile.tsx	2025-06-18 16:04:38.510686933 +0000
+++ /mnt/data/refatorados/src/hooks/use-mobile.tsx	1970-01-01 00:00:00.000000000 +0000
@@ -1,19 +0,0 @@
-import * as React from "react"
-
-const MOBILE_BREAKPOINT = 768
-
-export function useIsMobile() {
-  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)
-
-  React.useEffect(() => {
-    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
-    const onChange = () => {
-      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
-    }
-    mql.addEventListener("change", onChange)
-    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
-    return () => mql.removeEventListener("change", onChange)
-  }, [])
-
-  return !!isMobile
-}
diff -ruN /mnt/data/firebase_project/src/hooks/use-toast.ts /mnt/data/refatorados/src/hooks/use-toast.ts
--- /mnt/data/firebase_project/src/hooks/use-toast.ts	2025-06-18 16:04:38.512325865 +0000
+++ /mnt/data/refatorados/src/hooks/use-toast.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,194 +0,0 @@
-"use client"
-
-// Inspired by react-hot-toast library
-import * as React from "react"
-
-import type {
-  ToastActionElement,
-  ToastProps,
-} from "@/components/ui/toast"
-
-const TOAST_LIMIT = 1
-const TOAST_REMOVE_DELAY = 1000000
-
-type ToasterToast = ToastProps & {
-  id: string
-  title?: React.ReactNode
-  description?: React.ReactNode
-  action?: ToastActionElement
-}
-
-const actionTypes = {
-  ADD_TOAST: "ADD_TOAST",
-  UPDATE_TOAST: "UPDATE_TOAST",
-  DISMISS_TOAST: "DISMISS_TOAST",
-  REMOVE_TOAST: "REMOVE_TOAST",
-} as const
-
-let count = 0
-
-function genId() {
-  count = (count + 1) % Number.MAX_SAFE_INTEGER
-  return count.toString()
-}
-
-type ActionType = typeof actionTypes
-
-type Action =
-  | {
-      type: ActionType["ADD_TOAST"]
-      toast: ToasterToast
-    }
-  | {
-      type: ActionType["UPDATE_TOAST"]
-      toast: Partial<ToasterToast>
-    }
-  | {
-      type: ActionType["DISMISS_TOAST"]
-      toastId?: ToasterToast["id"]
-    }
-  | {
-      type: ActionType["REMOVE_TOAST"]
-      toastId?: ToasterToast["id"]
-    }
-
-interface State {
-  toasts: ToasterToast[]
-}
-
-const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()
-
-const addToRemoveQueue = (toastId: string) => {
-  if (toastTimeouts.has(toastId)) {
-    return
-  }
-
-  const timeout = setTimeout(() => {
-    toastTimeouts.delete(toastId)
-    dispatch({
-      type: "REMOVE_TOAST",
-      toastId: toastId,
-    })
-  }, TOAST_REMOVE_DELAY)
-
-  toastTimeouts.set(toastId, timeout)
-}
-
-export const reducer = (state: State, action: Action): State => {
-  switch (action.type) {
-    case "ADD_TOAST":
-      return {
-        ...state,
-        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
-      }
-
-    case "UPDATE_TOAST":
-      return {
-        ...state,
-        toasts: state.toasts.map((t) =>
-          t.id === action.toast.id ? { ...t, ...action.toast } : t
-        ),
-      }
-
-    case "DISMISS_TOAST": {
-      const { toastId } = action
-
-      // ! Side effects ! - This could be extracted into a dismissToast() action,
-      // but I'll keep it here for simplicity
-      if (toastId) {
-        addToRemoveQueue(toastId)
-      } else {
-        state.toasts.forEach((toast) => {
-          addToRemoveQueue(toast.id)
-        })
-      }
-
-      return {
-        ...state,
-        toasts: state.toasts.map((t) =>
-          t.id === toastId || toastId === undefined
-            ? {
-                ...t,
-                open: false,
-              }
-            : t
-        ),
-      }
-    }
-    case "REMOVE_TOAST":
-      if (action.toastId === undefined) {
-        return {
-          ...state,
-          toasts: [],
-        }
-      }
-      return {
-        ...state,
-        toasts: state.toasts.filter((t) => t.id !== action.toastId),
-      }
-  }
-}
-
-const listeners: Array<(state: State) => void> = []
-
-let memoryState: State = { toasts: [] }
-
-function dispatch(action: Action) {
-  memoryState = reducer(memoryState, action)
-  listeners.forEach((listener) => {
-    listener(memoryState)
-  })
-}
-
-type Toast = Omit<ToasterToast, "id">
-
-function toast({ ...props }: Toast) {
-  const id = genId()
-
-  const update = (props: ToasterToast) =>
-    dispatch({
-      type: "UPDATE_TOAST",
-      toast: { ...props, id },
-    })
-  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })
-
-  dispatch({
-    type: "ADD_TOAST",
-    toast: {
-      ...props,
-      id,
-      open: true,
-      onOpenChange: (open) => {
-        if (!open) dismiss()
-      },
-    },
-  })
-
-  return {
-    id: id,
-    dismiss,
-    update,
-  }
-}
-
-function useToast() {
-  const [state, setState] = React.useState<State>(memoryState)
-
-  React.useEffect(() => {
-    listeners.push(setState)
-    return () => {
-      const index = listeners.indexOf(setState)
-      if (index > -1) {
-        listeners.splice(index, 1)
-      }
-    }
-  }, [state])
-
-  return {
-    ...state,
-    toast,
-    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
-  }
-}
-
-export { useToast, toast }
diff -ruN /mnt/data/firebase_project/src/lib/actions/classgroups.ts /mnt/data/refatorados/src/lib/actions/classgroups.ts
--- /mnt/data/firebase_project/src/lib/actions/classgroups.ts	2025-06-18 16:04:38.513410166 +0000
+++ /mnt/data/refatorados/src/lib/actions/classgroups.ts	2025-06-18 16:18:41.165991586 +0000
@@ -142,4 +142,4 @@
     console.error('Failed to assign classroom to class group:', error);
     return { success: false, message: 'Erro ao atribuir sala à turma.' };
   }
-}
+}
\ No newline at end of file
diff -ruN /mnt/data/firebase_project/src/lib/actions/classrooms.ts /mnt/data/refatorados/src/lib/actions/classrooms.ts
--- /mnt/data/firebase_project/src/lib/actions/classrooms.ts	2025-06-18 16:04:38.514486159 +0000
+++ /mnt/data/refatorados/src/lib/actions/classrooms.ts	2025-06-18 16:18:41.166524607 +0000
@@ -106,4 +106,4 @@
 export async function getClassroomById(id: string): Promise<Classroom | undefined> {
   const classrooms = await readData<Classroom>('classrooms.json');
   return classrooms.find(c => c.id === id);
-}
+}
\ No newline at end of file
diff -ruN /mnt/data/firebase_project/src/lib/actions/courses.ts /mnt/data/refatorados/src/lib/actions/courses.ts
--- /mnt/data/firebase_project/src/lib/actions/courses.ts	2025-06-18 16:04:38.515059670 +0000
+++ /mnt/data/refatorados/src/lib/actions/courses.ts	2025-06-18 16:18:41.167105003 +0000
@@ -60,4 +60,4 @@
 export async function getCourseById(id: string): Promise<Course | undefined> {
   const courses = await readData<Course>('courses.json');
   return courses.find(c => c.id === id);
-}
+}
\ No newline at end of file
diff -ruN /mnt/data/firebase_project/src/lib/actions/event_reservations.ts /mnt/data/refatorados/src/lib/actions/event_reservations.ts
--- /mnt/data/firebase_project/src/lib/actions/event_reservations.ts	2025-06-18 16:04:38.515797203 +0000
+++ /mnt/data/refatorados/src/lib/actions/event_reservations.ts	2025-06-18 16:18:41.167617828 +0000
@@ -117,4 +117,4 @@
     console.error('Failed to delete event reservation:', error);
     return { success: false, message: 'Erro ao excluir reserva de evento.' };
   }
-}
+}
\ No newline at end of file
diff -ruN /mnt/data/firebase_project/src/lib/actions/recurring_reservations.ts /mnt/data/refatorados/src/lib/actions/recurring_reservations.ts
--- /mnt/data/firebase_project/src/lib/actions/recurring_reservations.ts	2025-06-18 16:04:38.516290485 +0000
+++ /mnt/data/refatorados/src/lib/actions/recurring_reservations.ts	2025-06-18 16:18:41.168057830 +0000
@@ -120,4 +120,3 @@
     return { success: false, message: 'Erro ao excluir reserva recorrente.' };
   }
 }
-
diff -ruN /mnt/data/firebase_project/src/lib/constants.ts /mnt/data/refatorados/src/lib/constants.ts
--- /mnt/data/firebase_project/src/lib/constants.ts	2025-06-18 16:04:38.516777746 +0000
+++ /mnt/data/refatorados/src/lib/constants.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,14 +0,0 @@
-import type { DayOfWeek, PeriodOfDay } from "@/types";
-
-export const DAYS_OF_WEEK: DayOfWeek[] = ['Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado', 'Domingo'];
-export const JS_DAYS_OF_WEEK_MAP_TO_PT: DayOfWeek[] = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'];
-
-export const PERIODS_OF_DAY: PeriodOfDay[] = ['Manhã', 'Tarde', 'Noite'];
-export const CLASS_GROUP_STATUSES: string[] = ['Planejada', 'Em Andamento', 'Concluída', 'Cancelada'];
-export const CLASS_GROUP_SHIFTS: PeriodOfDay[] = ['Manhã', 'Tarde', 'Noite'];
-
-export const SHIFT_TIME_RANGES: Record<PeriodOfDay, { start: string; end: string }> = {
-  'Manhã': { start: '06:00', end: '11:59' },
-  'Tarde': { start: '12:00', end: '17:59' },
-  'Noite': { start: '18:00', end: '23:59' },
-};
diff -ruN /mnt/data/firebase_project/src/lib/data-utils.ts /mnt/data/refatorados/src/lib/data-utils.ts
--- /mnt/data/firebase_project/src/lib/data-utils.ts	2025-06-18 16:04:38.518935052 +0000
+++ /mnt/data/refatorados/src/lib/data-utils.ts	2025-06-18 16:21:14.187927510 +0000
@@ -1,8 +1,7 @@
-
 import fs from 'fs/promises';
 import path from 'path';
 
-const dataDir = path.join(process.cwd(), 'src', 'data');
+const dataDir = process.env.DATA_DIR || path.join(process.cwd(), 'src', 'data');
 
 export async function readData<T>(filename: string): Promise<T[]> {
   const filePath = path.join(dataDir, filename);
@@ -10,56 +9,40 @@
     const jsonData = await fs.readFile(filePath, 'utf-8');
 
     if (!jsonData || jsonData.trim() === '') {
-      // File is empty or whitespace only, treat as empty array.
       return [];
     }
 
     const parsedData = JSON.parse(jsonData);
 
     if (!Array.isArray(parsedData)) {
-      // Log this specific case: valid JSON, but not an array.
-      // Removed the attempt to overwrite the file here.
-      console.warn(`Data in ${filename} is valid JSON but not an array. Content: ${JSON.stringify(parsedData)}. Returning empty array.`);
-      return []; // Return empty array as the content was not the expected array.
-    }
-
-    // Filter out null, undefined, or non-object items from the array if T is expected to be an array of objects.
-    const validItems = parsedData.filter(item => item !== null && typeof item === 'object');
-    
-    if (validItems.length !== parsedData.length) {
-        // console.warn(`Filtered out non-object or null items from ${filename}. Original count: ${parsedData.length}, Valid count: ${validItems.length}`);
+      console.warn(`[WARN] Conteúdo em ${filename} é JSON válido, mas não é um array.`);
+      return [];
     }
 
-    return validItems as T[];
+    return parsedData.filter(item => item !== null && typeof item === 'object') as T[];
   } catch (error) {
     const nodeError = error as NodeJS.ErrnoException;
     if (nodeError.code === 'ENOENT') {
-      // File doesn't exist. Attempt to create it with an empty array.
-      try {
-        await writeData<T>(filename, []);
-      } catch (writeError) {
-        console.error(`Error creating initial data file ${filename} after ENOENT:`, (writeError as Error).message);
-      }
+      console.warn(`[INFO] Arquivo ${filename} não encontrado. Retornando array vazio.`);
       return [];
     }
-    // For other errors (e.g., malformed JSON that JSON.parse throws on, permissions issues), log and return empty.
-    console.error(`Error reading or parsing data from ${filename}:`, nodeError.message);
+
+    console.error(`[ERRO] Falha ao ler ${filename}:`, error);
     return [];
   }
 }
 
 export async function writeData<T>(filename: string, data: T[]): Promise<void> {
+  const filePath = path.join(dataDir, filename);
   try {
-    const filePath = path.join(dataDir, filename);
-    await fs.mkdir(dataDir, { recursive: true }); // Ensure data directory exists
-    await fs.writeFile(filePath, JSON.stringify(data, null, 2), 'utf-8');
+    const jsonString = JSON.stringify(data, null, 2);
+    await fs.writeFile(filePath, jsonString, 'utf-8');
   } catch (error) {
-    console.error(`Error writing data to ${filename}:`, error);
-    throw error; // Re-throw to be handled by Server Action or caller
+    console.error(`[ERRO] Falha ao escrever em ${filename}:`, error);
+    throw error;
   }
 }
 
 export function generateId(): string {
-  return `${Date.now().toString(36)}-${Math.random().toString(36).substring(2, 9)}`;
-}
-
+  return Math.random().toString(36).substr(2, 9);
+}
\ No newline at end of file
diff -ruN /mnt/data/firebase_project/src/lib/schemas/classrooms.ts /mnt/data/refatorados/src/lib/schemas/classrooms.ts
--- /mnt/data/firebase_project/src/lib/schemas/classrooms.ts	2025-06-18 16:04:38.520133727 +0000
+++ /mnt/data/refatorados/src/lib/schemas/classrooms.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,23 +0,0 @@
-
-import { z } from 'zod';
-
-// Base schema for common fields, used for editing form and update action validation
-export const classroomEditSchema = z.object({
-  name: z.string().min(1, { message: "O nome da sala é obrigatório." })
-                 .min(3, { message: "O nome da sala deve ter pelo menos 3 caracteres." }),
-  capacity: z.coerce.number({ invalid_type_error: "Capacidade deve ser um número." })
-                     .min(1, { message: "A capacidade deve ser pelo menos 1." }),
-  isUnderMaintenance: z.boolean().optional(),
-  maintenanceReason: z.string().max(200, "O motivo da manutenção deve ter no máximo 200 caracteres.").optional(),
-});
-export type ClassroomEditFormValues = z.infer<typeof classroomEditSchema>;
-
-
-// Schema for creating a classroom, extending the base/edit schema
-export const classroomCreateSchema = classroomEditSchema.extend({
-  resources: z.array(z.string()).optional(),
-  isLab: z.boolean().optional(),
-  // isUnderMaintenance is inherited from classroomEditSchema and is optional
-  // maintenanceReason is inherited from classroomEditSchema and is optional
-});
-export type ClassroomCreateValues = z.infer<typeof classroomCreateSchema>;
diff -ruN /mnt/data/firebase_project/src/lib/schemas/event_reservations.ts /mnt/data/refatorados/src/lib/schemas/event_reservations.ts
--- /mnt/data/firebase_project/src/lib/schemas/event_reservations.ts	2025-06-18 16:04:38.520888147 +0000
+++ /mnt/data/refatorados/src/lib/schemas/event_reservations.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,29 +0,0 @@
-
-import { z } from 'zod';
-import { parseISO, isValid as isValidDate } from 'date-fns';
-
-const timeStringSchema = z.string().regex(/^([01]\d|2[0-3]):([0-5]\d)$/, "Formato de hora inválido. Use HH:mm.");
-const dateStringSchema = z.string().regex(/^\d{4}-\d{2}-\d{2}$/, "Formato de data inválido. Use YYYY-MM-DD.")
-  .refine(val => isValidDate(parseISO(val)), {
-    message: "Data inválida.",
-  });
-
-export const eventReservationFormSchema = z.object({
-  classroomId: z.string().min(1, "Selecione uma sala."),
-  title: z.string().min(3, "O título do evento deve ter pelo menos 3 caracteres.").max(100, "Título muito longo."),
-  date: dateStringSchema,
-  startTime: timeStringSchema,
-  endTime: timeStringSchema,
-  reservedBy: z.string().min(2, "O nome do responsável deve ter pelo menos 2 caracteres.").max(100, "Nome do responsável muito longo."),
-  details: z.string().max(500, "Detalhes muito longos.").optional(),
-}).refine(data => {
-  const [startHour, startMinute] = data.startTime.split(':').map(Number);
-  const [endHour, endMinute] = data.endTime.split(':').map(Number);
-  return (startHour * 60 + startMinute) < (endHour * 60 + endMinute);
-}, {
-  message: "A hora de início deve ser anterior à hora de fim.",
-  path: ["endTime"],
-});
-
-export type EventReservationFormValues = z.infer<typeof eventReservationFormSchema>;
-
diff -ruN /mnt/data/firebase_project/src/lib/schemas/recurring-reservations.ts /mnt/data/refatorados/src/lib/schemas/recurring-reservations.ts
--- /mnt/data/firebase_project/src/lib/schemas/recurring-reservations.ts	2025-06-18 16:04:38.521649505 +0000
+++ /mnt/data/refatorados/src/lib/schemas/recurring-reservations.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,37 +0,0 @@
-
-import { z } from 'zod';
-import { parseISO, isBefore, isEqual } from 'date-fns'; // Using parseISO for robust date parsing
-import { CLASS_GROUP_SHIFTS } from '@/lib/constants'; // Import shifts for enum
-
-const dateStringSchema = z.string().regex(/^\d{4}-\d{2}-\d{2}$/, "Formato de data inválido. Use YYYY-MM-DD.");
-
-export const recurringReservationFormSchema = z.object({
-  classGroupId: z.string().min(1, "Selecione uma turma."),
-  classroomId: z.string().min(1, "Selecione uma sala."),
-  startDate: dateStringSchema.refine(val => !isNaN(parseISO(val).getTime()), {
-    message: "Data de início inválida.",
-  }),
-  endDate: dateStringSchema.refine(val => !isNaN(parseISO(val).getTime()), {
-    message: "Data de fim inválida.",
-  }),
-  shift: z.enum(CLASS_GROUP_SHIFTS as [string, ...string[]], { // Use imported shifts
-    required_error: "Selecione um turno.",
-    invalid_type_error: "Turno inválido."
-  }),
-  purpose: z.string().min(3, "O propósito deve ter pelo menos 3 caracteres.").max(100, "Propósito muito longo."),
-}).refine(data => {
-  try {
-    const start = parseISO(data.startDate);
-    const end = parseISO(data.endDate);
-    return isBefore(start, end) || isEqual(start, end);
-  } catch (e) {
-    return false; 
-  }
-}, {
-  message: "A data de início deve ser anterior ou igual à data de fim.",
-  path: ["endDate"],
-});
-// Removed refine for startTime < endTime as these fields are removed
-
-export type RecurringReservationFormValues = z.infer<typeof recurringReservationFormSchema>;
-
diff -ruN /mnt/data/firebase_project/src/lib/utils.ts /mnt/data/refatorados/src/lib/utils.ts
--- /mnt/data/firebase_project/src/lib/utils.ts	2025-06-18 16:04:38.522386358 +0000
+++ /mnt/data/refatorados/src/lib/utils.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,6 +0,0 @@
-import { clsx, type ClassValue } from "clsx"
-import { twMerge } from "tailwind-merge"
-
-export function cn(...inputs: ClassValue[]) {
-  return twMerge(clsx(inputs))
-}
diff -ruN /mnt/data/firebase_project/src/next.config.ts /mnt/data/refatorados/src/next.config.ts
--- /mnt/data/firebase_project/src/next.config.ts	2025-06-18 16:04:38.522836143 +0000
+++ /mnt/data/refatorados/src/next.config.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,24 +0,0 @@
-
-import type {NextConfig} from 'next';
-
-const nextConfig: NextConfig = {
-  /* config options here */
-  typescript: {
-    ignoreBuildErrors: false, 
-  },
-  eslint: {
-    ignoreDuringBuilds: false, 
-  },
-  images: {
-    remotePatterns: [
-      {
-        protocol: 'https',
-        hostname: 'placehold.co',
-        port: '',
-        pathname: '/**',
-      },
-    ],
-  },
-};
-
-export default nextConfig;
diff -ruN /mnt/data/firebase_project/src/types/index.ts /mnt/data/refatorados/src/types/index.ts
--- /mnt/data/firebase_project/src/types/index.ts	2025-06-18 16:04:38.523687042 +0000
+++ /mnt/data/refatorados/src/types/index.ts	1970-01-01 00:00:00.000000000 +0000
@@ -1,65 +0,0 @@
-
-export type DayOfWeek = 'Segunda' | 'Terça' | 'Quarta' | 'Quinta' | 'Sexta' | 'Sábado' | 'Domingo';
-export type PeriodOfDay = 'Manhã' | 'Tarde' | 'Noite';
-
-export interface Classroom {
-  id: string;
-  name: string;
-  capacity?: number;
-  resources: string[];
-  isLab?: boolean; // Helper to identify labs easily
-  isUnderMaintenance?: boolean; // Indica se a sala está em manutenção
-  maintenanceReason?: string; // Motivo da manutenção
-}
-
-export interface Course { // Este é o tipo para "Disciplinas"
-  id: string;
-  name: string;
-  workload: number; // Quantidade de aulas
-}
-
-export type ClassGroupStatus = 'Planejada' | 'Em Andamento' | 'Concluída' | 'Cancelada';
-export type ClassGroupShift = 'Manhã' | 'Tarde' | 'Noite';
-
-export interface ClassGroup {
-  id: string;
-  name: string;
-  year: number;
-  shift: ClassGroupShift;
-  status: ClassGroupStatus;
-  startDate: string; // ISO Date string
-  endDate: string; // ISO Date string
-  assignedClassroomId?: string;
-  classDays: DayOfWeek[];
-}
-
-// Represents recurring reservations made by a specific class group for a room
-export interface ClassroomRecurringReservation {
-  id: string;
-  classGroupId: string;
-  classroomId: string;
-  startDate: string; // ISO Date string YYYY-MM-DD
-  endDate: string; // ISO Date string YYYY-MM-DD
-  shift: PeriodOfDay; 
-  purpose: string;
-}
-
-// Represents ad-hoc, single instance event/room bookings
-export interface EventReservation {
-  id: string;
-  classroomId: string;
-  title: string; // Name of the event
-  date: string; // ISO Date string YYYY-MM-DD
-  startTime: string; // HH:mm format
-  endTime: string; // HH:mm format
-  reservedBy: string; // Person or department reserving
-  details?: string; // Optional additional details
-}
-
-
-export interface DashboardStats {
-  totalClassGroups: number;
-  activeClassGroups: number;
-  plannedClassGroups: number;
-  totalClassrooms: number;
-}
